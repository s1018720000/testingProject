truncate table MONI_EXPORT;

INSERT INTO MONI_EXPORT (asid,TICKET_NUMBER,EN_NAME,CH_NAME,STATUS,JDBC,PLATFORM,CRON_EXPRESSION,SCRIPT,MAIL_TO,MAIL_CC,MAIL_BCC,MAIL_SUBJECT,MAIL_CONTENT,CREATE_BY,CREATE_TIME,UPDATE_BY,UPDATE_TIME,REQUESTER,LAST_EXPORT) VALUES
('EID-13','ASI-2900-A','( EID-13 ) PF2 ASI-2900 Mail Data Export(daily/11:45)','( EID-13 ) PF2 ASI-2900 站内信系统数据导出(每日/11:45)','0','ub8-pf5-core-sec','5.0','0 45 11 * * ?','SELECT
  CASE WHEN M.SENDRD_NAME = ''-1'' AND M.OPERATOR_ID IS NOT NULL THEN (''ADMIN-''||M.OPERATOR_ID)
    WHEN M.SENDRD_NAME = ''-1'' THEN ''SYSTEM''
    ELSE M.SENDRD_NAME
  END AS "發信者",
  MR.CUSTOMER_NAME AS "收信者",
  M.SM_TITLE AS "站內信標題",
  M.PUBLISH_TIME AS "發送時間",
  CASE WHEN MR.READ_FLAG=0 THEN ''未讀'' ELSE ''已讀'' END AS "是否已讀",
  REPLACE(M.SM_CONTENT, CHR(10), CHR(32)) CONTENT
FROM CORE.PMS_SHORT_MSG M
LEFT JOIN CORE.PMS_SHORT_MSG_RECIPIENT MR
ON M.MSG_ID = MR.MSG_ID
WHERE TRUNC(M.PUBLISH_TIME)=TRUNC(SYSDATE-1) AND M.SEND_ALL = 0
UNION
SELECT
  CASE WHEN M.SENDRD_NAME = ''-1'' AND M.OPERATOR_ID IS NOT NULL THEN (''ADMIN-''||M.OPERATOR_ID)
    WHEN M.SENDRD_NAME = ''-1'' THEN ''SYSTEM''
    ELSE M.SENDRD_NAME
  END ,
  ''ALL'' ,
  M.SM_TITLE ,
  M.PUBLISH_TIME ,
  (
    SELECT CASE WHEN SUM(MR.READ_FLAG)=COUNT(MR.READ_FLAG) THEN ''已讀'' WHEN SUM(MR.READ_FLAG)=0 THEN ''未讀'' ELSE ''部份已讀'' END
    FROM CORE.PMS_SHORT_MSG_RECIPIENT MR WHERE M.MSG_ID=MR.MSG_ID
  ),
  REPLACE(M.SM_CONTENT, CHR(10), CHR(32)) CONTENT
FROM CORE.PMS_SHORT_MSG M
WHERE TRUNC(M.PUBLISH_TIME)=TRUNC(SYSDATE-1) AND M.SEND_ALL = 1','tweety.h@my-cpg.com;srvduty@my-cpg.com','','','( EID-13 ) PF2 ASI-2900 站内信系统数据导出(每日/11:45)','Please see attached file of ( EID-13 ) PF2 ASI-2900 站内信系统数据导出(每日/11:45)

Thank you.


','jefferson','2015-09-17 09:49:22','kimberlyclaire','2020-01-31 15:19:21','SRV',null);
INSERT INTO MONI_EXPORT (asid,TICKET_NUMBER,EN_NAME,CH_NAME,STATUS,JDBC,PLATFORM,CRON_EXPRESSION,SCRIPT,MAIL_TO,MAIL_CC,MAIL_BCC,MAIL_SUBJECT,MAIL_CONTENT,CREATE_BY,CREATE_TIME,UPDATE_BY,UPDATE_TIME,REQUESTER,LAST_EXPORT) VALUES
('EID-19','ASI-6086','( EID-19 ) PF1 ASI-6086 Request For Raw Data(daily)','( EID-19 ) PF1 ASI-6086 提现任务流数据导出(每日)','0','ub8-pf1-sec','1.0','0 0 1 * * ?','SELECT
        WKF_TASKS_HIS.TASK_ID AS 任务号,
        DECODE(WKF_TASKS_HIS.TASK_TYPE,''1'',''提现'',''2'',''充值'',''3'',''大额提现'',''4'',''超额退款'',''5'',''平帐'',''6'',''转帐'','''') AS 工作流程,
        DECODE(WKF_TASKS_HIS.TASK_SUBTYPE,''1'',''客户审单'',''2'',''会计审单'',''3'',''出纳提现'','''') AS 步骤,
        DECODE(WKF_TASKS_HIS.TASK_STATUS,''0'',''未操作'',''1'',''审核通过'',''2'',''审核不通过'',''3'',''结算成功'',''4'',''结算失败'',''5'',''操作完成'','''') AS 任务状态,
        DECODE(WKF_TASKS_HIS.TASK_FLAG,''0'',''未领取'',''1'',''领取任务'',''2'',''消领任务'',''3'',''完成任务'','''') AS 操作类型,
        LOTT_VW_MEMBER_INFO.ACCOUNTS AS 发起人,
        TO_CHAR(WKF_TASKS_HIS.GENERATE_TIME, ''YYYY-MM-DD HH24:MI:SS'') AS 发起时间,
        ((WKF_TASKS_HIS.START_TIME-WKF_TASKS_HIS.GENERATE_TIME)*24*60*60) AS 领取时长,
        LOTT_VW_ADMIN.REALNAME AS 执行人,
        TO_CHAR(WKF_TASKS_HIS.START_TIME, ''YYYY-MM-DD HH24:MI:SS'') AS 处理起始时间,
        TO_CHAR(WKF_TASKS_HIS.END_TIME, ''YYYY-MM-DD HH24:MI:SS'') AS 处理完成时间,
        ((WKF_TASKS_HIS.END_TIME - WKF_TASKS_HIS.START_TIME)*24*60*60) AS 处理时长,
        WKF_TASKS_HIS.PRIORITY AS 优先级,
        LOTT_ATM_REQ.AMOUNT AS 提领金额,
        ATTENTION_TAG.ATTEN_NAME AS 关注标签,
		CASE
			WHEN LOTT_ATM_REQ.ASSESS_FLAG=0 AND LOTT_ATM_REQ.STATE=1 THEN ''提現申請''
			WHEN LOTT_ATM_REQ.ASSESS_FLAG=1 AND LOTT_ATM_REQ.STATE=1 THEN ''審核通過''
			WHEN LOTT_ATM_REQ.ASSESS_FLAG=1 AND LOTT_ATM_REQ.STATE=2 THEN ''提現成功''
			WHEN LOTT_ATM_REQ.ASSESS_FLAG=1 AND LOTT_ATM_REQ.STATE=3 THEN ''提現失敗''
			WHEN LOTT_ATM_REQ.ASSESS_FLAG=2 AND LOTT_ATM_REQ.STATE IN (1,3) THEN ''審核不通過''
			ELSE ''''
		END AS 提现状态,
		WKF_TASKS_HIS.REMARKS AS 备注,
		LOTT_BANK_WITHDRAW_ARRIVALS_VW.PROVIDER_OPERATE_TIME  到账时间,
		ROUND((CAST(LOTT_BANK_WITHDRAW_ARRIVALS_VW.PROVIDER_OPERATE_TIME  AS DATE)-CAST(WKF_TASKS_HIS.END_TIME AS DATE))*86400,2) 客户到账时长,
		ROUND((CAST(LOTT_BANK_WITHDRAW_ARRIVALS_VW.PROVIDER_OPERATE_TIME AS DATE)-CAST(LOTT_ATM_REQ.REQ_TIME AS DATE))*86400,2) 处理提现总时长
FROM LOTT_NEW_A3D1.WKF_TASKS_HIS
LEFT JOIN LOTT_NEW_A3D1.LOTT_VW_MEMBER_INFO ON ABS(WKF_TASKS_HIS.GENERATE_PERSON) = LOTT_VW_MEMBER_INFO.GID
LEFT JOIN LOTT_NEW_A3D1.LOTT_VW_ADMIN ON WKF_TASKS_HIS.OPERATOR_ID = LOTT_VW_ADMIN.GID
LEFT JOIN LOTT_NEW_A3D1.LOTT_ATM_REQ ON WKF_TASKS_HIS.REFID = LOTT_ATM_REQ.REFID
LEFT JOIN LOTT_NEW_A3D1.LOTT_BANK_WITHDRAW_ARRIVALS_VW ON LOTT_ATM_REQ.TRANSID=LOTT_BANK_WITHDRAW_ARRIVALS_VW.PROVIDER_ORDER_NUM
LEFT JOIN LOTT_NEW_A3D1.LOTT_ACCOUNTS_RETDESC_VIEW ON LOTT_ATM_REQ.ACCOUNTS = LOTT_ACCOUNTS_RETDESC_VIEW.ACCOUNTS
LEFT JOIN (
	SELECT LOTT_MEMBER_ATTENTION_TAG.ACCOUNTS, LISTAGG(LOTT_ATTENTION_TAG.ATTEN_NAME, '','') WITHIN GROUP(ORDER BY NULL) AS ATTEN_NAME
	FROM LOTT_NEW_A3D1.LOTT_MEMBER_ATTENTION_TAG LEFT JOIN LOTT_NEW_A3D1.LOTT_ATTENTION_TAG ON LOTT_MEMBER_ATTENTION_TAG.ATTEN_GID = LOTT_ATTENTION_TAG.GID
	GROUP BY LOTT_MEMBER_ATTENTION_TAG.ACCOUNTS
) ATTENTION_TAG ON LOTT_ATM_REQ.ACCOUNTS = ATTENTION_TAG.ACCOUNTS
WHERE SUBSTR(TASK_ID, 0, 2) IN (''WA'',''WL'')
AND TASK_SUBTYPE IN (''1'',''2'')
AND TRUNC(GENERATE_TIME) = TRUNC(SYSDATE-1)
AND WKF_TASKS_HIS.TASK_STATUS NOT IN (0, 5)
AND WKF_TASKS_HIS.TASK_FLAG NOT IN (0, 2)
AND WKF_TASKS_HIS.OPERATOR_TYPE NOT IN (2)
AND LOTT_VW_ADMIN.REALNAME IS NOT NULL
ORDER BY 1','dau-wa@my-cpg.com;','','','( EID-19 ) PF1 ASI-6086 提现任务流数据导出(每日)','Please see attached file of ( EID-19 ) PF1 ASI-6086 提现任务流数据导出(每日)

Thank you.','ferdinand','2015-09-22 18:51:52','riel_john','2020-03-26 01:34:42','DAU',null);
INSERT INTO MONI_EXPORT (asid,TICKET_NUMBER,EN_NAME,CH_NAME,STATUS,JDBC,PLATFORM,CRON_EXPRESSION,SCRIPT,MAIL_TO,MAIL_CC,MAIL_BCC,MAIL_SUBJECT,MAIL_CONTENT,CREATE_BY,CREATE_TIME,UPDATE_BY,UPDATE_TIME,REQUESTER,LAST_EXPORT) VALUES
('EID-20','ASI-6451','( EID-20 ) PF1 ASI-6451 Request For Raw Data(daily)','( EID-20 ) PF1 ASI-6451 提现任务统计(每日)','0','ub8-pf1-sec','1.0','0 0 9 * * ?','with aa as (
select
   task_id ,
   generate_time,
   min( case when TASK_SUBTYPE = 1 and TASK_FLAG = 3 and TASK_STATUS = 1 then START_TIME end ) AS approve_start_time,
   min( case when TASK_SUBTYPE = 1 and TASK_FLAG = 3 and TASK_STATUS = 1 then end_time end ) AS approve_end_time,
   max( case when TASK_SUBTYPE = 1 and TASK_FLAG = 3 and TASK_STATUS = 1 then OPERATOR_TYPE end ) as APPROVE_TYPE
from LOTT_NEW_A3D1.WKF_TASKS_HIS A
where TASK_TYPE IN (1,3)
AND GENERATE_TIME BETWEEN TRUNC(SYSDATE-1) AND TRUNC(SYSDATE)
group by task_id, generate_time
), bb as (
select
   to_char( generate_time , ''yyyy-mm-dd'' ) as dd,
   avg( case when APPROVE_TYPE = ''2'' then ( approve_start_time - generate_time) * 60 *60 *24 end ) as T1A_AVG,
   avg( case when APPROVE_TYPE = ''1'' then ( approve_start_time - generate_time) * 60 *60 *24 end ) as T1M_AVG,
   avg( case when APPROVE_TYPE = ''2'' then ( approve_end_time - approve_start_time ) * 60 *60 *24 end ) as T2A_AVG,
   avg( case when APPROVE_TYPE = ''1'' then ( approve_end_time - approve_start_time ) * 60 *60 *24 end ) as T2M_AVG,
   count( case when APPROVE_TYPE = ''1'' then 1 end ) Manual_cnt,
   count( case when APPROVE_TYPE = ''2'' then 1 end ) auto_cnt
from aa
where approve_end_time is not null
  group by to_char( generate_time , ''yyyy-mm-dd'' )
)
select
   dd,
   round( T1A_AVG),
   round( T1M_AVG),
   round( T2A_AVG) ,
   auto_cnt ,
   round( T2M_AVG),
   Manual_cnt
from bb
order by dd','dau-wa@my-cpg.com','','','( EID-20 ) PF1 ASI-6451 提现任务统计(每日)','Please see attached file of ( EID-20 ) PF1 ASI-6451 提现任务统计(每日)

Thank you.','ferdinand','2015-09-22 18:54:19','kimberlyclaire','2019-12-04 12:22:46','DAU',null);
INSERT INTO MONI_EXPORT (asid,TICKET_NUMBER,EN_NAME,CH_NAME,STATUS,JDBC,PLATFORM,CRON_EXPRESSION,SCRIPT,MAIL_TO,MAIL_CC,MAIL_BCC,MAIL_SUBJECT,MAIL_CONTENT,CREATE_BY,CREATE_TIME,UPDATE_BY,UPDATE_TIME,REQUESTER,LAST_EXPORT) VALUES
('EID-22:MID-81','ASI-8169','( EID-22:MID-81 ) PF2 ASI-8169 Withdraw Approval Data(daily)','( EID-22:MID-81 ) PF2 ASI-8169 提现任务流数量及处理时间 (每日)','0','ub8-pf5-core-sec','5.0','0 11 9 * * ?','with aa as (
select
   task_id ,
   TASK_START_TIME,
   min( case when TASK_STATUS = 1 then TASK_CLAIM_TIME end ) AS approve_start_time,
   min( case when TASK_STATUS = 1 then TASK_END_TIME end ) AS approve_end_time,
   max( case when TASK_STATUS = 1 then (case when EXECUTOR_ID = -1 then 2 else 1 end ) end ) as APPROVE_TYPE
from core.BPM_WORKFLOW_TASK_HIS A
where PROCESS_DEFINITION IN (''WA'',''WL'')
AND TASK_START_TIME BETWEEN TRUNC(SYSDATE-1) AND TRUNC(SYSDATE)
group by task_id, TASK_START_TIME
), bb as (
select
   to_char( TASK_START_TIME , ''yyyy-mm-dd'' ) as dd,
   avg( case when APPROVE_TYPE = ''2'' then ( cast (approve_start_time as date) - cast (TASK_START_TIME as date)) * 60 *60 *24 end ) as T1A_AVG,
   avg( case when APPROVE_TYPE = ''1'' then ( cast (approve_start_time as date) - cast (TASK_START_TIME as date)) * 60 *60 *24 end ) as T1M_AVG,
   avg( case when APPROVE_TYPE = ''2'' then ( cast (approve_end_time as date) - cast (approve_start_time as date) ) * 60 *60 *24 end ) as T2A_AVG,
   avg( case when APPROVE_TYPE = ''1'' then ( cast (approve_end_time as date) - cast (approve_start_time as date) ) * 60 *60 *24 end ) as T2M_AVG,
   count( case when APPROVE_TYPE = ''1'' then 1 end ) Manual_cnt,
   count( case when APPROVE_TYPE = ''2'' then 1 end ) auto_cnt
from aa
where approve_end_time is not null
  group by to_char( TASK_START_TIME , ''yyyy-mm-dd'' )
)
select
   dd,
   round( T1A_AVG),
   round( T1M_AVG),
   round( T2A_AVG) ,
   auto_cnt ,
   round( T2M_AVG),
   Manual_cnt
from bb
order by dd','dau-wa@my-cpg.com','','','( EID-22:MID-81 ) PF2 ASI-8169 提现任务流数量及处理时间 (每日)','Please see attached file of ( EID-22:MID-81 ) PF2 ASI-8169 提现任务流数量及处理时间 (每日)

Thank you.','vicky','2015-09-24 15:35:13','kimberlyclaire','2019-12-04 12:23:19','DAU',null);
INSERT INTO MONI_EXPORT (asid,TICKET_NUMBER,EN_NAME,CH_NAME,STATUS,JDBC,PLATFORM,CRON_EXPRESSION,SCRIPT,MAIL_TO,MAIL_CC,MAIL_BCC,MAIL_SUBJECT,MAIL_CONTENT,CREATE_BY,CREATE_TIME,UPDATE_BY,UPDATE_TIME,REQUESTER,LAST_EXPORT) VALUES
('EID-24','ASI-6958','( EID-24 ) PF2 ASI-6958 Monitor Accounts Using Internal IP(daily)','( EID-24 ) PF2 ASI-6958 监控内部IP账号(每日)','0','ub8-pf5-ods','5.0','0 35 10 * * ?','WITH
 FUNCTION LISTNAME(iCUSTOMER_ID NUMBER) RETURN VARCHAR2 AS
sCUSTOMER_NAME_LIST VARCHAR2(255);
BEGIN
select LISTAGG(CUSTOMER_NAME, ''/'') WITHIN GROUP (ORDER BY LV_ID DESC)
INTO sCUSTOMER_NAME_LIST
from (
select cu1.*,LEVEL AS LV_ID
from
 (
   select
     c1.CUSTOMER_ID,
	 c1.CUSTOMER_NAME,
	 c2.LEVEL_ID,
	 c2.RECOMMENDER_ID
	from CORE.US_CUSTOMER_vw c1
	INNER JOIN CORE.US_CUSTOMER_PROFILE_vw c2 ON c1.CUSTOMER_ID = c2.CUSTOMER_ID ) cu1
Start with CUSTOMER_ID = iCUSTOMER_ID
Connect by CUSTOMER_ID = prior RECOMMENDER_ID
)
;
RETURN sCUSTOMER_NAME_LIST;
END;
SELECT
       cu1.CUSTOMER_NAME AS "会员账号",
       cu2.NICKNAME AS "昵称",
       cu2.LAST_LOGIN_IP AS "登陆IP",
       case when cu1.ACTIVE_FLAG=0 then ''手工禁用''
            when cu1.ACTIVE_FLAG=1 then ''可登陆''
            when cu1.ACTIVE_FLAG=2 then ''登陆禁用''
            when cu1.ACTIVE_FLAG=3 then ''注销''
            when cu1.ACTIVE_FLAG=5 then ''系统禁用''  end AS "可用标识",
       case when cu2.CREATE_SUBO_FLAG = 1 then ''推荐人'' else ''会员'' end AS "会员级别",
       Z.group_name AS "关注标签",
       to_char(cu2.REG_DATE, ''yyyy-mm-dd hh24:mi:ss'') AS "注册时间",
       to_char(cu2.LAST_LOGIN_TIME, ''yyyy-mm-dd hh24:mi:ss'') AS "最后登陆时间",
       LISTNAME(cu1.CUSTOMER_ID) AS "上级推荐人",
       la.SUM_BET AS "今日彩票投注额",
       la.SUM_WIN AS "今日中奖额",
       (la.SUM_DEPOSIT+la.SUM_3RD_PAY_DEPOSIT) AS "今日充值额",
       la.SUM_WITHDRAW AS "今日提现额",
       la.SUM_CG_BET AS "老虎机投注",
       bi.SUM_BET AS "棋牌投注",
       la.SUM_CLOSING AS "资金账户余额",
       la.SUM_CG_CLOSING AS "休闲账户余额",
       (la.SUM_CLOSING +la.SUM_CG_CLOSING) AS "余额",
	   la.ADJ_CREDIT 充正金额,
	   la.SUM_AGENT_TRANSFER_OUT 代下级充值额,
	   la.SUM_RET_BET 投注返点,
	   la.SUM_BANK_FEES 充值返点,
	   la.SUM_RET_AGENT 代理返点
  FROM CORE.US_CUSTOMER_vw cu1
 left JOIN CORE.US_CUSTOMER_PROFILE_vw cu2 ON cu1.CUSTOMER_ID = cu2.CUSTOMER_ID
 JOIN (SELECT DISTINCT CUSTOMER_ID FROM CORE.US_CUSTOMER_LOGIN_LOG
             WHERE (

              LOGIN_IP in(
                --phl
                ''116.93.37.2'',''116.93.37.3'',''116.93.37.4'',''116.93.37.5'',''116.93.37.6''
                ,''203.177.2.210'',''203.177.2.211'',''203.177.2.212'',''203.177.2.213'',''203.177.2.214''

                --fgu
                ,''119.93.239.236'',''122.54.164.243''
                ,''112.199.58.106'',''112.199.58.107'',''112.199.58.108'',''112.199.58.109'',''112.199.58.110''

                --bdo
                ,''116.93.38.50'',''116.93.38.51'',''116.93.38.52'',''116.93.38.53'',''116.93.38.54''

                --taipei
                ,''211.75.112.37'',''211.75.112.38'',''211.75.112.39'',''211.75.112.40'',''211.75.112.41'',''211.75.112.42''
                ,''122.146.89.8'',''122.146.89.9'',''122.146.89.10'',''122.146.89.11'',''122.146.89.12'',''122.146.89.13'',''122.146.89.14'',''122.146.89.15''

                --台北unistar ip
                ,''118.163.16.106'',''118.163.16.107'',''118.163.16.108'',''118.163.16.109'',''118.163.16.110'',''118.163.16.111''
                ,''210.66.180.104'',''210.66.180.105'',''210.66.180.106'',''210.66.180.107'',''210.66.180.108'',''210.66.180.109'',''210.66.180.110'',''210.66.180.111''
              ))

               AND LOGIN_TIME between trunc(sysdate - 1) + 6/24 and trunc( sysdate ) + 6/24
            )lg ON lg.CUSTOMER_ID = cu1.CUSTOMER_ID
LEFT JOIN (
      select ACCOUNTS as CUSTOMER_NAME, NVL(SUM(AMOUNT),0) as SUM_BET from core.LOTT_3RD_ACCOUNTS_BILL_DATA
      where (BILL_TIME BETWEEN TRUNC(SYSDATE -1) AND TRUNC(SYSDATE))
      AND TGI_ID=''7''
      AND BILL_TYPE=''2007''
      group by ACCOUNTS ) bi ON cu1.CUSTOMER_NAME = bi.CUSTOMER_NAME
 left JOIN ODS.ODS_LIABILITY_SUM la ON la.CUSTOMER_ID = cu1.CUSTOMER_ID
  AND BIZ_DATE = trunc(sysdate-1)
 left join ( select
   A.customer_id,
   B.group_name
  from CORE.US_CUSTOMER_GROUP_MAPPER A
  left join CORE.US_CUSTOMER_GROUP B on A.GROUP_ID = B.GROUP_ID
  where B.GROUP_TYPE_ID = 2  ) Z on cu1.customer_id = Z.customer_id','john.l@my-cpg.com;UBG/OD/DAU/PA@my-cpg.com;jarry.z@my-cpg.com','','','( EID-24 ) PF2 ASI-6958 监控内部IP账号(每日)','Please see attached file of ( EID-24 ) PF2 ASI-6958 请求原始数据 (每天)

Thank you.','ferdinand','2015-09-30 17:50:22','lance','2021-02-08 11:54:23','OTHERS',null);
INSERT INTO MONI_EXPORT (asid,TICKET_NUMBER,EN_NAME,CH_NAME,STATUS,JDBC,PLATFORM,CRON_EXPRESSION,SCRIPT,MAIL_TO,MAIL_CC,MAIL_BCC,MAIL_SUBJECT,MAIL_CONTENT,CREATE_BY,CREATE_TIME,UPDATE_BY,UPDATE_TIME,REQUESTER,LAST_EXPORT) VALUES
('EID-25','ASI-8248','( EID-25 ) PF2 ASI-8248 Deposit and Withdraw Report(daily)','( EID-25 ) PF2 ASI-8248 用户充值提现明细数据(每日)','0','ub8-pf5-core-sec','5.0','0 33 8 ? * *','SELECT
	TMP.RECORD_ID,
	TMP.SYSDATES,
	CORE.US_CUSTOMER_VW.CUSTOMER_NAME,
	TMP.ARRIVAL_TIME,
	TMP.REQUEST_TIME,
	TMP.TYPES,
	TMP.STATUS,
	TMP.ARRIVALAMOUNT,
	TMP.APPLIEDAMOUNT,
	TMP.OPERTIME_START,
	TMP.OPERTIME_END,
	TMP.OPERTYPE,
	TMP.BANK_NAME ,
	TMP.DEPOSIT_MODE,
	TMP.TERMINAL_TYPE
FROM (
	SELECT BDR.CUSTOMER_ID AS CUSTOMER_ID,
               TO_CHAR(SYSDATE, ''YYYY-MM-DD'') AS SYSDATES,
               ''充值'' AS TYPES,
               TO_CHAR(BDR.REQUEST_TIME, ''YYYY-MM-DD HH24:MI:SS'') AS REQUEST_TIME,
               TO_CHAR(BDR.ARRIVAL_TIME, ''YYYY-MM-DD HH24:MI:SS'') AS ARRIVAL_TIME,
               '''' AS OPERTIME_START,
               '''' AS OPERTIME_END,
               APPLIED_AMOUNT AS APPLIEDAMOUNT,
               BDR.ARRIVAL_AMOUNT AS ARRIVALAMOUNT,
               DECODE(BDR.STATUS,
                      ''0'',
                      ''申請中'',
                      ''1'',
                      ''充值成功'',
                      ''2'',
                      ''充值失敗'',
                      ''狀態異常'') AS STATUS,
        '''' AS OPERTYPE,
        BCB.BANK_NAME AS BANK_NAME,
		BDR.RECORD_ID,
		DECODE(BDR.DEPOSIT_MODE,''1'',''线下充值'',''2'',''线上充值'',''3'',''支付宝'') AS DEPOSIT_MODE ,
		BDR.TERMINAL_TYPE AS TERMINAL_TYPE
          FROM CORE.BPS_DEPOSIT_RECORD_VW BDR
        left join CORE.BPS_BANK BCB ON BDR.BANK_ID = BCB.BANK_ID
         where trunc(REQUEST_TIME) = trunc(sysdate - 1)
        UNION
        SELECT BWR.CUSTOMER_ID AS CUSTOMER_ID,
               TO_CHAR(SYSDATE, ''YYYY-MM-DD'') AS SYSDATES,
               ''提現'' AS TYPES,
               TO_CHAR(BWR.REQUEST_TIME, ''YYYY-MM-DD HH24:MI:SS'') AS REQUEST_TIME,
               TO_CHAR(BWR.ARRIVAL_TIME, ''YYYY-MM-DD HH24:MI:SS'') AS ARRIVAL_TIME,
               TO_CHAR(BWT.TASK_START_TIME, ''YYYY-MM-DD HH24:MI:SS'') AS OPERTIME_START,
               TO_CHAR(BWT.TASK_END_TIME, ''YYYY-MM-DD HH24:MI:SS'') AS OPERTIME_END,
               APPLIED_AMOUNT AS APPLIEDAMOUNT,
               ARRIVAL_AMOUNT AS ARRIVALAMOUNT,
               DECODE(BWR.STATUS,
                      ''0'',
                      ''提現申請'',
                      ''1'',
                      ''審核通過'',
                      ''2'',
                      ''審核不通過'',
                      ''3'',
                      ''部分提現成功'',
                      ''4'',
                      ''提現成功'',
                      ''5'',
                      ''提現失敗'',
                      ''狀態異常'') AS STATUS,
        DECODE(BWT.EXECUTOR_ID,''-1'',''系统审单'',''人工审单'') AS OPERTYPE,
        BWR.BANK_NAME AS BANK_NAME,
		BWR.RECORD_ID,
		'''' AS DEPOSIT_MODE ,
		BWR.TERMINAL_TYPE AS TERMINAL_TYPE
          FROM CORE.BPS_WITHDRAW_RECORD_VW BWR
      LEFT JOIN CORE.BPM_WORKFLOW_TASK BWT ON BWT.REFERENCE_ID = BWR.RECORD_ID
       where trunc(REQUEST_TIME) = trunc(sysdate - 1)
) TMP
LEFT JOIN CORE.US_CUSTOMER_VW ON TMP.CUSTOMER_ID =  CORE.US_CUSTOMER_VW.CUSTOMER_ID
 ORDER BY TMP.TYPES,TMP.REQUEST_TIME','jarry.z@my-cpg.com;darren.l@my-cpg.com;UBG-DA@my-cpg.com;UBG/OD/DAU/PA@my-cpg.com','','','( EID-25 ) PF2 ASI-8248 用户充值提现明细数据(每日)','Please see attached file for ( EID-25 ) PF2 ASI-8248 用户充值提现明细数据(每日)

ASI-8920 新增欄位需求
ASI-14439 新增欄位需求

Thank you.','simon','2015-10-05 17:27:05','kimberlyclaire','2019-12-04 12:27:28','DAU',null);
INSERT INTO MONI_EXPORT (asid,TICKET_NUMBER,EN_NAME,CH_NAME,STATUS,JDBC,PLATFORM,CRON_EXPRESSION,SCRIPT,MAIL_TO,MAIL_CC,MAIL_BCC,MAIL_SUBJECT,MAIL_CONTENT,CREATE_BY,CREATE_TIME,UPDATE_BY,UPDATE_TIME,REQUESTER,LAST_EXPORT) VALUES
('EID-26','ASI-8149','( EID-26 ) PF2 ASI-8149 Task Record Export Request','( EID-26 ) PF2 ASI-8149 任务记录导出请求','0','ub8-pf5-core-sec','5.0','0 0 9 * * ?','WITH GROUP_NAME_TABLE AS
(
SELECT  listagg(GROUP_NAME ,'','') within group( order by CUSTOMER_ID) as  GROUP_NAME , CUSTOMER_ID
FROM CORE.US_CUSTOMER_GROUP_MAPPER
LEFT JOIN CORE.US_CUSTOMER_GROUP ON US_CUSTOMER_GROUP_MAPPER.GROUP_ID = US_CUSTOMER_GROUP.GROUP_ID
WHERE GROUP_TYPE_ID = 2
group by CUSTOMER_ID
), AA AS(
SELECT
  CORE.BPM_WORKFLOW_TASK_HIS.PROCESS_BUSINESS_ID AS TASKNBR,
  CORE.BPM_WORKFLOW_TASK_HIS.PROCESS_DEFINITION AS WORKPROCESS,
  CORE.BPM_WORKFLOW_TASK_HIS.TASK_NAME AS STEP,
  DECODE(CORE.BPM_WORKFLOW_TASK_HIS.TASK_STATUS, ''0'', ''操作完成'', ''1'', ''審核通過'', ''2'', ''審核不通過'',''系統異常無法判斷，請聯絡AS'') AS TASKSTATUS,
  DECODE(CORE.BPM_WORKFLOW_TASK_HIS.TASK_STATUS, ''0'', ''消領任務'', ''1'', ''完成任務'', ''2'', ''完成任務'',''系統異常無法判斷，請聯絡AS'') AS OPERATIONTYPE,
  CORE.BPM_WORKFLOW_TASK_HIS.APPLICANT AS INITIATEUSSER,
  TO_CHAR(CORE.BPM_WORKFLOW_TASK_HIS.PROCESS_START_TIME, ''YYYY-MM-DD HH24:MI:SS'') AS INITIATETIME,
  --B.IP_LOCATE,B.REMOTE_IP,
  ROUND((((TO_DATE(TO_CHAR(CORE.BPM_WORKFLOW_TASK_HIS.PROCESS_CLAIM_TIME, ''YYYY-MM-DD HH24:MI:SS''), ''YYYY-MM-DD HH24:MI:SS''))-(TO_DATE(TO_CHAR(CORE.BPM_WORKFLOW_TASK_HIS.PROCESS_START_TIME, ''YYYY-MM-DD HH24:MI:SS''), ''YYYY-MM-DD HH24:MI:SS'')))*24*60*60)) AS GETTIME,
  CORE.BPM_WORKFLOW_TASK_HIS.EXECUTOR AS EXEUSER,
  TO_CHAR(CORE.BPM_WORKFLOW_TASK_HIS.PROCESS_CLAIM_TIME, ''YYYY-MM-DD HH24:MI:SS'') AS TASKSTARTTIME,
  TO_CHAR(CORE.BPM_WORKFLOW_TASK_HIS.TASK_END_TIME, ''YYYY-MM-DD HH24:MI:SS'') AS TASKENDTIME,
  ROUND((((TO_DATE(TO_CHAR(CORE.BPM_WORKFLOW_TASK_HIS.TASK_END_TIME, ''YYYY-MM-DD HH24:MI:SS''), ''YYYY-MM-DD HH24:MI:SS''))-(TO_DATE(TO_CHAR(CORE.BPM_WORKFLOW_TASK_HIS.PROCESS_CLAIM_TIME, ''YYYY-MM-DD HH24:MI:SS''), ''YYYY-MM-DD HH24:MI:SS'')))*24*60*60)) AS TASKTIME,
  CORE.BPM_WORKFLOW_TASK_HIS.PRIORITY AS PRIORITY,
 --(SELECT DISTINCT LGS.NAME  ||''/''||(LGRT.LEVEL_RET_VALUE * 100) ||''%''
 --   FROM CORE.LGS_GAME LG, CORE.LGS_GAME_GROUP LGG, CORE.CP_CUSTOMER_SERIES US, CORE.LGS_GAME_RET_LEVEL LGRT, CORE.LGS_GAME_SERIES LGS
 --   WHERE LG.GAME_GROUP_ID = LGG.GAME_GROUP_ID AND US.GAME_CODE = LG.CODE AND LGRT.GAME_RET_LEVEL_ID = US.GAME_RET_LEVEL_ID AND
 --         LGS.GAME_SERIES_ID = US.GAME_SERIES_ID AND LGS.AVFLAG = 1
 --   AND US.DEFAULT_SERIES = 1
 --   AND LGG.CODE = ''SSC''
 --   AND US.CUSTOMER_ID = CORE.BPM_WORKFLOW_TASK_HIS.APPLICANT_ID AND ROWNUM =1) AS REBATEVALUE,
  CORE.BPS_WITHDRAW_RECORD_VW.APPLIED_AMOUNT AS AMOUNT

  ,GROUP_NAME AS ATTENTIONTAG
  ,DECODE(CORE.BPS_WITHDRAW_RECORD_VW.STATUS, ''0'',''提現申請'',''1'',''審核通過'',''2'',''審核不通過'',''3'',''部分提現成功'',''4'',''提現成功'',''5'',''提現失敗'',''狀態異常'') AS WITHDRAWALSTATUS
  ,BPM_WORKFLOW_TASK_HIS.TASK_REMARK
  ,CORE.BPS_WITHDRAW_RECORD_VW.update_TIME
  ,ROUND((CAST(CORE.BPS_WITHDRAW_RECORD_VW.ARRIVAL_TIME AS DATE)-CAST(CORE.BPM_WORKFLOW_TASK_HIS.TASK_END_TIME AS DATE))*86400,2) PROCESSTIME
  ,ROUND((CAST(CORE.BPS_WITHDRAW_RECORD_VW.ARRIVAL_TIME AS DATE)-CAST(CORE.BPS_WITHDRAW_RECORD_VW.REQUEST_TIME AS DATE))*86400,2) WITHDRAWALPROCESSTIME
  ,CORE.BPM_WORKFLOW_TASK_HIS.PROCESS_START_TIME AS LOCALTIME
　,PROCESS_REMARK
FROM CORE.BPM_WORKFLOW_TASK_HIS
LEFT JOIN CORE.ACS_ACCOUNT ON CORE.BPM_WORKFLOW_TASK_HIS.APPLICANT_ID = CORE.ACS_ACCOUNT.CUSTOMER_ID
LEFT JOIN CORE.BPS_WITHDRAW_RECORD_VW ON CORE.BPM_WORKFLOW_TASK_HIS.REFERENCE_ID = CORE.BPS_WITHDRAW_RECORD_VW.RECORD_ID
LEFT JOIN GROUP_NAME_TABLE A  ON A.CUSTOMER_ID  = CORE.BPM_WORKFLOW_TASK_HIS.APPLICANT_ID
--LEFT JOIN CORE.UE_USER_EVENT_MASTER_VW B ON CORE.BPM_WORKFLOW_TASK_HIS.APPLICANT= B.CUSTOMER_NAME
--AND TO_CHAR(B.EVENT_TIME,''YYYYMMDD'')=TO_CHAR(CORE.BPM_WORKFLOW_TASK_HIS.PROCESS_START_TIME,''YYYYMMDD'')

WHERE TRUNC(CORE.BPM_WORKFLOW_TASK_HIS.CREATE_TIME) = TRUNC(SYSDATE-1)
AND CORE.ACS_ACCOUNT.ACCOUNT_TYPE_ID = 1
AND CORE.BPM_WORKFLOW_TASK_HIS.PROCESS_DEFINITION IN (''WA'',''WL'')
AND CORE.BPM_WORKFLOW_TASK_HIS.TASK_STATUS NOT IN (0)
AND CORE.BPM_WORKFLOW_TASK_HIS.TASK_STATUS NOT IN (0)
AND CORE.BPM_WORKFLOW_TASK_HIS.EXECUTOR<>''SYSTEM''
)
-- 加入最接近的EVENT_TIME的 LOCAL_IP
,BB AS(
SELECT MIN(ABS(TO_CHAR(B.EVENT_TIME,''YYYYMMDDHH24MISS'') - TO_CHAR(AA.LOCALTIME,''YYYYMMDDHH24MISS''))) AS MINX  , INITIATEUSSER
FROM AA
LEFT JOIN CORE.UE_USER_EVENT_MASTER_VW B ON AA.INITIATEUSSER= B.CUSTOMER_NAME AND TO_CHAR(B.EVENT_TIME,''YYYYMMDD'')=TO_CHAR(AA.LOCALTIME,''YYYYMMDD'')
GROUP BY INITIATEUSSER
)
SELECT DISTINCT
  AA.TASKNBR,
  AA.WORKPROCESS,
  AA.STEP,
  AA.TASKSTATUS,
  AA.OPERATIONTYPE,
  AA.INITIATEUSSER,
  AA.INITIATETIME,
  C.IP_LOCATE,C.REMOTE_IP,
  AA.GETTIME,
  AA.EXEUSER,
  AA.TASKSTARTTIME,
  AA.TASKENDTIME,
  AA.TASKTIME,
  AA.PRIORITY,
  AA.AMOUNT,
  AA.ATTENTIONTAG,
  AA.WITHDRAWALSTATUS ,
  AA.TASK_REMARK,
  AA.PROCESS_REMARK,
  AA.update_TIME ARRIVAL_TIME,
  AA.PROCESSTIME,
  AA.WITHDRAWALPROCESSTIME
FROM AA
LEFT JOIN BB ON AA.INITIATEUSSER = BB.INITIATEUSSER
LEFT JOIN CORE.UE_USER_EVENT_MASTER_VW C ON AA.INITIATEUSSER= C.CUSTOMER_NAME
AND ABS(TO_CHAR(C.EVENT_TIME,''YYYYMMDDHH24MISS'') - TO_CHAR(AA.LOCALTIME,''YYYYMMDDHH24MISS'')) = BB.MINX


/* 20180102 上個版本 */
/*
WITH GROUP_NAME_TABLE AS
(
SELECT GROUP_NAME , CUSTOMER_ID
FROM CORE.US_CUSTOMER_GROUP_MAPPER
LEFT JOIN CORE.US_CUSTOMER_GROUP ON US_CUSTOMER_GROUP_MAPPER.GROUP_ID = US_CUSTOMER_GROUP.GROUP_ID
WHERE GROUP_TYPE_ID = 2
)
SELECT
  CORE.BPM_WORKFLOW_TASK_HIS.PROCESS_BUSINESS_ID AS TASKNBR,
  CORE.BPM_WORKFLOW_TASK_HIS.PROCESS_DEFINITION AS WORKPROCESS,
  CORE.BPM_WORKFLOW_TASK_HIS.TASK_NAME AS STEP,
  DECODE(CORE.BPM_WORKFLOW_TASK_HIS.TASK_STATUS, ''0'', ''操作完成'', ''1'', ''審核通過'', ''2'', ''審核不通過'',''系統異常無法判斷，請聯絡AS'') AS TASKSTATUS,
  DECODE(CORE.BPM_WORKFLOW_TASK_HIS.TASK_STATUS, ''0'', ''消領任務'', ''1'', ''完成任務'', ''2'', ''完成任務'',''系統異常無法判斷，請聯絡AS'') AS OPERATIONTYPE,
  CORE.BPM_WORKFLOW_TASK_HIS.APPLICANT AS INITIATEUSSER,
  TO_CHAR(CORE.BPM_WORKFLOW_TASK_HIS.PROCESS_START_TIME, ''YYYY-MM-DD HH24:MI:SS'') AS INITIATETIME,
  --B.IP_LOCATE,B.REMOTE_IP,
  ROUND((((TO_DATE(TO_CHAR(CORE.BPM_WORKFLOW_TASK_HIS.PROCESS_CLAIM_TIME, ''YYYY-MM-DD HH24:MI:SS''), ''YYYY-MM-DD HH24:MI:SS''))-(TO_DATE(TO_CHAR(CORE.BPM_WORKFLOW_TASK_HIS.PROCESS_START_TIME, ''YYYY-MM-DD HH24:MI:SS''), ''YYYY-MM-DD HH24:MI:SS'')))*24*60*60)) AS GETTIME,
  CORE.BPM_WORKFLOW_TASK_HIS.EXECUTOR AS EXEUSER,
  TO_CHAR(CORE.BPM_WORKFLOW_TASK_HIS.PROCESS_CLAIM_TIME, ''YYYY-MM-DD HH24:MI:SS'') AS TASKSTARTTIME,
  TO_CHAR(CORE.BPM_WORKFLOW_TASK_HIS.TASK_END_TIME, ''YYYY-MM-DD HH24:MI:SS'') AS TASKENDTIME,
  ROUND((((TO_DATE(TO_CHAR(CORE.BPM_WORKFLOW_TASK_HIS.TASK_END_TIME, ''YYYY-MM-DD HH24:MI:SS''), ''YYYY-MM-DD HH24:MI:SS''))-(TO_DATE(TO_CHAR(CORE.BPM_WORKFLOW_TASK_HIS.PROCESS_CLAIM_TIME, ''YYYY-MM-DD HH24:MI:SS''), ''YYYY-MM-DD HH24:MI:SS'')))*24*60*60)) AS TASKTIME,
  CORE.BPM_WORKFLOW_TASK_HIS.PRIORITY AS PRIORITY,
 --(SELECT DISTINCT LGS.NAME  ||''/''||(LGRT.LEVEL_RET_VALUE * 100) ||''%''
 --   FROM CORE.LGS_GAME LG, CORE.LGS_GAME_GROUP LGG, CORE.CP_CUSTOMER_SERIES US, CORE.LGS_GAME_RET_LEVEL LGRT, CORE.LGS_GAME_SERIES LGS
 --   WHERE LG.GAME_GROUP_ID = LGG.GAME_GROUP_ID AND US.GAME_CODE = LG.CODE AND LGRT.GAME_RET_LEVEL_ID = US.GAME_RET_LEVEL_ID AND
 --         LGS.GAME_SERIES_ID = US.GAME_SERIES_ID AND LGS.AVFLAG = 1
 --   AND US.DEFAULT_SERIES = 1
 --   AND LGG.CODE = ''SSC''
 --   AND US.CUSTOMER_ID = CORE.BPM_WORKFLOW_TASK_HIS.APPLICANT_ID AND ROWNUM =1) AS REBATEVALUE,
  CORE.BPS_WITHDRAW_RECORD_VW.APPLIED_AMOUNT AS AMOUNT

  ,GROUP_NAME AS ATTENTIONTAG
	,DECODE(CORE.BPS_WITHDRAW_RECORD_VW.STATUS, ''0'',''提現申請'',''1'',''審核通過'',''2'',''審核不通過'',''3'',''部分提現成功'',''4'',''提現成功'',''5'',''提現失敗'',''狀態異常'') AS WITHDRAWALSTATUS
	,BPM_WORKFLOW_TASK_HIS.TASK_REMARK
	,CORE.BPS_WITHDRAW_RECORD_VW.ARRIVAL_TIME
	,ROUND((CAST(CORE.BPS_WITHDRAW_RECORD_VW.ARRIVAL_TIME AS DATE)-CAST(CORE.BPM_WORKFLOW_TASK_HIS.TASK_END_TIME AS DATE))*86400,2) PROCESSTIME
	,ROUND((CAST(CORE.BPS_WITHDRAW_RECORD_VW.ARRIVAL_TIME AS DATE)-CAST(CORE.BPS_WITHDRAW_RECORD_VW.REQUEST_TIME AS DATE))*86400,2) WITHDRAWALPROCESSTIME
FROM CORE.BPM_WORKFLOW_TASK_HIS
LEFT JOIN CORE.ACS_ACCOUNT ON CORE.BPM_WORKFLOW_TASK_HIS.APPLICANT_ID = CORE.ACS_ACCOUNT.CUSTOMER_ID
LEFT JOIN CORE.BPS_WITHDRAW_RECORD_VW ON CORE.BPM_WORKFLOW_TASK_HIS.REFERENCE_ID = CORE.BPS_WITHDRAW_RECORD_VW.RECORD_ID
LEFT JOIN GROUP_NAME_TABLE A  ON A.CUSTOMER_ID  = CORE.BPM_WORKFLOW_TASK_HIS.APPLICANT_ID
--LEFT JOIN CORE.UE_USER_EVENT_MASTER_VW B ON CORE.BPM_WORKFLOW_TASK_HIS.APPLICANT= B.CUSTOMER_NAME
--AND TO_CHAR(B.EVENT_TIME,''YYYYMMDD'')=TO_CHAR(CORE.BPM_WORKFLOW_TASK_HIS.PROCESS_START_TIME,''YYYYMMDD'')

WHERE TRUNC(CORE.BPM_WORKFLOW_TASK_HIS.CREATE_TIME) = TRUNC(SYSDATE-1)
AND CORE.ACS_ACCOUNT.ACCOUNT_TYPE_ID = 1
AND CORE.BPM_WORKFLOW_TASK_HIS.PROCESS_DEFINITION IN (''WA'',''WL'')
AND CORE.BPM_WORKFLOW_TASK_HIS.TASK_STATUS NOT IN (0)
AND CORE.BPM_WORKFLOW_TASK_HIS.TASK_STATUS NOT IN (0)
AND CORE.BPM_WORKFLOW_TASK_HIS.EXECUTOR<>''SYSTEM''
*/','dau-wa@my-cpg.com','','','( EID-26 ) PF2 ASI-8149 任务记录导出请求','Please see attached file of ( EID-26 ) PF2 ASI-8149 任务记录导出请求

Thank you.','phoenix','2015-10-06 18:49:59','kimberlyclaire','2019-12-04 12:28:06','DAU',null);
INSERT INTO MONI_EXPORT (asid,TICKET_NUMBER,EN_NAME,CH_NAME,STATUS,JDBC,PLATFORM,CRON_EXPRESSION,SCRIPT,MAIL_TO,MAIL_CC,MAIL_BCC,MAIL_SUBJECT,MAIL_CONTENT,CREATE_BY,CREATE_TIME,UPDATE_BY,UPDATE_TIME,REQUESTER,LAST_EXPORT) VALUES
('EID-28','ASI-2900-B','( EID-28 ) PF1 ASI-2900 Mail Data Export[Admin](daily/11:45)','( EID-28 ) PF1 ASI-2900 站内信读取状态汇出[管理员](每日/11:45)','0','ub8-pf1-sec','1.0','30 45 11 * * ?','WITH SMS AS(
  SELECT GID, SENDMAN, SMSTITLE, SENDTIME, SMSCONTENT, OPRATEOR
  FROM LOTT_NEW_A3D1.l0tt_smsinfo
  WHERE TRUNC(SENDTIME) = TRUNC(SYSDATE) - 1
), tmp AS(
  select B.* from SMS A
  left join LOTT_NEW_A3D1.lott_sms_receive B on B.MESSAGEID= A.GID
)
, RECEIVE AS(
  SELECT messageid,
      null receiveno,
        (CASE WHEN sum(state) = count(1) THEN ''已讀''
              WHEN sum(state) = 0 THEN ''未讀''
              ELSE ''部份已讀''
        END) as state
  FROM tmp
  GROUP BY MESSAGEID HAVING COUNT(1) < 500
  UNION ALL
  SELECT messageid,
      RTRIM(XMLAGG(XMLELEMENT(E,receiveno,''/'').EXTRACT(''//text()'') ORDER BY receiveno).GetClobVal(),''/'') receiveno,
  (CASE WHEN sum(state) = count(1) THEN ''已讀''
              WHEN sum(state) = 0 THEN ''未讀''
              ELSE ''部份已讀''
        END) as state
  FROM tmp
  WHERE MESSAGEID IN (
    SELECT messageid
    FROM tmp
    GROUP BY MESSAGEID HAVING COUNT(1) < 500
  )
  GROUP BY MESSAGEID
)
SELECT case when s.sendman = ''-1''
              and s.OPRATEOR != ''-1''
              and s.OPRATEOR != ''1''
              and s.OPRATEOR != ''0''
            then ''Admin-''||(SELECT LOGINNAME FROM LOTT_NEW_A3D1.LOTT_VW_ADMIN WHERE gid = s.OPRATEOR)
            when s.sendman = ''-1''
            then ''System''
            else s.sendman
            end as sender,
 nvl(dbms_lob.substr( r.RECEIVENO, 4000, 1 ), ''ALL'') receiveno,
  s.SMSTITLE,
  TO_CHAR(s.SENDTIME, ''YYYY-MM-DD HH24:MI:SS'') as sendtime,
  (case when r.STATE != ''已讀'' and s.sendman = ''-1'' then ''部份已讀'' else r.state end) read_status,
  replace(replace(trim(s.SMSCONTENT), '' '', ''''), chr(10), '''') SMSCONTENT
FROM RECEIVE r, SMS s
WHERE r.MESSAGEID = s.GID','tweety.h@my-cpg.com;srvduty@my-cpg.com','','','( EID-28 ) PF1 ASI-2900 站内信读取状态汇出[管理员](每日/11:45)','Please see attached file of ( EID-28 ) PF1 ASI-2900 站内信读取状态汇出[管理员](每日/11:45)

Thank you.','phoenix','2015-10-08 11:25:35','kimberlyclaire','2019-12-04 12:28:45','SRV',null);
INSERT INTO MONI_EXPORT (asid,TICKET_NUMBER,EN_NAME,CH_NAME,STATUS,JDBC,PLATFORM,CRON_EXPRESSION,SCRIPT,MAIL_TO,MAIL_CC,MAIL_BCC,MAIL_SUBJECT,MAIL_CONTENT,CREATE_BY,CREATE_TIME,UPDATE_BY,UPDATE_TIME,REQUESTER,LAST_EXPORT) VALUES
('EID-30','ASI-8248','( EID-30 ) PF1 ASI-8248 Deposit and Withdraw Report(daily)','( EID-30 ) PF1 ASI-8248 用户充值提现明细数据(每日)','0','ub8-pf1-sec','1.0','0 33 8 ? * *','--SINCE
SELECT TMP.REFNO,TMP.SYSDATES,TMP.ACCOUNTS,TMP.ARRIVAL_TIME,TMP.REQUEST_TIME,TMP.TYPES,TMP.STATUS,TMP.ARRIVALAMOUNT,
		TMP.APPLIEDAMOUNT,TMP.OPERTIME_START,TMP.OPERTIME_END,TMP.OPERTYPE,TMP.BANK_NAME,TMP.DEPOSIT_MODE,TMP.TERMINAL
FROM(
	SELECT T1.ACCOUNTS
		, TO_CHAR(SYSDATE, ''YYYY-MM-DD'') AS SYSDATES
		,''充值'' AS TYPES
		, TO_CHAR(T1.CHARFETIME,''YYYY-MM-DD HH24:MI:SS'') AS REQUEST_TIME
		, TO_CHAR(T3.PROVIDER_OPERATE_TIME,''YYYY-MM-DD HH24:MI:SS'') AS ARRIVAL_TIME
		, CAST ( NULL AS DATE) AS OPERTIME_START
		, CAST ( NULL AS DATE) AS OPERTIME_END
		, T1.AMOUNTS AS APPLIEDAMOUNT
		, T3.AMOUNT AS ARRIVALAMOUNT
		, DECODE(T1.STATE,''1'',''申請中'',''2'',''充值成功'',''3'',''充值失敗'',''5'',''申请中（线下）'',''6'',''申请中（线下）'',''狀態異常'') AS STATUS
		, DECODE(T1.CALLBACK_FLAG,''0'',''自动'',''1'',''手动'','''') AS OPERTYPE
		, T2.BANK_NAME
		, DECODE(T1.DEPOSIT_MODE, ''1'',''銀行卡'', ''2'',''第三方'', ''3'',''電子錢包'',''其他'') AS DEPOSIT_MODE
		, T1.REFID AS REFNO
		, T1.TERMINAL AS TERMINAL
	FROM LOTT_NEW_A3D1.LOTT_VW_CHARFE_REC T1
	LEFT JOIN LOTT_NEW_A3D1.LOTT_PAY_3RD_BANK T2 ON T1.BANK_ID = T2.ID
	LEFT JOIN LOTT_NEW_A3D1.LOTT_BANK_DEPOSIT_ARRIVALS_VW T3 ON T1.REFID = T3.APPLIED_ORDER_NUM
	WHERE TRUNC(CHARFETIME) = TRUNC(SYSDATE - 1)
UNION
	SELECT ACCOUNTS
		, TO_CHAR(SYSDATE, ''YYYY-MM-DD'') AS SYSDATES
		, ''提現'' AS TYPES
		, TO_CHAR(LA.REQ_TIME, ''YYYY-MM-DD HH24:MI:SS'') AS REQUEST_TIME
		, TO_CHAR(T2.PROVIDER_OPERATE_TIME, ''YYYY-MM-DD HH24:MI:SS'') AS ARRIVAL_TIME
		, MIN(CASE WHEN WT.TASK_SUBTYPE = 1 AND WT.TASK_FLAG = 3 AND WT.TASK_STATUS = 1 THEN WT.START_TIME END)  AS OPERTIME_START
		, MIN(CASE WHEN WT.TASK_SUBTYPE = 1 AND WT.TASK_FLAG = 3 AND WT.TASK_STATUS = 1 THEN WT.END_TIME END) AS OPERTIME_END
		, LA.AMOUNT AS APPLIEDAMOUNT
		, DECODE(T2.STATUS, ''0'', 0, T2.AMOUNT)  AS ARRIVALAMOUNT_NEW
		, DECODE(LA.STATE, ''1'',''审核通过'',''2'',''提现成功'',''3'',''提现失败'',''狀態異常'') AS STATUS
		, DECODE(LA.ASSESSOR, '''',''待处理'', ''-1'',''自动'', ''手工'') AS OPERTYPE
		, '''' AS BANK_NAME
		, '''' AS DEPOSIT_MODE
		, TO_CHAR(LA.REFID) AS REFNO
		, LA.TERMINAL AS TERMINAL
	FROM LOTT_NEW_A3D1.LOTT_ATM_REQ LA
	LEFT JOIN LOTT_NEW_A3D1.WKF_TASKS_HIS WT ON LA.REFID = WT.REFID
	LEFT JOIN LOTT_NEW_A3D1.LOTT_BANK_WITHDRAW_ARRIVALS_VW T2 ON LA.REFID = T2.APPLIED_ORDER_NUM
	WHERE TRUNC(REQ_TIME) = TRUNC(SYSDATE - 1)
	GROUP BY LA.ACCOUNTS
		, TO_CHAR(LA.REQ_TIME, ''YYYY-MM-DD HH24:MI:SS'')
		, TO_CHAR(T2.PROVIDER_OPERATE_TIME, ''YYYY-MM-DD HH24:MI:SS'')
		, LA.AMOUNT, T2.AMOUNT, DECODE(T2.STATUS, ''0'', 0, T2.AMOUNT)
		, DECODE(LA.STATE,''1'',''审核通过'',''2'',''提现成功'',''3'',''提现失败'',''狀態異常'')
		, DECODE(LA.ASSESSOR, '''',''待处理'', ''-1'',''自动'', ''手工'')
		, TO_CHAR(LA.REFID)
		, LA.TERMINAL

)TMP
ORDER BY TMP.TYPES,TMP.REQUEST_TIME','jarry.z@my-cpg.com;darren.l@my-cpg.com;ubg-da@my-cpg.com;UBG/OD/DAU/PA@my-cpg.com','','','( EID-30 ) PF1 ASI-8248 用户充值提现明细数据(每日)','Please see attached file for ( EID-30 ) PF1 ASI-8248 用户充值提现明细数据(每日)

ASI-14439 新增欄位需求

Thank you.','simon','2015-10-09 16:46:00','riel_john','2020-12-14 08:49:32','DAU',null);
INSERT INTO MONI_EXPORT (asid,TICKET_NUMBER,EN_NAME,CH_NAME,STATUS,JDBC,PLATFORM,CRON_EXPRESSION,SCRIPT,MAIL_TO,MAIL_CC,MAIL_BCC,MAIL_SUBJECT,MAIL_CONTENT,CREATE_BY,CREATE_TIME,UPDATE_BY,UPDATE_TIME,REQUESTER,LAST_EXPORT) VALUES
('EID-39','ASI-7870','( EID-39 ) PF2 ASI-7870 Lottery Jackpot Win Record(daily)','( EID-39 ) PF2 ASI-7870 彩票奖池派奖数据(每日)','0','ub8-pf5-core-sec','5.0','0 14 18 ? * *','WITH AA AS (
SELECT
  TRUNC( A.CREATE_TIME ) AS DATA_DATE ,
  B.CUSTOMER_NAME,
  A.GAME_CODE,
  A.CREATE_TIME,
  A.AMOUNT
FROM CORE.JPS_WIN_RECORD A
LEFT JOIN CORE.US_CUSTOMER_VW B ON A.CUSTOMER_ID = B.CUSTOMER_ID
WHERE A.CREATE_TIME >= TO_DATE( ''2015-09-16'' , ''YYYY-MM-DD'' )
 AND A.CREATE_TIME < SYSDATE
ORDER BY 4
)
SELECT
 TO_CHAR( DATA_DATE, ''YYYY-MM-DD'' ) DATA_DATE,
 CUSTOMER_NAME,
 GAME_CODE,
 TO_CHAR( CREATE_TIME , ''YYYY-MM-DD HH24:MI:SS'' ) CREATE_TIME,
 AMOUNT
FROM AA','jarry.z@my-cpg.com;','','','( EID-39 ) PF2 ASI-7870 彩票奖池派奖数据(每日)','Please see attached file of ( EID-39 ) 彩票奖池派奖数据(每日)

Thank you.','joseph','2015-11-02 17:09:50','kimberlyclaire','2019-12-04 12:29:44','DAU',null);
INSERT INTO MONI_EXPORT (asid,TICKET_NUMBER,EN_NAME,CH_NAME,STATUS,JDBC,PLATFORM,CRON_EXPRESSION,SCRIPT,MAIL_TO,MAIL_CC,MAIL_BCC,MAIL_SUBJECT,MAIL_CONTENT,CREATE_BY,CREATE_TIME,UPDATE_BY,UPDATE_TIME,REQUESTER,LAST_EXPORT) VALUES
('EID-40','ASI-8364','( EID-40 ) PF1 ASI-8364 Winning Amount Over 200K(weekly)','( EID-40 ) PF1 ASI-8364 大额中奖明细(每周)','0','ub8-pf1-sec','1.0','0 10 7 ? * MON','with aa as (
  select
   max( sortid ) as sortid , max( case when TOTAL_WINPRICE >= 200000 then orderno end ) orderno, RESTARNO,
   count( case when TOTAL_WINPRICE >= 200000 then 1 end ) as over_200K_cnt,
   count( * ) as order_cnt,
   count( distinct TOTAL_NUM ) as TOTAL_NUM_cnt,
   max( TOTAL_WINPRICE ) as TOTAL_WINPRICE,
   max( bet_time ) as bet_time,
   max( accounts ) as accounts,
   max( case when TOTAL_WINPRICE >= 200000 then TOTAL_AMOUNT end ) as TOTAL_AMOUNT,
   sum( case when status in (''004'', ''005'' ) then TOTAL_AMOUNT end ) as TOTAL_AMOUNT_S
 from LOTT_NEW_A3D1.lott_fc3d_order_main
 group by RESTARNO
 having count( case when TOTAL_WINPRICE >= 200000 then 1 end ) > 0
), bb as (
 select
  distinct orderno , sortid
 from LOTT_NEW_A3D1.lott_ssc_order_detail
 where orderno in ( select RESTARNO from aa )
 union all
 select
 distinct orderno, sortid
 from LOTT_NEW_A3D1.lott_11x5_order_detail
 where orderno in ( select RESTARNO from aa )
), cc as (
  select
   bb.orderno, listagg( play_name , '';'' )  WITHIN GROUP (ORDER BY B.gpid ) as play_list
  from bb
  left join LOTT_NEW_A3D1.lott_play_menu B on bb.sortid = B.play_id||''.''||B.gpid
  group by bb.orderno
)
select
  aa.accounts,
  D.REGTIME,
  aa.TOTAL_WINPRICE,
  aa.bet_time,
  C.play_name,
  cc.play_list,
  aa.TOTAL_AMOUNT,
  aa.TOTAL_AMOUNT_S,
  case when aa.order_cnt > 1 then ''追號'' else ''非追號'' end bet_type,
  case when aa.TOTAL_NUM_cnt = aa.order_cnt and aa.TOTAL_NUM_cnt > 1 then ''倍投'' else ''非倍投'' end bet_mode,
  aa.orderno
from aa
left join cc on aa.RESTARNO = cc.orderno
left join LOTT_NEW_A3D1.lott_play_menu C on aa.sortid = C.play_id
left join LOTT_NEW_A3D1.lott_vw_member_info D on aa.accounts = D.accounts','jarry.z@my-cpg.com;','','','( EID-40 ) PF1 ASI-8364 大额中奖明细(每周)','Please see attached file of ( EID-40 ) PF1 ASI-8364 大额中奖明细(每周)

Thank you.','joseph','2015-11-04 14:33:27','kimberlyclaire','2019-12-04 12:30:36','DAU',null);
INSERT INTO MONI_EXPORT (asid,TICKET_NUMBER,EN_NAME,CH_NAME,STATUS,JDBC,PLATFORM,CRON_EXPRESSION,SCRIPT,MAIL_TO,MAIL_CC,MAIL_BCC,MAIL_SUBJECT,MAIL_CONTENT,CREATE_BY,CREATE_TIME,UPDATE_BY,UPDATE_TIME,REQUESTER,LAST_EXPORT) VALUES
('EID-41','ASI-8364','( EID-41 ) PF2 ASI-8364 Winning Amount Over 200K(weekly)','( EID-41 ) PF2 ASI-8364 大额中奖明细(每周)','0','ub8-pf5-core-sec','5.0','0 15 7 ? * MON','WITH AA AS (
   SELECT
   ORDER_MASTER_ID,
   MAX( GAME_CODE ) AS GAME_CODE,
   COUNT( CASE WHEN WIN_AMOUNT >= 200000 THEN 1 END ) AS OVER_200K_CNT,
   COUNT( * ) AS ORDER_CNT,
   COUNT( DISTINCT MULTIPLE ) AS MULTIPLE_CNT,
   MAX( WIN_AMOUNT ) AS WIN_AMOUNT,
   MAX( CREATE_TIME ) AS BET_TIME,
   --MAX( ACCOUNTS ) AS ACCOUNTS,
   MAX( CASE WHEN WIN_AMOUNT >= 200000 THEN ACTUAL_BET_AMOUNT END ) AS TOTAL_AMOUNT,
   SUM( CASE WHEN STATUS IN ( 4, 5 ) THEN ACTUAL_BET_AMOUNT END ) AS TOTAL_AMOUNT_S
 FROM CORE.LGS_ORDER_DETAIL
 GROUP BY ORDER_MASTER_ID
 HAVING COUNT( CASE WHEN WIN_AMOUNT >= 200000 THEN 1 END ) > 0
), BB AS (
 SELECT
  DISTINCT ORDER_MASTER_ID , PLAY_ID
 FROM CORE.LGS_ORDER_INFO
 WHERE ORDER_MASTER_ID IN ( SELECT ORDER_MASTER_ID FROM AA )
), CC AS (
 SELECT
   BB.ORDER_MASTER_ID,
   LISTAGG( C.PLAY_NAME , '';'' ) WITHIN GROUP (ORDER BY C.PLAY_NAME ) AS PLAY_LIST
 FROM BB
 LEFT JOIN CORE.LGS_PLAY_MENU C ON BB.PLAY_ID = C.PLAY_ID
 GROUP BY BB.ORDER_MASTER_ID
)
SELECT
 U.CUSTOMER_NAME,
 UU.REG_DATE,
 AA.WIN_AMOUNT,
 AA.BET_TIME,
 AA.GAME_CODE,
 CC.PLAY_LIST,
 AA.TOTAL_AMOUNT,
 AA.TOTAL_AMOUNT_S,
 CASE WHEN AA.ORDER_CNT > 1 THEN ''追號'' ELSE ''非追號'' END BET_TYPE,
 CASE WHEN AA.MULTIPLE_CNT > 3 OR ( AA.MULTIPLE_CNT > 1 AND AA.MULTIPLE_CNT = AA.ORDER_CNT ) THEN ''倍投'' ELSE ''非倍投'' END BET_MODE,
 A.ORDER_NUM
FROM AA
LEFT JOIN CC ON AA.ORDER_MASTER_ID = CC.ORDER_MASTER_ID
LEFT JOIN CORE.LGS_ORDER_MASTER A ON AA.ORDER_MASTER_ID = A.ORDER_MASTER_ID
LEFT JOIN CORE.US_CUSTOMER_VW U ON A.CUSTOMER_ID = U.CUSTOMER_ID
LEFT JOIN CORE.US_CUSTOMER_PROFILE_VW UU ON U.CUSTOMER_ID = UU.CUSTOMER_ID','jarry.z@my-cpg.com;','','','( EID-41 ) PF2 ASI-8364 大额中奖明细(每周)','Please see attached file of ( EID-41 ) PF2 ASI-8364 大额中奖明细(每周)

Thank you','joseph','2015-11-04 14:42:32','kimberlyclaire','2019-12-04 12:31:15','DAU',null);
INSERT INTO MONI_EXPORT (asid,TICKET_NUMBER,EN_NAME,CH_NAME,STATUS,JDBC,PLATFORM,CRON_EXPRESSION,SCRIPT,MAIL_TO,MAIL_CC,MAIL_BCC,MAIL_SUBJECT,MAIL_CONTENT,CREATE_BY,CREATE_TIME,UPDATE_BY,UPDATE_TIME,REQUESTER,LAST_EXPORT) VALUES
('EID-75','ASI-6465','( EID-75 ) PF1 ASI-6465 Nickname Data Report(daily/10:15)','( EID-75 ) PF1 ASI-6465 昵称数据报告(每日/10:15)','0','ub8-pf1-sec','1.0','0 15 10 * * ?','WITH L AS(
SELECT MAX(t2.login_time) login_time,t2.accounts FROM LOTT_NEW_A3D1.accounts_login_logs t2
WHERE trunc(t2.login_time)>=trunc(SYSDATE-7)
GROUP BY t2.accounts),
M AS(
SELECT accounts,realname,to_char(regtime,''yyyy-mm-dd hh24:mi:ss'') regtime FROM LOTT_NEW_A3D1.lott_vw_member_info
WHERE regexp_like(realname,''\S{0,20}\d{6,20}\S{0,20}|\S{0,20}[一二三四五六七八九零]{6,10}\S{0,20}'')
)
SELECT
M.accounts AS member_account,
M.realname AS nickname,
M.regtime AS RegTime
FROM M,L WHERE M.accounts=L.accounts','UBG/OD/SRV/ACS@my-cpg.com;srvduty@my-cpg.com','','','( EID-75 ) PF1 ASI-6465 昵称数据报告(每日/10:15)','Please see attached file of ( EID-75 ) PF1 ASI-6465 昵称数据报告(每日/10:15)
Thank you.','phoenix','2016-01-11 11:19:55','riel_john','2021-07-15 10:39:28','SRV',null);
INSERT INTO MONI_EXPORT (asid,TICKET_NUMBER,EN_NAME,CH_NAME,STATUS,JDBC,PLATFORM,CRON_EXPRESSION,SCRIPT,MAIL_TO,MAIL_CC,MAIL_BCC,MAIL_SUBJECT,MAIL_CONTENT,CREATE_BY,CREATE_TIME,UPDATE_BY,UPDATE_TIME,REQUESTER,LAST_EXPORT) VALUES
('EID-76','ASI-6465','( EID-76 ) PF1 ASI-6465 Nickname Data Report(daily/20:00)','( EID-76 ) PF1 ASI-6465 昵称数据报告(每日/20:00)','0','ub8-pf1-sec','1.0','0 0 20 * * ?','WITH L AS(
SELECT MAX(t2.login_time) login_time,t2.accounts FROM LOTT_NEW_A3D1.accounts_login_logs t2
WHERE trunc(t2.login_time)>=trunc(SYSDATE-7)
GROUP BY t2.accounts),
M AS(
SELECT accounts,realname,to_char(regtime,''yyyy-mm-dd hh24:mi:ss'') regtime FROM LOTT_NEW_A3D1.lott_vw_member_info
WHERE regexp_like(realname,''\S{0,20}\d{6,20}\S{0,20}|\S{0,20}[一二三四五六七八九零]{6,10}\S{0,20}'')
)
SELECT
M.accounts AS member_account,
M.realname AS nickname,
M.regtime AS RegTime
FROM M,L WHERE M.accounts=L.accounts','UBG/OD/SRV/ACS@my-cpg.com;srvduty@my-cpg.com','','','( EID-76 ) PF1 ASI-6465 昵称数据报告(每日/20:00)','Please see attached file of ( EID-76 ) PF1 ASI-6465 昵称数据报告(每日/20:00)

Thank you.','phoenix','2016-01-11 11:20:55','riel_john','2021-07-15 10:40:44','SRV',null);
INSERT INTO MONI_EXPORT (asid,TICKET_NUMBER,EN_NAME,CH_NAME,STATUS,JDBC,PLATFORM,CRON_EXPRESSION,SCRIPT,MAIL_TO,MAIL_CC,MAIL_BCC,MAIL_SUBJECT,MAIL_CONTENT,CREATE_BY,CREATE_TIME,UPDATE_BY,UPDATE_TIME,REQUESTER,LAST_EXPORT) VALUES
('EID-104','ASI-6958','( EID-104 ) PF1 ASI-6958 Monitor Accounts Using Internal IP(daily)','( EID-104 ) PF1 ASI-6958 监控内部IP账号(每日)','0','ub8-pf1','1.0','0 36 8 * * ?','with mm as (
     select
       accounts,
       realname,
       loginip,
       avflag,
       recommflag,
       regtime,
       logintime,
       level_up_id,
       level_id
       from LOTT_NEW_A3D1.lott_vw_member_info
       union all
          select
       accounts,
       realname,
       loginip,
       avflag,
       recommflag,
       regtime,
       logintime,
       level_up_id,
       level_id
       from LOTT_NEW_A3D1.lott_vw_member_info_bak
),aaa as (select accounts,login_ip from LOTT_NEW_A3D1.accounts_login_logs where

              LOGIN_IP in(
                --phl
                ''116.93.37.2'',''116.93.37.3'',''116.93.37.4'',''116.93.37.5'',''116.93.37.6''
                ,''203.177.2.210'',''203.177.2.211'',''203.177.2.212'',''203.177.2.213'',''203.177.2.214''

                --fgu
                ,''119.93.239.236'',''122.54.164.243''
                ,''112.199.58.106'',''112.199.58.107'',''112.199.58.108'',''112.199.58.109'',''112.199.58.110''

                --bdo
                ,''116.93.38.50'',''116.93.38.51'',''116.93.38.52'',''116.93.38.53'',''116.93.38.54''

                --taipei
                ,''211.75.112.37'',''211.75.112.38'',''211.75.112.39'',''211.75.112.40'',''211.75.112.41'',''211.75.112.42''
                ,''122.146.89.8'',''122.146.89.9'',''122.146.89.10'',''122.146.89.11'',''122.146.89.12'',''122.146.89.13'',''122.146.89.14'',''122.146.89.15''

                --台北unistar ip
                ,''118.163.16.106'',''118.163.16.107'',''118.163.16.108'',''118.163.16.109'',''118.163.16.110'',''118.163.16.111''
                ,''210.66.180.104'',''210.66.180.105'',''210.66.180.106'',''210.66.180.107'',''210.66.180.108'',''210.66.180.109'',''210.66.180.110'',''210.66.180.111''
              )

           and login_time between trunc(sysdate - 1) + 6/24 and trunc( sysdate ) + 6/24  order by login_ip
),aa  ( accounts , account2, level_up_id,level_id, SL, regtime ) as(
             select
                A.accounts, A.accounts, A.level_up_id,A.level_id, length(level_up_id)/7 as SL, A.regtime
              from mm A
              where ACCOUNTS  in ( select accounts from aaa )
              union all
              select aa.accounts, A.accounts , A.level_up_id ,A.level_id, aa.SL - 1 , A.regtime
              from aa
              left join mm A on aa.level_up_id = A.level_id
              where A.level_id is not null
        ),ab as (
            select
               accounts ,
            MAX(ACCOUNT2)  KEEP (DENSE_RANK LAST ORDER BY REGTIME) as ACCOUNT2,
            LEVEL_UP_ID,
            level_id,
            max( SL ) SL,
            max(REGTIME ) REGTIME
            from aa
            group by accounts, LEVEL_UP_ID,level_id
          ), bbb as (
            select accounts ,LISTAGG(account2, ''/'') WITHIN GROUP (ORDER BY SL) as upper_level_list
            from ab
            group by accounts
          ),ttt as(
             select accounts,BETTING_ORDER_AMOUNT,DEPOSIT_AMOUNT,WINNING_ORDER_AMOUNT,WITHDRAW_AMOUNT,CLOSING_BALANCE,CLOSING_3RD_BALANCE,DEPOSIT_3RD_PAY_AMOUNT, COMMISSION,
			 CREDIT_ADJ, BET_REWARDS, BANK_FEES, BETTING_3RD_AMOUNT,KYQP_BETTING_AMOUNT
             from LOTT_NEW_A3D1.liability_account_summary where trunc(BALANCE_DATE)=trunc(sysdate-1))
			 , specialDeposit as (
		select ACCOUNTS,BILL_AMOUNT from LOTT_NEW_A3D1.LOTT_ACCOUNTS_BILL where BILLTYPE in (''2080'',''2081'') and BILL_TIME between trunc(sysdate -1) and trunc(sysdate)
		)
select  distinct mm.accounts as "会员账号",mm.realname as "昵称", aaa.login_ip as "登陆IP",
case when mm.avflag=0 then ''手工禁用'' when mm.avflag=1 then ''可登陆''
when mm.avflag=2 then ''登陆禁用''  when mm.avflag=3 then ''注销'' when  mm.avflag=5 then ''系统禁用'' end as "可用标识",
case when mm.recommflag = 1 then ''推荐人'' else ''会员'' end as "会员级别",
lta.atten_name as "关注标签", to_char(mm.regtime, ''yyyy-mm-dd hh24:mi:ss'') as "注册时间",to_char(mm.logintime, ''yyyy-mm-dd hh24:mi:ss'') as "最后登陆时间",
bbb.upper_level_list as "上级推荐人", ttt.BETTING_ORDER_AMOUNT as "今日投注额",
 ttt.WINNING_ORDER_AMOUNT as "今日中奖额", (ttt.DEPOSIT_AMOUNT+ttt.DEPOSIT_3RD_PAY_AMOUNT) as "今日充值额", ttt.WITHDRAW_AMOUNT as "今日提现额",
ttt.BETTING_3RD_AMOUNT as "老虎机投注", ttt.KYQP_BETTING_AMOUNT as "棋牌投注",
ttt.CLOSING_BALANCE as "资金账户余额",
ttt.CLOSING_3RD_BALANCE as "休闲账户余额", ttt.CLOSING_BALANCE as "余额",
ttt.CREDIT_ADJ 充正金额,
ttt.BET_REWARDS 投注返点,
ttt.COMMISSION 代理返点,
ttt.BANK_FEES 充值返点,
specialDeposit.BILL_AMOUNT 代下级充值
from bbb left join mm on bbb.accounts = mm.accounts
left join aaa on bbb.accounts= aaa.accounts
left join LOTT_NEW_A3D1.lott_member_attention_tag lss on mm.accounts = lss.accounts left join LOTT_NEW_A3D1.lott_attention_tag lta on lss.atten_gid = lta.gid
left join ttt on bbb.accounts = ttt.accounts
left join specialDeposit on bbb.accounts = specialDeposit.accounts','john.l@my-cpg.com;UBG/OD/DAU/PA@my-cpg.com;jarry.z@my-cpg.com','','','( EID-104 ) ( EID-104 ) PF1 ASI-6958 监控内部IP账号(每日)','Please see attached file of ( EID-104 ) PF1 ASI-6958 监控内部IP账号(每日)
Thank you.','ferdinand','2016-03-21 12:33:23','camelle.d','2020-01-27 08:50:09','OTHERS',null);
INSERT INTO MONI_EXPORT (asid,TICKET_NUMBER,EN_NAME,CH_NAME,STATUS,JDBC,PLATFORM,CRON_EXPRESSION,SCRIPT,MAIL_TO,MAIL_CC,MAIL_BCC,MAIL_SUBJECT,MAIL_CONTENT,CREATE_BY,CREATE_TIME,UPDATE_BY,UPDATE_TIME,REQUESTER,LAST_EXPORT) VALUES
('EID-108','BI-28MGS','( EID-108 ) PF2 BI-28 Mail Read State Report(weekly)','( EID-108 ) PF2 BI-28 站内信阅读数据(每周)','0','ub8-pf5-core-sec','5.0','0 35 9 ? * MON','SELECT
       TO_CHAR(TRUNC(SYSDATE),''YYYY-MM-DD'') "数据日期"
     , PMS1.SM_TITLE "站内信名称"
     , TO_CHAR(TRUNC(PMS1.PUBLISH_TIME),''YYYY-MM-DD'') "站内信发送时间"
     , PMS1.OPERATOR_ID "站内信发起者"
     , SUM(CASE WHEN PMS2.READ_FLAG=0 THEN 1 ELSE 0 END) "未讀人數"
     , SUM(CASE WHEN PMS2.READ_FLAG<>0 THEN 1 ELSE 0 END) "已讀人數"
 FROM CORE.PMS_SHORT_MSG PMS1
 INNER JOIN CORE.PMS_SHORT_MSG_RECIPIENT PMS2 ON PMS1.MSG_ID = PMS2.MSG_ID
 WHERE SENDER_TYPE = ''OPERATOR''
 AND TRUNC(PMS1.PUBLISH_TIME) > TRUNC(SYSDATE-30)
 AND PMS1.SM_TITLE NOT IN (''提现失败'', ''提现审核不通过'', ''提现审核通过'')
GROUP BY TO_CHAR(TRUNC(PMS1.PUBLISH_TIME),''YYYY-MM-DD''), PMS1.SM_TITLE, PMS1.OPERATOR_ID
ORDER BY 2,3,4','ubg-da@my-cpg.com','','','( EID-108 ) PF2 BI-28 站内信阅读数据(每周)','Please see attached file of ( EID-108 ) PF2 BI-28 站内信阅读数据(每周)

Thank you.','phoenix','2016-05-10 14:47:42','john.g','2021-02-08 10:08:13','DAU',null);
INSERT INTO MONI_EXPORT (asid,TICKET_NUMBER,EN_NAME,CH_NAME,STATUS,JDBC,PLATFORM,CRON_EXPRESSION,SCRIPT,MAIL_TO,MAIL_CC,MAIL_BCC,MAIL_SUBJECT,MAIL_CONTENT,CREATE_BY,CREATE_TIME,UPDATE_BY,UPDATE_TIME,REQUESTER,LAST_EXPORT) VALUES
('EID-109','BI-28NEWS','( EID-109 ) PF2 BI-28 News Read State Report(weekly)','( EID-109 ) PF2 BI-28 公告阅读数据(每周)','0','ub8-pf5-core-sec','5.0','0 05 8 * * ?','--公告
SELECT
      TO_CHAR(TRUNC(SYSDATE),''YYYY-MM-DD'') "数据日期"
    , TO_CHAR(TRUNC(N2.CREATE_TIME),''YYYY-MM-DD'') "公告日期"
    , N3.CUSTOMER_ID "用户ID" --, V1.CUSTOMER_NAME "用户ID"
    , N2.TITLE "公告/活动名称"
    , TO_CHAR(N2.PUBLISH_TIME,''YYYY-MM-DD HH24:MI:SS'') "发送时间"
    , N1.OPERATOR_ID "操作管理员ID"
    , CASE WHEN N2.TYPE = ''MEMBER'' THEN ''会员公告'' WHEN N2.TYPE = ''ACTIVITY'' THEN ''活动'' ELSE N2.TYPE END "公告类型"
    , N2.NEWS_ID "公告ID"
    , CASE WHEN STATUS = ''DELETED'' THEN TO_CHAR(N1.UPDATE_TIME,''YYYY-MM-DD HH24:MI:SS'') ELSE NULL END AS "公告下线时间"
FROM CORE.PMS_NEWS_MAIN N1
INNER JOIN CORE.PMS_NEWS N2 ON N1.NEWS_MAIN_ID = N2.NEWS_MAIN_ID
INNER JOIN CORE.PMS_NEWS_READ N3 ON N3.NEWS_ID_LIST LIKE ''%,'' || N2.NEWS_ID ||'',%''
WHERE TRUNC(N2.CREATE_TIME) > TRUNC(SYSDATE-30)
ORDER BY TRUNC(N2.CREATE_TIME), N1.NEWS_MAIN_ID, N2.NEWS_ID, N3.CUSTOMER_ID','ubg-da@my-cpg.com','','','( EID-109 ) PF2 BI-28 公告阅读数据(每周)','Please see attached file of ( EID-109 ) PF2 BI-28 公告阅读数据(每周)

Thank you.','phoenix','2016-05-10 14:49:15','camelle.d','2019-12-04 16:00:27','DAU',null);
INSERT INTO MONI_EXPORT (asid,TICKET_NUMBER,EN_NAME,CH_NAME,STATUS,JDBC,PLATFORM,CRON_EXPRESSION,SCRIPT,MAIL_TO,MAIL_CC,MAIL_BCC,MAIL_SUBJECT,MAIL_CONTENT,CREATE_BY,CREATE_TIME,UPDATE_BY,UPDATE_TIME,REQUESTER,LAST_EXPORT) VALUES
('EID-119','ASI-6602-E','( EID-119 ) PF1 ASI-6602 Operation Status Report(hourly)','( EID-119 ) PF1 ASI-6602 运营状况数据导出(小时)','0','ub8-pf1-sec','1.0','0 08 * * * ?','with rrr as (
 select
   accounts ,
        TGI_ID,
        case when TGI_ID = 1 then REGEXP_REPLACE(PLAY_GMAE_ID, ''MGS_|MGS |BonusSlot|Flash|FeatureSlot|_'' , '''' )
        --then replace( replace( replace( PLAY_GMAE_ID , ''MGS_'' , '''') , ''_'' , '''')  , ''BonusSlot'' , '''')
          else PLAY_GMAE_ID end as  PLAY_GMAE_ID ,
        BILL_TIME,
        BILL_TYPE,
         AMOUNT
 from LOTT_NEW_A3D1.lott_3rd_accounts_bill_data
 where BILL_TYPE in ( ''2007'', ''2005'' )
  and BILL_TIME >= trunc( SYSDATE - 1/24, ''hh'') and BILL_TIME < trunc( SYSDATE , ''hh'')

), rr as (
   select
     accounts,
     TGI_ID,
         case when PLAY_GMAE_ID = ''TwistedCircus'' then ''TheTwistedCircus''
              when PLAY_GMAE_ID = ''FantasticSevens'' then ''fan7''
                  when PLAY_GMAE_ID = ''BigKahunaSL'' then ''BigKahuna''
                  when PLAY_GMAE_ID = ''ThnderStrck2'' then ''Thunderstruck2''
                  when PLAY_GMAE_ID = ''SlotFruit'' then ''fruits''
                  when PLAY_GMAE_ID = ''RRHeartsAndTarts'' then ''RRQueenOfHearts''
                  when PLAY_GMAE_ID = ''AvalonII'' then ''Avalon2''
                  when PLAY_GMAE_ID = ''IWCashapilar'' then ''Cashapillar''
                  when PLAY_GMAE_ID = ''OldKingCole'' then ''RROldKingCole''
                  when PLAY_GMAE_ID = ''GirlsWithGunsIIFrozenDawn'' then ''GirlsWithGunsFrozenDawn''
                  when PLAY_GMAE_ID = ''ElectroBingoWeb'' then ''ElectroBingo''
                  else PLAY_GMAE_ID end as PLAY_GMAE_ID,
         BILL_TIME,
         BILL_TYPE,
         AMOUNT
   from rrr
), aa as (
  select
  groupnames,
  max(decode(paramnames, ''GameName_en-US'', paramvalues,'''')) as en_name,
  max(decode(paramnames, ''GameName_zh-CN'', paramvalues,'''')) as cn_name,
  max(decode(paramnames, ''GameName_zh-TW'', paramvalues,'''')) as tw_name
from LOTT_NEW_A3D1.lott_para_all
where paramnames like ''GameName_%''
 and groupnames like ''%LotteryParameterSetting''
group by groupnames
), aaa as (
select
 A.gid,
 replace( A.GROUP_VALUE , ''Ruby'' , '''') GROUP_VALUE,
 aa.cn_name, regexp_replace( en_name, ''[[:space:]]*'','''') en_name
from LOTT_NEW_A3D1.lott_group_series A
left join aa on A.gid||''_LotteryParameterSetting'' = aa.groupnames
where A.group_type = 3
),zz as (
select
  trunc( bill_time, ''hh'') bill_time,
  rr.PLAY_GMAE_ID,
  rr.accounts ,
  max( nvl( aaa.gid, aaa2.gid ) )  as play_id,
  max( nvl( aaa.cn_name, aaa2.cn_name ) ) as play_name,
  sum( case when rr.bill_type = ''2007'' then AMOUNT end ) as bet_amount,
  sum( case when rr.bill_type = ''2005'' then AMOUNT end ) as win_amount,
  max( rr.tgi_id ) tgi_id
from rr
left join aaa aaa on  upper( rr.PLAY_GMAE_ID )  = upper( aaa.GROUP_VALUE )
left join aaa aaa2 on aaa.cn_name is null
 and upper( rr.PLAY_GMAE_ID ) = upper ( aaa2.en_name )
group by rr.PLAY_GMAE_ID, rr.accounts, trunc( bill_time, ''hh'') )
select
  to_char( bill_time, ''yyyy-mm-dd hh24:mi:ss'') as bill_date,
  accounts,
  play_id,
  play_name,
  bet_amount,
  win_amount,
  0,
  0,
  0,
  PLAY_GMAE_ID,
  case when TGI_ID = 1 then ''2'' when TGI_ID = 2 then ''3'' end as game_type,
  0
from zz','UBG-DA@my-cpg.com','','','( EID-119 ) PF1 ASI-6602 运营状况数据导出(小时)','Please see attached file of ( EID-119 ) PF1 ASI-6602 运营状况数据导出(小时)

Thank you.','phoenix','2016-05-31 16:01:35','camelle.d','2021-02-08 10:46:16','DAU',null);
INSERT INTO MONI_EXPORT (asid,TICKET_NUMBER,EN_NAME,CH_NAME,STATUS,JDBC,PLATFORM,CRON_EXPRESSION,SCRIPT,MAIL_TO,MAIL_CC,MAIL_BCC,MAIL_SUBJECT,MAIL_CONTENT,CREATE_BY,CREATE_TIME,UPDATE_BY,UPDATE_TIME,REQUESTER,LAST_EXPORT) VALUES
('EID-163','ASI-10171','( EID-163 ) PF1 ASI-10171 Winning News(daily)','( EID-163 ) PF1 ASI-10171 中奖喜报(每日)','0','ub8-pf1-sec','1.0','0 51 8 * * ?','SELECT A.ACCOUNTS as 中奖账号, b.REALNAME 会员昵称, c.REMARK 游戏彩种, decode(a.KINDVALUE, 1, ''元'', 0.1, ''角'', 0.01, ''分'', 10, ''十元'', 100, ''百元'') 投注模式,
--LISTAGG(f.PLAY_NAME, ''|'') WITHIN GROUP(ORDER BY INTO_TIME) AS 游戏玩法,
a.ORDERNO as 中奖订单, NUMERO as 中奖期号, a.TOTAL_AMOUNT as 投注金额, a.TOTAL_TIMES 投注倍数, a.TOTAL_WINPRICE as 单笔中奖总金额, BET_TIME as 投注时间, a.INTO_TIME as 中奖时间
FROM LOTT_NEW_A3D1.LOTT_FC3D_ORDER_MAIN A
left join LOTT_NEW_A3D1.lott_vw_member_info B on A.Accounts=B.Accounts
left join LOTT_NEW_A3D1.lott_group_series c on a.sortid=c.GROUP_VALUE and c.group_type = 1
left join LOTT_NEW_A3D1.lott_fc3d_order_data d on a.orderno=d.orderno
left join  (
  select sortid, bet_num, gid, ''keno'' as gg from LOTT_NEW_A3D1.lott_keno_order_detail
union all
select sortid, bet_num, gid, ''ssc'' as gg from LOTT_NEW_A3D1.lott_ssc_order_detail
union all
select sortid, bet_num, gid, ''11x5'' as gg from LOTT_NEW_A3D1.lott_11x5_order_detail
union all
select sortid, bet_num, gid, ''lf'' as gg from LOTT_NEW_A3D1.lott_lf_order_detail
union all
select sortid, bet_num, gid, ''k3'' as gg from LOTT_NEW_A3D1.lott_k3_order_detail
) e on d.pid=e.gid

WHERE (TOTAL_WINPRICE>=TOTAL_AMOUNT*900 OR TOTAL_WINPRICE>=100000)  --超1万或者超投注900倍
AND TRUNC(INTO_TIME) = TRUNC(SYSDATE-1)  --时间为昨天
AND STATUS=''004''
group by
A.ACCOUNTS, b.REALNAME, c.REMARK, decode(a.KINDVALUE, 1, ''元'', 0.1, ''角'', 0.01, ''分'', 10, ''十元'', 100, ''百元'')
, a.ORDERNO , NUMERO , a.TOTAL_AMOUNT , a.TOTAL_TIMES , a.TOTAL_WINPRICE , BET_TIME , a.INTO_TIME
ORDER BY INTO_TIME','UBG-OD-UBOP@my-cpg.com','penny.w@my-cpg.com;UBG-OD-UBOP-BDM@my-cpg.com;Glenn.ch@my-cpg.com;Faye.c@my-cpg.com','ella.l@my-cpg.com','( EID-163 ) 1.0 ASI-10171 中奖喜报(每日)','Please see attached file of ( EID-163 ) PF1 ASI-10171 中奖喜报(每日)

Thank you.','yorkx','2016-12-08 16:29:26','carlos.c','2021-02-08 09:31:17','OP',null);
INSERT INTO MONI_EXPORT (asid,TICKET_NUMBER,EN_NAME,CH_NAME,STATUS,JDBC,PLATFORM,CRON_EXPRESSION,SCRIPT,MAIL_TO,MAIL_CC,MAIL_BCC,MAIL_SUBJECT,MAIL_CONTENT,CREATE_BY,CREATE_TIME,UPDATE_BY,UPDATE_TIME,REQUESTER,LAST_EXPORT) VALUES
('EID-164','ASI-10171','( EID-164 ) PF2 ASI-10171 Winning News(daily)','( EID-164 ) PF2 ASI-10171 中奖喜报(每日)','0','ub8-pf5-core-sec','5.0','0 55 8 * * ?','SELECT DISTINCT C.CUSTOMER_NAME 中奖账号, D.NICKNAME 会员昵称, E.REMARK 游戏彩种, DECODE(A.BET_MODE, 1, ''元'', 2, ''角'', 3, ''分'') 投注模式,
A.ORDER_NUM 中奖订单, A.NUMERO 中奖期号, B.ACTUAL_BET_AMOUNT 投注金额，B.MULTIPLE 投注倍数, B.WIN_AMOUNT 单笔中奖总金额, B.DRAW_TIME 中奖时间, B.CREATE_TIME 投注时间
FROM CORE.LGS_ORDER_MASTER A JOIN CORE.LGS_ORDER_DETAIL B ON A.ORDER_MASTER_ID=B.ORDER_MASTER_ID
LEFT JOIN CORE.US_CUSTOMER_VW C ON A.CUSTOMER_ID=C.CUSTOMER_ID
LEFT JOIN CORE.US_CUSTOMER_PROFILE_VW D ON A.CUSTOMER_ID=D.CUSTOMER_ID
LEFT JOIN CORE.LGS_GAME E ON B.GAME_CODE=E.CODE
LEFT JOIN CORE.LGS_ORDER_INFO F ON A.ORDER_MASTER_ID=F.ORDER_MASTER_ID
WHERE (B.WIN_AMOUNT >= B.ACTUAL_BET_AMOUNT * 900 OR  B.WIN_AMOUNT >= 10000)
AND TRUNC(DRAW_TIME) = TRUNC(SYSDATE-1)
AND B.STATUS=4','UBG-OD-UBOP@my-cpg.com','penny.w@my-cpg.com;Glenn.ch@my-cpg.com;Faye.c@my-cpg.com','ella.l@my-cpg.com','( EID-164 ) 5.0 ASI-10171 中奖喜报(每日)','Please see attached file of ( EID-164 ) PF2 ASI-10171 中奖喜报(每日)

Thank you.','yorkx','2016-12-08 16:32:17','raphael','2020-05-11 17:09:16','OP',null);
INSERT INTO MONI_EXPORT (asid,TICKET_NUMBER,EN_NAME,CH_NAME,STATUS,JDBC,PLATFORM,CRON_EXPRESSION,SCRIPT,MAIL_TO,MAIL_CC,MAIL_BCC,MAIL_SUBJECT,MAIL_CONTENT,CREATE_BY,CREATE_TIME,UPDATE_BY,UPDATE_TIME,REQUESTER,LAST_EXPORT) VALUES
('EID-190','ASI-10977','( EID-190 ) PF1 ASI-10977 Request for New Member Data(daily)','( EID-190 ) PF1 ASI-10977 新注册会员数据导出(每日)','0','ub8-pf1-sec','1.0','0 56 8 * * ?','SELECT ACCOUNTS, RECOMAN, REGTIME FROM LOTT_NEW_A3D1.LOTT_VW_MEMBER_INFO
WHERE TRUNC(REGTIME) = TRUNC(SYSDATE-1)','john.l@my-cpg.com','','','( EID-190 ) PF1 ASI-10977 新注册会员数据导出(每日)','Please see attached file of ( EID-190 ) PF1 ASI-10977 新注册会员数据导出(每日)

Thank you.','kevin','2017-05-31 18:00:43','denice.d','2019-12-04 18:52:35','OTHERS',null);
INSERT INTO MONI_EXPORT (asid,TICKET_NUMBER,EN_NAME,CH_NAME,STATUS,JDBC,PLATFORM,CRON_EXPRESSION,SCRIPT,MAIL_TO,MAIL_CC,MAIL_BCC,MAIL_SUBJECT,MAIL_CONTENT,CREATE_BY,CREATE_TIME,UPDATE_BY,UPDATE_TIME,REQUESTER,LAST_EXPORT) VALUES
('EID-191','ASI-10977','( EID-191 ) PF2 ASI-10977 Request for New Member Data(daily)','( EID-191 ) PF2 ASI-10977 新注册会员数据导出(每日)','0','ub8-pf5-core-sec','5.0','0 58 8 * * ?','WITH SOURCE AS (
SELECT B.CUSTOMER_NAME,C.RECOMMENDER_ID, B.CREATE_TIME
FROM CORE.US_CUSTOMER_VW B LEFT OUTER JOIN CORE.US_CUSTOMER_PROFILE_VW C ON B.CUSTOMER_ID = C.CUSTOMER_ID
WHERE B.PLATFORM_TYPE = ''2''
AND TRUNC(B.CREATE_TIME) = TRUNC(SYSDATE-1))
SELECT SOURCE.CUSTOMER_NAME ACCOUNTS, D.CUSTOMER_NAME RECOMAN, SOURCE.CREATE_TIME FROM SOURCE LEFT JOIN CORE.US_CUSTOMER_VW D ON SOURCE.RECOMMENDER_ID = D.CUSTOMER_ID','john.l@my-cpg.com','','','( EID-191 ) PF2 ASI-10977 新注册会员数据导出(每日)','Please see attached file of ( EID-191 ) PF2 ASI-10977 新注册会员数据导出(每日)

Thank you.','kevin','2017-05-31 18:00:48','denice.d','2019-12-04 18:52:56','OTHERS',null);
INSERT INTO MONI_EXPORT (asid,TICKET_NUMBER,EN_NAME,CH_NAME,STATUS,JDBC,PLATFORM,CRON_EXPRESSION,SCRIPT,MAIL_TO,MAIL_CC,MAIL_BCC,MAIL_SUBJECT,MAIL_CONTENT,CREATE_BY,CREATE_TIME,UPDATE_BY,UPDATE_TIME,REQUESTER,LAST_EXPORT) VALUES
('EID-194','ASI-11104','( EID-194 ) PF2 ASI-11104 Winning Numbers Export(daily)','( EID-194 ) PF2 ASI-11104 每日开奖号码数据导出(每日)','0','ub8-pf5-core-sec','5.0','10 37 7 * * ?','SELECT GAME_CODE,WINNING_TIME AS EXPECTED_TIME,NUMERO,WINNING_NUMBER AS NUM_WIN
FROM CORE.LGS_DRAW_NUMBER_RESULT T
WHERE T.WINNING_TIME >= TRUNC(SYSDATE-1)
AND T.WINNING_TIME < TRUNC(SYSDATE)
ORDER BY GAME_CODE,WINNING_TIME ASC','john.l@my-cpg.com','','','( EID-194 ) PF2 ASI-11104 每日开奖号码数据导出(每日)','Please see attached file of ( EID-194 ) PF2 ASI-11104 每日开奖号码数据导出(每日)

Thank you.','NorthT','2017-07-06 18:21:43','john.g','2021-02-08 08:18:46','OTHERS',null);
INSERT INTO MONI_EXPORT (asid,TICKET_NUMBER,EN_NAME,CH_NAME,STATUS,JDBC,PLATFORM,CRON_EXPRESSION,SCRIPT,MAIL_TO,MAIL_CC,MAIL_BCC,MAIL_SUBJECT,MAIL_CONTENT,CREATE_BY,CREATE_TIME,UPDATE_BY,UPDATE_TIME,REQUESTER,LAST_EXPORT) VALUES
('EID-195','ASI-11104','( EID-195 ) PF1 ASI-11104 Winning Numbers Export(daily)','( EID-195 ) PF1 ASI-11104 每日开奖号码数据导出(每日)','0','ub8-pf1-sec','1.0','5 42 7 * * ?','select r.REMARK AS GAME_CODE,WIN_DATE AS EXPECTED_TIME,NUMERO,WIN_NO AS NUM_WIN from LOTT_NEW_A3D1.LOTT_MANAUL_TEMP T
LEFT JOIN LOTT_NEW_A3D1.LOTT_GROUP_SERIES r ON t.SORTID = r.GROUP_VALUE
where t.WIN_DATE >= trunc(sysdate-1)
AND t.WIN_DATE < trunc(sysdate)
ORDER BY SORTID,WIN_DATE ASC','john.l@my-cpg.com','','','( EID-195 ) PF1 ASI-11104 每日开奖号码数据导出(每日)','Please see attached file of ( EID-195 ) PF1 ASI-11104 每日开奖号码数据导出(每日)

Thank you.','NorthT','2017-07-06 18:25:49','camelle.d','2021-02-08 08:15:45','OTHERS',null);
INSERT INTO MONI_EXPORT (asid,TICKET_NUMBER,EN_NAME,CH_NAME,STATUS,JDBC,PLATFORM,CRON_EXPRESSION,SCRIPT,MAIL_TO,MAIL_CC,MAIL_BCC,MAIL_SUBJECT,MAIL_CONTENT,CREATE_BY,CREATE_TIME,UPDATE_BY,UPDATE_TIME,REQUESTER,LAST_EXPORT) VALUES
('EID-199','ASI-11198','( EID-199 ) PF1 ASI-11198 Login Info(daily)','( EID-199 ) PF1 ASI-11198 会员每日登入数据(每日)','0','ub8-pf1-sec','1.0','2 1 8 * * ?','select ACCOUNTS 会员账号,LOGIN_TIME 登入时间,LOGIN_IP 登入IP, LOGINWAY 登入装置  from LOTT_NEW_A3D1.ACCOUNTS_LOGIN_LOGS where trunc(LOGIN_TIME)=trunc(sysdate-1)
ORDER BY 1,2','john.l@my-cpg.com','','','( EID-199 ) PF1 ASI-11198 会员每日登入数据(每日)','Please see attached file of ( EID-199 ) PF1 ASI-11198 会员每日登入数据(每日)

Thank you.','yorkx','2017-07-19 17:59:49','martmil.n','2019-12-04 12:50:11','OTHERS',null);
INSERT INTO MONI_EXPORT (asid,TICKET_NUMBER,EN_NAME,CH_NAME,STATUS,JDBC,PLATFORM,CRON_EXPRESSION,SCRIPT,MAIL_TO,MAIL_CC,MAIL_BCC,MAIL_SUBJECT,MAIL_CONTENT,CREATE_BY,CREATE_TIME,UPDATE_BY,UPDATE_TIME,REQUESTER,LAST_EXPORT) VALUES
('EID-200','ASI-11198','( EID-200 ) PF2 ASI-11198 Login Info(daily)','( EID-200 ) PF2 ASI-11198 会员每日登入数据(每日)','0','ub8-pf5-core-sec','5.0','5 2 8 * * ?','select b.customer_name 会员账号, a.login_time  登入时间 , a.login_ip 登入IP, a.DEVICE_USER_AGENT 登入装置 from core.US_CUSTOMER_LOGIN_LOG a join core.us_customer_vw b on a.customer_id=b.customer_id
where trunc(LOGIN_TIME)=trunc(sysdate-1)
order by 1, 2','john.l@my-cpg.com','','','( EID-200 ) PF2 ASI-11198 会员每日登入数据(每日)','Please see attached file of ( EID-200 ) PF2 ASI-11198 会员每日登入数据(每日)

Thank you.','yorkx','2017-07-19 18:16:10','martmil.n','2019-12-04 12:50:53','OTHERS',null);
INSERT INTO MONI_EXPORT (asid,TICKET_NUMBER,EN_NAME,CH_NAME,STATUS,JDBC,PLATFORM,CRON_EXPRESSION,SCRIPT,MAIL_TO,MAIL_CC,MAIL_BCC,MAIL_SUBJECT,MAIL_CONTENT,CREATE_BY,CREATE_TIME,UPDATE_BY,UPDATE_TIME,REQUESTER,LAST_EXPORT) VALUES
('EID-215','AS Task','( EID-215 ) PF1 Oracle Error Log(daily)','( EID-215 ) PF1 Oracle错误日志(每日)','0','ub8-pf1-sec','1.0','0 30 10 * * ?','SELECT GID,oprateor, oper_type,to_char(oper_time,''mm-dd-yy hh24:mi:ss''),oper_context FROM LOTT_NEW_A3D1.lott_oper_log where oper_context like ''%ORA-%'' AND trunc(oper_time) = trunc(sysdate-1)','e15d2fd0.my-cpg.com@apac.teams.ms','','','( EID-215 ) PF1 Oracle错误日志(每日)','Please see attached file of ( EID-215 ) PF1 Oracle错误日志(每日)

Thank you.','aljen','2017-10-04 10:41:15','kolin','2021-02-02 17:48:21','AS',null);
INSERT INTO MONI_EXPORT (asid,TICKET_NUMBER,EN_NAME,CH_NAME,STATUS,JDBC,PLATFORM,CRON_EXPRESSION,SCRIPT,MAIL_TO,MAIL_CC,MAIL_BCC,MAIL_SUBJECT,MAIL_CONTENT,CREATE_BY,CREATE_TIME,UPDATE_BY,UPDATE_TIME,REQUESTER,LAST_EXPORT) VALUES
('EID-227','ASI-12320','( EID-227 ) PF2 ASI-12320 Member Label List Export(monthly)','( EID-227 ) PF2 ASI-12320 后台所有的标签会员名单(每月)','0','ub8-pf5-core-sec','5.0','0 5 8 L * ?','with AA as(
select CUSTOMER_ID , CREATE_TIME ,REASON  from core.US_CUSTOMER_GROUP_HISTORY A where
A.CREATE_TIME= ( select  MAX(CREATE_TIME)  from CORE.US_CUSTOMER_GROUP_HISTORY where CUSTOMER_ID = A.CUSTOMER_ID)
), BB as (
select CUSTOMER_NAME , CUSTOMER_ID ,
case
when ACTIVE_FLAG  in (0) then ''手工禁用''
when ACTIVE_FLAG  in (1) then ''可登錄''
when ACTIVE_FLAG  in (2) then ''登錄禁用''
when ACTIVE_FLAG  in (3) then ''注銷''
when ACTIVE_FLAG  in (5) then ''系統禁用''
when ACTIVE_FLAG  in (6) then ''登錄禁用(資密)''
when ACTIVE_FLAG  in (7) then ''帳號已刪''
end status
from core.US_CUSTOMER_vw
), CC as(
select B.GROUP_NAME ,C.CUSTOMER_NAME, A.CUSTOMER_ID
from CORE.US_CUSTOMER_GROUP_MAPPER A
left join core.US_CUSTOMER_GROUP B on A.GROUP_ID = B.GROUP_ID
left join CORE.US_CUSTOMER_vw C on A.CUSTOMER_ID = C.CUSTOMER_ID
where  B.GROUP_TYPE_ID=''2''
), DD as(

select A.CUSTOMER_ID , A.REASON
from CORE.US_CUSTOMER_GROUP_MAPPER A
left join core.US_CUSTOMER_GROUP B on A.GROUP_ID = B.GROUP_ID
where  B.GROUP_TYPE_ID=''2''
and B.GROUP_NAME !=''Grey''
group by CUSTOMER_ID , REASON

), EE as (
select B.CUSTOMER_NAME as 账号Account, B.status as 状态Status , C.GROUP_NAME as 关注标签Label , A.CREATE_TIME as 操作时间Actiontime ,  A.REASON  as 申请备注Remarks , D.REASON
from BB B
left join CC C on B.CUSTOMER_ID = C.CUSTOMER_ID
left join AA A on B.CUSTOMER_ID = A.CUSTOMER_ID
left join DD D on B.CUSTOMER_ID = D.CUSTOMER_ID
where C.GROUP_NAME is not null
)
select * from EE
where  关注标签LABEL not in (''Grey'')
and 申请备注Remarks not in (''活动套利黑名单'' )
and REASON not in (''活动套利黑名单'' )
order by 操作时间ACTIONTIME desc


/*with AA as(
select CUSTOMER_ID , CREATE_TIME ,REASON  from core.US_CUSTOMER_GROUP_HISTORY A where
A.CREATE_TIME= ( select  MAX(CREATE_TIME)  from CORE.US_CUSTOMER_GROUP_HISTORY where CUSTOMER_ID = A.CUSTOMER_ID)
), BB as (
select CUSTOMER_NAME , CUSTOMER_ID ,
case
when ACTIVE_FLAG  in (0) then ''手工禁用''
when ACTIVE_FLAG  in (1) then ''可登錄''
when ACTIVE_FLAG  in (2) then ''登錄禁用''
when ACTIVE_FLAG  in (3) then ''注銷''
when ACTIVE_FLAG  in (5) then ''系統禁用''
when ACTIVE_FLAG  in (6) then ''登錄禁用(資密)''
when ACTIVE_FLAG  in (7) then ''帳號已刪''
end status
from core.US_CUSTOMER_vw
), CC as(
select B.GROUP_NAME ,C.CUSTOMER_NAME, A.CUSTOMER_ID
from CORE.US_CUSTOMER_GROUP_MAPPER A
left join core.US_CUSTOMER_GROUP B on A.GROUP_ID = B.GROUP_ID
left join CORE.US_CUSTOMER_vw C on A.CUSTOMER_ID = C.CUSTOMER_ID
where  B.GROUP_TYPE_ID=''2'' and B.GROUP_NAME in (''Watchlist Account'', ''High Profit'')
), DD as(

select A.CUSTOMER_ID , A.REASON
from CORE.US_CUSTOMER_GROUP_MAPPER A
left join core.US_CUSTOMER_GROUP B on A.GROUP_ID = B.GROUP_ID
where  B.GROUP_TYPE_ID=''2''
and B.GROUP_NAME !=''Grey''
group by CUSTOMER_ID , REASON

), EE as (
select B.CUSTOMER_NAME as 账号Account, B.status as 状态Status , C.GROUP_NAME as 关注标签Label , A.CREATE_TIME as 操作时间Actiontime ,  A.REASON  as 申请备注Remarks , D.REASON
from BB B
left join CC C on B.CUSTOMER_ID = C.CUSTOMER_ID
left join AA A on B.CUSTOMER_ID = A.CUSTOMER_ID
left join DD D on B.CUSTOMER_ID = D.CUSTOMER_ID
where C.GROUP_NAME is not null
)
select * from EE
where ((申请备注Remarks != ''活动套利黑名单'' and REASON !=''活动套利黑名单'' )
or (申请备注Remarks is null and REASON !=''活动套利黑名单'')
or (申请备注Remarks != ''活动套利黑名单'' and REASON is null)
or (申请备注Remarks is null and REASON is null)
or (TRUNC(操作时间ACTIONTIME) > TO_DATE(''2017-12-14'', ''yyyy-mm-dd'')))
and 关注标签Label in (''Watchlist Account'', ''High Profit'')
order by 操作时间ACTIONTIME desc
*/
/* 20180220
with AA as(
select CUSTOMER_ID , CREATE_TIME ,REASON  from core.US_CUSTOMER_GROUP_HISTORY A where
A.CREATE_TIME= ( select  MAX(CREATE_TIME)  from CORE.US_CUSTOMER_GROUP_HISTORY where CUSTOMER_ID = A.CUSTOMER_ID)
), BB as (
select CUSTOMER_NAME , CUSTOMER_ID ,
case
when ACTIVE_FLAG  in (0) then ''手工禁用''
when ACTIVE_FLAG  in (1) then ''可登錄''
when ACTIVE_FLAG  in (2) then ''登錄禁用''
when ACTIVE_FLAG  in (3) then ''注銷''
when ACTIVE_FLAG  in (5) then ''系統禁用''
when ACTIVE_FLAG  in (6) then ''登錄禁用(資密)''
when ACTIVE_FLAG  in (7) then ''帳號已刪''
end status
from core.US_CUSTOMER_vw
), CC as(
select B.GROUP_NAME ,C.CUSTOMER_NAME, A.CUSTOMER_ID
from CORE.US_CUSTOMER_GROUP_MAPPER A
left join core.US_CUSTOMER_GROUP B on A.GROUP_ID = B.GROUP_ID
left join CORE.US_CUSTOMER_vw C on A.CUSTOMER_ID = C.CUSTOMER_ID
where  B.GROUP_TYPE_ID=''2''
), DD as(

select A.CUSTOMER_ID , A.REASON
from CORE.US_CUSTOMER_GROUP_MAPPER A
left join core.US_CUSTOMER_GROUP B on A.GROUP_ID = B.GROUP_ID
where  B.GROUP_TYPE_ID=''2''
and B.GROUP_NAME !=''Grey''
group by CUSTOMER_ID , REASON

), EE as (
select B.CUSTOMER_NAME as 账号Account, B.status as 状态Status , C.GROUP_NAME as 关注标签Label , A.CREATE_TIME as 操作时间Actiontime ,  A.REASON  as 申请备注Remarks , D.REASON
from BB B
left join CC C on B.CUSTOMER_ID = C.CUSTOMER_ID
left join AA A on B.CUSTOMER_ID = A.CUSTOMER_ID
left join DD D on B.CUSTOMER_ID = D.CUSTOMER_ID
where C.GROUP_NAME is not null
)
select * from EE
where (申请备注Remarks != ''活动套利黑名单'' and REASON !=''活动套利黑名单'' )
or (申请备注Remarks is null and REASON !=''活动套利黑名单'')
or (申请备注Remarks != ''活动套利黑名单'' and REASON is null)
or (申请备注Remarks is null and REASON is null)
or (TRUNC(操作时间ACTIONTIME) > TO_DATE(''2017-12-14'', ''yyyy-mm-dd''))
order by 操作时间ACTIONTIME desc

*/','dau-wa@my-cpg.com','','','( EID-227 ) PF2 ASI-12320 后台所有的标签会员名单(每月)','Please see attached file of ( EID-227 ) PF2 ASI-12320 后台所有的标签会员名单(每月)

Thank you.','wilson','2017-12-13 13:36:45','martmil.n','2019-12-04 12:45:09','AS',null);
INSERT INTO MONI_EXPORT (asid,TICKET_NUMBER,EN_NAME,CH_NAME,STATUS,JDBC,PLATFORM,CRON_EXPRESSION,SCRIPT,MAIL_TO,MAIL_CC,MAIL_BCC,MAIL_SUBJECT,MAIL_CONTENT,CREATE_BY,CREATE_TIME,UPDATE_BY,UPDATE_TIME,REQUESTER,LAST_EXPORT) VALUES
('EID-228','ASI-15214','( EID-228 ) PF1 ASI-12320 Member Label List Export(monthly)','( EID-228 ) PF1 ASI-12320 后台所有的标签会员名单(每月)','0','ub8-pf1-sec','1.0','0 5 8 L * ?','with AA as(
select ACCOUNTS , CREATE_TIME , NEW_REMARK from LOTT_NEW_A3D1.LOTT_MEMBER_ATTENTION_TAG_HIS A where A.CREATE_TIME= ( select  MAX(CREATE_TIME)  from LOTT_NEW_A3D1.LOTT_MEMBER_ATTENTION_TAG_HIS where accounts = A.accounts  )
), BB as(
select accounts ,
case
when AVFLAG in (0) then ''手工禁用''
when AVFLAG in (1) then ''可登錄''
when AVFLAG in (2) then ''登錄禁用''
when AVFLAG in (3) then ''注銷''
when AVFLAG in (5) then ''系統禁用''
when AVFLAG in (6) then ''登錄禁用(資密)''
end status
from LOTT_NEW_A3D1.LOTT_VW_MEMBER_INFO
), CC as(
select A.ACCOUNTS ,  B.ATTEN_NAME , A.ATTEN_REMARK from LOTT_NEW_A3D1.LOTT_MEMBER_ATTENTION_TAG A
left join LOTT_NEW_A3D1.LOTT_ATTENTION_TAG  B on A.ATTEN_GID = B.GID
where ATTEN_NAME is not null and
ATTEN_REMARK not like ''%活动套利黑名单%'' and ATTEN_REMARK not like ''%新手%''
)
select C.ACCOUNTS as 账号Account, B.status as 状态Status , C.ATTEN_NAME as 关注标签Label , A.CREATE_TIME as 操作时间Actiontime ,  A.NEW_REMARK  as 歷史申请备注Remarks , C.ATTEN_REMARK as 關注標籤AttenRemark
from CC C
left join BB B on C.ACCOUNTS = B.ACCOUNTS
left join AA A on C.ACCOUNTS = A.ACCOUNTS
where C.ATTEN_NAME is not null order by C.ATTEN_NAME

/* 20180525
with AA as(
select ACCOUNTS , CREATE_TIME , NEW_REMARK from LOTT_NEW_A3D1.LOTT_MEMBER_ATTENTION_TAG_HIS A where A.CREATE_TIME= ( select  MAX(CREATE_TIME)  from LOTT_NEW_A3D1.LOTT_MEMBER_ATTENTION_TAG_HIS where accounts = A.accounts  )
), BB as(
select accounts ,
case
when AVFLAG in (0) then ''手工禁用''
when AVFLAG in (1) then ''可登錄''
when AVFLAG in (2) then ''登錄禁用''
when AVFLAG in (3) then ''注銷''
when AVFLAG in (5) then ''系統禁用''
when AVFLAG in (6) then ''登錄禁用(資密)''
end status
from LOTT_NEW_A3D1.LOTT_VW_MEMBER_INFO
), CC as(
select A.ACCOUNTS ,  B.ATTEN_NAME from LOTT_NEW_A3D1.LOTT_MEMBER_ATTENTION_TAG A
left join LOTT_NEW_A3D1.LOTT_ATTENTION_TAG  B on A.ATTEN_GID = B.GID
where ATTEN_NAME is not null
)
select C.ACCOUNTS as 账号Account, B.status as 状态Status , C.ATTEN_NAME as 关注标签Label , A.CREATE_TIME as 操作时间Actiontime ,  A.NEW_REMARK  as 申请备注Remarks
from LOTT_NEW_A3D1.CC C
left join LOTT_NEW_A3D1.BB B on C.ACCOUNTS = B.ACCOUNTS
left join LOTT_NEW_A3D1.AA A on C.ACCOUNTS = A.ACCOUNTS
where C.ATTEN_NAME is not null order by C.ATTEN_NAME
*/','dau-wa@my-cpg.com','','','( EID-228 ) PF1 ASI-12320 后台所有的标签会员名单(每月)','Please see attached file of ( EID-228 ) PF1 ASI-12320 后台所有的标签会员名单(每月) Thank you.','wilson','2017-12-13 15:36:18','jason','2019-12-05 11:54:21','DAU',null);
INSERT INTO MONI_EXPORT (asid,TICKET_NUMBER,EN_NAME,CH_NAME,STATUS,JDBC,PLATFORM,CRON_EXPRESSION,SCRIPT,MAIL_TO,MAIL_CC,MAIL_BCC,MAIL_SUBJECT,MAIL_CONTENT,CREATE_BY,CREATE_TIME,UPDATE_BY,UPDATE_TIME,REQUESTER,LAST_EXPORT) VALUES
('EID-235:MID-135','ASI-13634','( EID-235:MID-135 ) PF1 ASI-13634 Internal Account Monitor(daily)','( EID-235:MID-135 ) PF1 ASI-13634 内部账户账变监控(每日)','0','ub8-pf1','1.0','0 38 8 * * ?','with mm as (
		select accounts,realname,loginip,avflag,recommflag,regtime,logintime,level_up_id,level_id from LOTT_NEW_A3D1.lott_vw_member_info
		union all
		select accounts,realname,loginip,avflag,recommflag,regtime,logintime,level_up_id,level_id from LOTT_NEW_A3D1.lott_vw_member_info_bak
		),aaa as (
			select accounts,login_ip from LOTT_NEW_A3D1.accounts_login_logs where ACCOUNTS in( select ACCOUNTS from LOTT_NEW_A3D1.LOTT_ACCOUNTS_BILL where
			(BILL_TIME between trunc(sysdate -1 ) and trunc(sysdate)) and
			(ACCOUNTS in (select ACCOUNTS from LOTT_NEW_A3D1.lott_member_attention_tag where ATTEN_GID in (''323'',''216''))))and
			(login_time between trunc(sysdate - 1) + 6/24 and trunc( sysdate ) + 6/24)
			 order by login_ip
			 ),
			 aa (
				accounts , account2, level_up_id,level_id, SL, regtime ) as(select A.accounts, A.accounts, A.level_up_id,A.level_id, length(level_up_id)/7 as SL, A.regtime from mm A
				where ACCOUNTS  in ( select accounts from aaa )
				union all
				select aa.accounts, A.accounts , A.level_up_id ,A.level_id, aa.SL - 1 , A.regtime from aa left join LOTT_NEW_A3D1.mm A on aa.level_up_id = A.level_id where A.level_id is not null
        ),ab as (
			select accounts ,MAX(ACCOUNT2)  KEEP (DENSE_RANK LAST ORDER BY REGTIME) as ACCOUNT2,LEVEL_UP_ID,level_id,max( SL ) SL,max(REGTIME ) REGTIME from aa
			group by accounts, LEVEL_UP_ID,level_id
        ),bbb as (
            select accounts ,LISTAGG(account2, ''/'') WITHIN GROUP (ORDER BY SL) as upper_level_list from ab group by accounts
        ),ttt as(
            select accounts,BETTING_ORDER_AMOUNT,DEPOSIT_AMOUNT,WINNING_ORDER_AMOUNT,WITHDRAW_AMOUNT,CLOSING_BALANCE,CLOSING_3RD_BALANCE,DEPOSIT_3RD_PAY_AMOUNT,BET_REWARDS, BETTING_3RD_AMOUNT, KYQP_BETTING_AMOUNT, FMC_BETTING_AMOUNT, MGS2_BET_AMOUNTS, COMMISSION
			from LOTT_NEW_A3D1.liability_account_summary where trunc(BALANCE_DATE)=trunc(sysdate-1)
		),fff as ( select ACCOUNTS,BILL_AMOUNT  from LOTT_NEW_A3D1.LOTT_ACCOUNTS_BILL where (BILLTYPE = ''2021'') and (BILL_TIME between trunc(sysdate -1 ) and trunc(sysdate))
		),ggg as ( select ACCOUNTS,BILL_AMOUNT  from LOTT_NEW_A3D1.LOTT_ACCOUNTS_BILL where (BILLTYPE = ''7007'') and (BILL_TIME between trunc(sysdate -1 ) and trunc(sysdate)))
, specialDeposit as (
		select ACCOUNTS, NVL(BILL_AMOUNT,0) BILL_AMOUNT  from LOTT_NEW_A3D1.LOTT_ACCOUNTS_BILL where (BILLTYPE in (''2003'',''3005'',''4005'',''7002'')) and (BILL_TIME between trunc(sysdate -1 ) and trunc(sysdate))
		)
select distinct mm.accounts "会员账号",mm.realname "昵称", aaa.login_ip "登陆IP",
case when mm.avflag=0 then ''手工禁用'' when mm.avflag=1 then ''可登陆'' when mm.avflag=2 then ''登陆禁用'' when mm.avflag=3 then ''注销'' when  mm.avflag=5 then ''系统禁用'' end "可用标识",
case when mm.recommflag = 1 then ''推荐人'' else ''会员'' end "会员级别",lta.atten_name "关注标签",
to_char(mm.regtime, ''yyyy-mm-dd hh24:mi:ss'') "注册时间",to_char(mm.logintime, ''yyyy-mm-dd hh24:mi:ss'') "最后登陆时间",
bbb.upper_level_list "上级推荐人", ttt.BETTING_ORDER_AMOUNT "今日投注额",
ttt.WINNING_ORDER_AMOUNT "今日中奖额",
(ttt.DEPOSIT_AMOUNT+ttt.DEPOSIT_3RD_PAY_AMOUNT) "今日充值额",
ttt.WITHDRAW_AMOUNT "今日提现额",
ttt.BETTING_3RD_AMOUNT as "老虎机投注",
ttt.KYQP_BETTING_AMOUNT as "棋牌投注",
ttt.CLOSING_BALANCE "资金账户余额",
ttt.CLOSING_3RD_BALANCE "休闲账户余额", ttt.CLOSING_BALANCE "余额" ,
ttt.BET_REWARDS "投注返点" ,
ggg.BILL_AMOUNT "代下级充值额",
specialDeposit.BILL_AMOUNT "充正金额",
ttt.COMMISSION"代理返点"
from LOTT_NEW_A3D1.bbb left join mm on bbb.accounts = mm.accounts
left join aaa on bbb.accounts= aaa.accounts
left join LOTT_NEW_A3D1.lott_member_attention_tag lss on mm.accounts = lss.accounts
left join LOTT_NEW_A3D1.lott_attention_tag lta on lss.atten_gid = lta.gid
left join ttt on bbb.accounts = ttt.accounts
left join fff on fff.accounts = ttt.accounts
left join ggg on ggg.accounts = fff.accounts
left join specialDeposit on specialDeposit.accounts = ttt.accounts
where ((abs(ttt.BETTING_ORDER_AMOUNT)+ ttt.WINNING_ORDER_AMOUNT+ ttt.DEPOSIT_AMOUNT+ ttt.DEPOSIT_3RD_PAY_AMOUNT + abs(nvl(ttt.KYQP_BETTING_AMOUNT, 0)) + abs(nvl(ttt.FMC_BETTING_AMOUNT, 0)) + abs(nvl(ttt.MGS2_BET_AMOUNTS, 0)) + ttt.BET_REWARDS + nvl(fff.BILL_AMOUNT,0) + nvl(ggg.BILL_AMOUNT,0) + nvl(specialDeposit.BILL_AMOUNT,0)) > 0) or (ttt.WITHDRAW_AMOUNT < 0)','john.l@my-cpg.com;UBG/OD/DAU/PA@my-cpg.com;jarry.z@my-cpg.com','','','( EID-235:MID-135 ) PF1 ASI-13634 内部账户账变监控(每日)','Please see attached file of ( EID-235:MID-135 ) PF1 ASI-13634 内部账户账变监控(每日)

Thank you.','shanti','2018-07-12 11:58:35','raphael','2020-10-20 15:51:00','DAU',null);
INSERT INTO MONI_EXPORT (asid,TICKET_NUMBER,EN_NAME,CH_NAME,STATUS,JDBC,PLATFORM,CRON_EXPRESSION,SCRIPT,MAIL_TO,MAIL_CC,MAIL_BCC,MAIL_SUBJECT,MAIL_CONTENT,CREATE_BY,CREATE_TIME,UPDATE_BY,UPDATE_TIME,REQUESTER,LAST_EXPORT) VALUES
('EID-236 ','ASI-13634','( EID-236 ) PF2 ASI-13634 Internal Account Monitor(daily)','( EID-236 ) PF2 ASI-13634 内部账户账变监控(每日)','0','ub8-pf5-ods','5.0','0 38 8 * * ?','WITH
 FUNCTION LISTNAME(iCUSTOMER_ID NUMBER) RETURN VARCHAR2 AS
sCUSTOMER_NAME_LIST VARCHAR2(255);
BEGIN
select LISTAGG(CUSTOMER_NAME, ''/'') WITHIN GROUP (ORDER BY LV_ID DESC)
INTO sCUSTOMER_NAME_LIST
from (
select cu1.*,LEVEL AS LV_ID
from
 (
   select
     c1.CUSTOMER_ID,
	 c1.CUSTOMER_NAME,
	 c2.LEVEL_ID,
	 c2.RECOMMENDER_ID
	from CORE.US_CUSTOMER_vw c1
	INNER JOIN CORE.US_CUSTOMER_PROFILE_vw c2 ON c1.CUSTOMER_ID = c2.CUSTOMER_ID ) cu1
Start with CUSTOMER_ID = iCUSTOMER_ID
Connect by CUSTOMER_ID = prior RECOMMENDER_ID
)
;
RETURN sCUSTOMER_NAME_LIST;
END;
SELECT
       cu1.CUSTOMER_NAME AS "会员账号",
       cu2.NICKNAME AS "昵称",
       cu2.LAST_LOGIN_IP AS "登陆IP",
       case when cu1.ACTIVE_FLAG=0 then ''手工禁用''
            when cu1.ACTIVE_FLAG=1 then ''可登陆''
            when cu1.ACTIVE_FLAG=2 then ''登陆禁用''
            when cu1.ACTIVE_FLAG=3 then ''注销''
            when cu1.ACTIVE_FLAG=5 then ''系统禁用''  end AS "可用标识",
       case when cu2.CREATE_SUBO_FLAG = 1 then ''推荐人'' else ''会员'' end AS "会员级别",
       Z.group_name AS "关注标签",
       to_char(cu2.REG_DATE, ''yyyy-mm-dd hh24:mi:ss'') AS "注册时间",
       to_char(cu2.LAST_LOGIN_TIME, ''yyyy-mm-dd hh24:mi:ss'') AS "最后登陆时间",
       LISTNAME(cu1.CUSTOMER_ID) AS "上级推荐人",
       la.SUM_BET AS "今日投注额",
       la.SUM_WIN AS "今日中奖额",
       (la.SUM_DEPOSIT+la.SUM_3RD_PAY_DEPOSIT) AS "今日充值额",
       la.SUM_WITHDRAW AS "今日提现额",
       la.SUM_CG_BET AS "老虎机投注",
       bi.SUM_BET AS "棋牌投注",
       la.SUM_CLOSING AS "资金账户余额",
       la.SUM_CG_CLOSING AS "休闲账户余额",
       (la.SUM_CLOSING +la.SUM_CG_CLOSING) AS "余额",
	   la.SUM_AGENT_TRANSFER_OUT "代下级充值额",
	   la.SUM_RET_BET "投注返点",
	   la.ADJ_CREDIT "充正金額",
           la.SUM_RET_AGENT "代理返点"
	   FROM CORE.US_CUSTOMER_vw cu1 left JOIN CORE.US_CUSTOMER_PROFILE_vw cu2 ON cu1.CUSTOMER_ID = cu2.CUSTOMER_ID
	   JOIN (select CUSTOMER_ID FROM CORE.US_CUSTOMER_vw  where
	   CUSTOMER_ID in (SELECT CUSTOMER_ID FROM CORE.US_CUSTOMER_GROUP_MAPPER WHERE GROUP_ID in (''39'',''44'')) and CUSTOMER_NAME in (SELECT CUSTOMER_NAME FROM CORE.ACS_TRANSACTION WHERE (TX_TIME BETWEEN TRUNC(SYSDATE -1) AND TRUNC(SYSDATE)))
            )lg ON lg.CUSTOMER_ID = cu1.CUSTOMER_ID
        LEFT JOIN (
            select ACCOUNTS as CUSTOMER_NAME, NVL(SUM(AMOUNT),0) as SUM_BET from core.LOTT_3RD_ACCOUNTS_BILL_DATA
            where (BILL_TIME BETWEEN TRUNC(SYSDATE -1) AND TRUNC(SYSDATE))
            AND TGI_ID=''7''
            AND BILL_TYPE=''2007''
            group by ACCOUNTS ) bi ON cu1.CUSTOMER_NAME = bi.CUSTOMER_NAME
        left JOIN ODS.ODS_LIABILITY_SUM la ON la.CUSTOMER_ID = cu1.CUSTOMER_ID
        AND BIZ_DATE = trunc(sysdate-1)

        left join ( select
            A.customer_id,
            B.group_name
            from CORE.US_CUSTOMER_GROUP_MAPPER A
            left join CORE.US_CUSTOMER_GROUP B on A.GROUP_ID = B.GROUP_ID ) Z on cu1.customer_id = Z.customer_id
      where (la.SUM_BET+ la.SUM_WIN + la.SUM_DEPOSIT+la.SUM_3RD_PAY_DEPOSIT + la.SUM_AGENT_TRANSFER_OUT + la.SUM_RET_BET+ la.ADJ_CREDIT > 0) or (la.SUM_WITHDRAW < 0)','john.l@my-cpg.com;UBG/OD/DAU/PA@my-cpg.com;jarry.z@my-cpg.com','','','( EID-236 ) PF2 ASI-13634 内部账户账变监控(每日)','Please see attached file of ( EID-236 ) PF2 ASI-13634 内部账户账变监控(每日)

Thank you.','shanti','2018-07-12 17:35:01','john.g','2021-02-08 09:14:12','DAU',null);
INSERT INTO MONI_EXPORT (asid,TICKET_NUMBER,EN_NAME,CH_NAME,STATUS,JDBC,PLATFORM,CRON_EXPRESSION,SCRIPT,MAIL_TO,MAIL_CC,MAIL_BCC,MAIL_SUBJECT,MAIL_CONTENT,CREATE_BY,CREATE_TIME,UPDATE_BY,UPDATE_TIME,REQUESTER,LAST_EXPORT) VALUES
('EID-260','ASI-13676','( EID-260 ) PF1 ASI-13676 Quality Member Data Export(daily)','( EID-260 ) PF1 ASI-13676 优质会员数据需求(每日)','0','ub8-pf1-sec','1.0','0 30 6 * * ?','select m.accounts,LOGINTIME,REGTIME,ag.groupname,sum(DEPOSIT_AMOUNT),sum(BETTING_ORDER_AMOUNT)
from LOTT_NEW_A3D1.ACCOUNT_GROUP_NAME ag
inner join LOTT_NEW_A3D1.LOTT_VW_MEMBER_INFO m on m.ACCOUNTID	= ag.ACCOUNTID
inner join LOTT_NEW_A3D1.LIABILITY_ACCOUNT_SUMMARY s on s.ACCOUNTS = m.ACCOUNTS
where ag.groupname in (''优质会员组'',''大额充值会员组'')
and s.BALANCE_DATE between sysdate - 30 and sysdate
group by m.accounts,LOGINTIME,REGTIME,ag.groupname
order by GROUPNAME,REGTIME','UBG/OD/DAU/PA@my-cpg.com','jarry.z@my-cpg.com','','( EID-260 ) PF1 ASI-13676 优质会员数据需求(每日)','Please see attached file of ( EID-260 ) PF1 ASI-13676 优质会员数据需求(每日)

Thank you.','Dave.S','2018-10-11 14:34:15','kolin','2021-06-09 10:43:11','DAU',null);
INSERT INTO MONI_EXPORT (asid,TICKET_NUMBER,EN_NAME,CH_NAME,STATUS,JDBC,PLATFORM,CRON_EXPRESSION,SCRIPT,MAIL_TO,MAIL_CC,MAIL_BCC,MAIL_SUBJECT,MAIL_CONTENT,CREATE_BY,CREATE_TIME,UPDATE_BY,UPDATE_TIME,REQUESTER,LAST_EXPORT) VALUES
('EID-299','ASI-14281','( EID-299 ) PF1 ASI-14281 Withdraw Fail Report(weekly)','( EID-299 ) PF1 ASI-14281 提现失败订单数据(每周)','0','ub8-pf1-sec','1.0','3 1 6 ? * MON','SELECT LAR.ACCOUNTS "账号",LAR.TRANSID "流水号",LAR.REAL_AMOUNTS"实际金额",LAR.REQ_TIME "申请时间",LAR.OPERTIME "审核时间" ,LBWA.DETAIL "DP备注"
FROM LOTT_NEW_A3D1.LOTT_ATM_REQ LAR
INNER JOIN LOTT_NEW_A3D1.LOTT_BANK_WITHDRAW_ARRIVALS_VW LBWA ON LAR.TRANSID  =  LBWA.PROVIDER_ORDER_NUM
WHERE LAR.REQ_TIME > TRUNC(SYSDATE) -7 AND STATE = ''3''
ORDER BY LAR.REQ_TIME','UBG/OD/DAU/PA@my-cpg.com;jarry.z@my-cpg.com;dau-wa@my-cpg.com','','','( EID-299 ) PF1 ASI-14281 提现失败订单数据(每周)','Please see attached file of ( EID-299 ) PF1 ASI-14281 提现失败订单数据(每周)

Thank you.','shanti','2019-03-27 19:38:56','riel_john','2020-01-27 06:15:44','DAU',null);
INSERT INTO MONI_EXPORT (asid,TICKET_NUMBER,EN_NAME,CH_NAME,STATUS,JDBC,PLATFORM,CRON_EXPRESSION,SCRIPT,MAIL_TO,MAIL_CC,MAIL_BCC,MAIL_SUBJECT,MAIL_CONTENT,CREATE_BY,CREATE_TIME,UPDATE_BY,UPDATE_TIME,REQUESTER,LAST_EXPORT) VALUES
('EID-300','ASI-14281','( EID-300 ) PF2 ASI-14281 Withdraw Fail Report(weekly)','( EID-300 ) PF2 ASI-14281 提现失败订单数据(每周)','0','ub8-pf5-core-sec','5.0','23 1 6 ? * MON','SELECT CUSTOMER_NAME "账号", RECORD_ID "流水号",ARRIVAL_AMOUNT "实际金额",REQUEST_TIME "申请时间",OPERTIME "审核时间" ,DETAIL "DP备注"
FROM CORE.BPS_WITHDRAW_RECORD_VW
WHERE REQUEST_TIME > TRUNC(SYSDATE) -7 AND STATUS = ''5''
ORDER BY REQUEST_TIME','UBG/OD/DAU/PA@my-cpg.com;jarry.z@my-cpg.com;dau-wa@my-cpg.com','','','( EID-300 ) PF2 ASI-14281 提现失败订单数据(每周)','Please see attached file of ( EID-300 ) PF2 ASI-14281 提现失败订单数据(每周)

Thank you.','shanti','2019-03-27 19:38:59','martmil.n','2019-12-04 12:34:56','DAU',null);
INSERT INTO MONI_EXPORT (asid,TICKET_NUMBER,EN_NAME,CH_NAME,STATUS,JDBC,PLATFORM,CRON_EXPRESSION,SCRIPT,MAIL_TO,MAIL_CC,MAIL_BCC,MAIL_SUBJECT,MAIL_CONTENT,CREATE_BY,CREATE_TIME,UPDATE_BY,UPDATE_TIME,REQUESTER,LAST_EXPORT) VALUES
('EID-309','AS Task','( EID-309 ) PF1 PED Draw Delay(weekly)','( EID-309 ) PF1 PED录入奖号延迟数据导出(每周)','0','ub8-pf1-sec','1.0','0 30 0 ? * MON','with aa as (select s.PARAM_ONE, to_char(t.WIN_DATE,''IW'') as week, trunc((t.OPERTIME1-t.WIN_DATE)*24*60) as DELAY_IN_MINUTES
from lott_new_a3d1.LOTT_MANAUL_TEMP t
inner join lott_new_a3d1.LOTT_GROUP_SERIES s on t.SORTID = s.GROUP_VALUE
where trunc((t.OPERTIME1-t.WIN_DATE)*24*60) > 5
and to_char(t.WIN_DATE, ''yyyy-mm-dd'') between to_char(sysdate-7, ''yyyy-mm-dd'') and  to_char(sysdate-1, ''yyyy-mm-dd'')
and param_one != ''null''
and win_type in (''02'', ''03'', ''05''))
select week, param_one as game_code, sum(DELAY_IN_MINUTES) as DELAY_IN_MINUTES, count (*) as number_of_delay_per_week
from aa
group by param_one, week
order by delay_in_minutes desc','e15d2fd0.my-cpg.com@apac.teams.ms','','','( EID-309 ) PF1 PED录入奖号延迟数据导出(每周)','Please see attached file of ( EID-309 ) PF1 PED录入奖号延迟数据导出(每周)
Encode the result on google: https://tinyurl.com/yxv9uw82

Thank you.','riel_john','2019-06-03 22:55:45','kimberlyclaire','2020-09-02 09:32:08','AS',null);
INSERT INTO MONI_EXPORT (asid,TICKET_NUMBER,EN_NAME,CH_NAME,STATUS,JDBC,PLATFORM,CRON_EXPRESSION,SCRIPT,MAIL_TO,MAIL_CC,MAIL_BCC,MAIL_SUBJECT,MAIL_CONTENT,CREATE_BY,CREATE_TIME,UPDATE_BY,UPDATE_TIME,REQUESTER,LAST_EXPORT) VALUES
('EID-310','AS Task','( EID-310 ) PF2 PED Draw Delay(weekly)','( EID-310 ) PF2 PED录入奖号延迟数据导出(每周)','0','ub8-pf5-core-sec','5.0','30 30 0 ? * MON','with aa as (select GAME_CODE,WINNING_TIME, to_char(WINNING_TIME,''IW'') as week,trunc((cast(FIRST_OP_TIME as DATE) - cast(WINNING_TIME as DATE))*24*60) as delay_in_minutes
FROM CORE.LGS_DRAW_NUMBER_RESULT where to_char(WINNING_TIME, ''yyyy-mm-dd'') between to_char(sysdate-7, ''yyyy-mm-dd'') and  to_char(sysdate-1, ''yyyy-mm-dd'')
and trunc((cast(FIRST_OP_TIME as DATE) - cast(WINNING_TIME as DATE))*24*60) > 5 and reward_status in (''0'', ''1''))
select week,game_code, sum (delay_in_minutes) as delay_in_minutes, count (*) as number_of_delay_per_week
from aa
group by game_code, week
order by week desc, delay_in_minutes desc','e15d2fd0.my-cpg.com@apac.teams.ms','','','( EID-310 ) PF2 PED录入奖号延迟数据导出(每周)','Please see attached file of ( EID-310 ) PF2 PED录入奖号延迟数据导出(每周)
Encode the result on google: https://tinyurl.com/yxw63s92

Thank you.','riel_john','2019-06-03 23:04:07','kimberlyclaire','2020-09-02 09:34:31','AS',null);
INSERT INTO MONI_EXPORT (asid,TICKET_NUMBER,EN_NAME,CH_NAME,STATUS,JDBC,PLATFORM,CRON_EXPRESSION,SCRIPT,MAIL_TO,MAIL_CC,MAIL_BCC,MAIL_SUBJECT,MAIL_CONTENT,CREATE_BY,CREATE_TIME,UPDATE_BY,UPDATE_TIME,REQUESTER,LAST_EXPORT) VALUES
('EID-317','AS Task','( EID-317 ) AS Monitor Alert Record Report(monthly)','( EID-317 ) AS Monitor告警纪录(每月)','0','mysql-as-portal','AS','0 0 9 1  *  ?','select date_format(create_time,''%m'') as MONTH, ID as JOB_ID,PLATFORM, ASID, EN_NAME, CH_NAME,REQUESTER, TICKET_NUMBER, case when PRIORITY = 0 then "Not Urgent" else "Urgent" end as PRIORITY, ACTION_ITEM, '' '' as OPER,'' '' as START_TIME, date_format(CREATE_TIME, ''%Y-%m-%d'') as BY_DATE, LAST_ALERT, ''create monitor alert'' as REMARK, DESCR, case when STATUS = 1 then "Enable" else "Disable" end as STATUS, case when AUDIT_STATUS = 0 then "Not yet" when AUDIT_STATUS = 1 then "Approve" else "Not Approve" end as AUDIT_STATUS, JDBC,case when SCRIPT_TYPE = 1 then "SQL" else "Shell Script" end as DATA_TYPE,CRON_EXPRESSION, AUTO_MATCH, CREATE_USER, CREATE_TIME, ALTER_USER, ALTER_TIME, AUDIT_USER, AUDIT_TIME,'' '' as EXCEPTION_LOG, REL_EXPORT,case when TELEGRAM_ALERT = 0 then "Disable" else "Enable" end as TELEGRAM_ALERT, TELEGRAM_INFO from MONI_JOB where CREATE_TIME >= date_format(CURRENT_DATE - INTERVAL 1 MONTH, ''%Y/%m/01'') and CREATE_TIME < date_format(CURRENT_DATE, ''%Y/%m/01'')
union
select date_format(create_time,''%m'') as MONTH, ID as JOB_ID, PLATFORM, ASID, EN_NAME, CH_NAME, REQUESTER, TICKET_NUMBER, '' '' as PRIORITY, '' '' as ACTION_ITEM, '' '' as OPER, '' '' as START_TIME, date_format(CREATE_TIME, ''%Y-%m-%d'') as BY_DATE, LAST_EXPORT as LAST_ALERT, ''create auto export'' as REMARK, '' '' as DESCR, case when STATUS = 1 then "Enable" else "Disable" end as STATUS, case when AUDIT_STATUS = 0 then "Not yet" when AUDIT_STATUS = 1 then "Approve" else "Not Approve" end as AUDIT_STATUS, JDBC,EXPORT_TYPE  as DATA_TYPE, CRON_EXPRESSION, '' '' as AUTO_MATCH, CREATE_USER, CREATE_TIME, ALTER_USER, ALTER_TIME, AUDIT_USER, AUDIT_TIME,'' '' as EXCEPTION_LOG, '' '' as REL_EXPORT, '' '' as TELEGRAM_ALERT, '' '' as TELEGRAM_INFO from MONI_EXPORT where CREATE_TIME >= date_format(CURRENT_DATE - INTERVAL 1 MONTH, ''%Y/%m/01'') and CREATE_TIME < date_format(CURRENT_DATE, ''%Y/%m/01'')
union
select date_format(a.start_time,''%m'') as MONTH, a.JOB_ID, b.PLATFORM, b.ASID, b.EN_NAME, b.CH_NAME,b.REQUESTER, b.TICKET_NUMBER, case when b.PRIORITY = 0 then "Not Urgent" else "Urgent" end as PRIORITY,b.ACTION_ITEM, a.OPER, a.START_TIME, date_format(a.START_TIME, ''%Y-%m-%d'') as BY_DATE, b.LAST_ALERT, '' '' as REMARK, b.DESCR, case when b.STATUS = 1 then "Enable" else "Disable" end as STATUS, case when b.AUDIT_STATUS = 0 then "Not yet" when b.AUDIT_STATUS = 1 then "Approve" else "Not Approve" end as AUDIT_STATUS, b.JDBC, case when b.SCRIPT_TYPE = 1 then "SQL" else "Shell Script" end as DATA_TYPE, b.CRON_EXPRESSION,case when b.AUTO_MATCH = 0 then "No need" when b.AUTO_MATCH = 1 then "Equal" when b.AUTO_MATCH = 2 then "Not equal" when b.AUTO_MATCH = 3 then "Greater than" when b.AUTO_MATCH = 4 then "Less than" when b.AUTO_MATCH = 5 then "Empty" else "Not empty" end as AUTO_MATCH, b.CREATE_USER, b.CREATE_TIME, b.ALTER_USER, b.ALTER_TIME, b.AUDIT_USER, b.AUDIT_TIME,a.EXCEPTION_LOG, b.REL_EXPORT,case when b.TELEGRAM_ALERT = 0 then "Disable" else "Enable" end as TELEGRAM_ALERT, b.TELEGRAM_INFO from MONI_JOB_LOG a inner join MONI_JOB b on a.job_id=b.id
where a.start_time >= date_format(CURRENT_DATE - INTERVAL 1 MONTH, ''%Y/%m/01'') and a.start_time < date_format(CURRENT_DATE, ''%Y/%m/01'') and a.oper != ''system'' and a.status=''1'' and (EXCEPTION_LOG is null or EXCEPTION_LOG like ''%GoldplzBot%'')','UBG/UNS/AS@my-cpg.com;kevin.yu@yxunstar.com;mickey.lai@yxunistar.com','','','( EID-317 ) AS Monitor告警纪录(每月)','Please see attached file of ( EID-317 ) AS Monitor告警纪录(每月)

Thank you.','kimberlyclaire','2019-09-12 09:06:49','kimberlyclaire','2021-04-02 11:40:27','AS',null);
INSERT INTO MONI_EXPORT (asid,TICKET_NUMBER,EN_NAME,CH_NAME,STATUS,JDBC,PLATFORM,CRON_EXPRESSION,SCRIPT,MAIL_TO,MAIL_CC,MAIL_BCC,MAIL_SUBJECT,MAIL_CONTENT,CREATE_BY,CREATE_TIME,UPDATE_BY,UPDATE_TIME,REQUESTER,LAST_EXPORT) VALUES
('EID-320','ASI-15096','( EID-320 ) PF1 ASI-15096 Internal Account Monitor Balance more than 100(Daily)','( EID-320 ) PF1 ASI-15096 内部账户监控数据需求,餘額大於100(每日)','0','ub8-pf1-sec','1.0','0 01 10 * * ?','with KK as (
select accounts,login_ip from  LOTT_NEW_A3D1.accounts_login_logs where LOGIN_TIME in (
select max(LOGIN_TIME) from LOTT_NEW_A3D1.accounts_login_logs where ACCOUNTS in(
select bb.accounts from LOTT_NEW_A3D1.lott_member_attention_tag bb where bb.ATTEN_GID in (''323'',''216''))
group by accounts)
),SD as (
select ACCOUNTS, NVL(BILL_AMOUNT,0) BILL_AMOUNT
from LOTT_NEW_A3D1.LOTT_ACCOUNTS_BILL
where (BILLTYPE in (''2003'',''3005'',''4005'',''7002'')) and (BILL_TIME between trunc(sysdate -1 ) and trunc(sysdate))
),GG as (
select ACCOUNTS,BILL_AMOUNT  from LOTT_NEW_A3D1.LOTT_ACCOUNTS_BILL
where (BILLTYPE = ''7007'') and (BILL_TIME between trunc(sysdate -1 ) and trunc(sysdate))
),mm as (
select accounts,realname,loginip,avflag,recommflag,regtime,logintime,level_up_id,level_id from LOTT_NEW_A3D1.lott_vw_member_info
),aa (
accounts , account2, level_up_id,level_id, SL, regtime ) as(select A.accounts, A.accounts, A.level_up_id,A.level_id, length(level_up_id)/7 as SL, A.regtime from mm A
where ACCOUNTS  in ( select accounts from KK)
union all
select aa.accounts, A.accounts , A.level_up_id ,A.level_id, aa.SL - 1 , A.regtime from aa left join LOTT_NEW_A3D1.mm A on aa.level_up_id = A.level_id where A.level_id is not null
),ab as (
select accounts ,MAX(ACCOUNT2)  KEEP (DENSE_RANK LAST ORDER BY REGTIME) as ACCOUNT2,LEVEL_UP_ID,level_id,max( SL ) SL,max(REGTIME ) REGTIME from aa
group by accounts, LEVEL_UP_ID,level_id
),bbb as (
select accounts ,LISTAGG(account2, ''/'') WITHIN GROUP (ORDER BY SL) as upper_level_list from ab group by accounts
)


select
LA.accounts 帳戶,
LA.CLOSING_BALANCE + LA.CLOSING_3RD_BALANCE 餘額,
NVL(SD.BILL_AMOUNT,0) 充正額度,NVL(GG.BILL_AMOUNT,0) 代下级充值额,
bbb.upper_level_list "上级推荐人",lta.atten_name "关注标签",
NVL(KK.login_ip,0) 登入IP
from lott_new_a3d1.liability_account_summary LA
left join KK on LA.accounts = KK.accounts
left join SD on KK.accounts = SD.accounts
left join GG on SD.accounts = GG.accounts
left join bbb on LA.accounts = bbb.accounts
left join LOTT_NEW_A3D1.lott_member_attention_tag lss on LA.accounts = lss.accounts
left join LOTT_NEW_A3D1.lott_attention_tag lta on lss.atten_gid = lta.gid
where LA.accounts in (
select bb.accounts from LOTT_NEW_A3D1.lott_member_attention_tag bb where bb.ATTEN_GID in (''323'',''216'')
)
and LA.balance_date = TRUNC(SYSDATE)  -1
and LA.CLOSING_BALANCE + LA.CLOSING_3RD_BALANCE >= 100','UBG/OD/DAU/PA@my-cpg.com','','','( EID-320 ) PF1 ASI-15096 内部账户监控数据需求,餘額大於100(每日)','Please see attached file of PF1 ASI-15096 内部账户监控数据需求,餘額大於100(每日)

Thank you.','lance','2019-10-22 16:25:51','martmil.n','2019-12-04 12:31:54','DAU',null);
INSERT INTO MONI_EXPORT (asid,TICKET_NUMBER,EN_NAME,CH_NAME,STATUS,JDBC,PLATFORM,CRON_EXPRESSION,SCRIPT,MAIL_TO,MAIL_CC,MAIL_BCC,MAIL_SUBJECT,MAIL_CONTENT,CREATE_BY,CREATE_TIME,UPDATE_BY,UPDATE_TIME,REQUESTER,LAST_EXPORT) VALUES
('EID-321','ASI-15096','( EID-321 ) PF2 ASI-15096 Internal Account Monitor Balance more than 100(Daily)','( EID-321 ) PF2 ASI-15096 内部账户监控数据需求,餘額大於100(每日)','0','ub8-pf5-ods','5.0','0 0 10 * * ?','WITH
 FUNCTION LISTNAME(iCUSTOMER_ID NUMBER) RETURN VARCHAR2 AS
sCUSTOMER_NAME_LIST VARCHAR2(255);
BEGIN
select LISTAGG(CUSTOMER_NAME, ''/'') WITHIN GROUP (ORDER BY LV_ID DESC)
INTO sCUSTOMER_NAME_LIST
from (
select bb.*,LEVEL AS LV_ID
from
 (
   select
     c1.CUSTOMER_ID,
	 c1.CUSTOMER_NAME,
	 c2.LEVEL_ID,
	 c2.RECOMMENDER_ID
	from CORE.US_CUSTOMER_vw c1
	INNER JOIN CORE.US_CUSTOMER_PROFILE_vw c2 ON c1.CUSTOMER_ID = c2.CUSTOMER_ID ) bb
Start with CUSTOMER_ID = iCUSTOMER_ID
Connect by CUSTOMER_ID = prior RECOMMENDER_ID
)
;
RETURN sCUSTOMER_NAME_LIST;
END;

select
bb.CUSTOMER_NAME 帳戶,
aa.SUM_CLOSING + aa.SUM_CG_AVAILABLE 餘額,aa.ADJ_CREDIT 充正額度,aa.SUM_AGENT_TRANSFER_OUT 代下級充值,
LISTNAME(bb.CUSTOMER_ID) AS "上级推荐人",
zz.GROUP_NAME 关注标签,
cc.LAST_LOGIN_IP 登入IP
from ODS.ODS_LIABILITY_SUM aa
left join core.US_CUSTOMER_vw  bb on aa.CUSTOMER_ID = bb.CUSTOMER_ID
left join CORE.US_CUSTOMER_PROFILE_vw cc on bb.CUSTOMER_ID = cc.CUSTOMER_ID
left join (
select A.customer_id,B.group_name
from CORE.US_CUSTOMER_GROUP_MAPPER A
left join CORE.US_CUSTOMER_GROUP B on A.GROUP_ID = B.GROUP_ID
) zz on aa.CUSTOMER_ID = zz.CUSTOMER_ID
where aa.CUSTOMER_ID  in (
select cc.CUSTOMER_ID
from CORE.US_CUSTOMER_GROUP_MAPPER cc
where cc.GROUP_ID in (''39'',''44'')
)
and aa.BIZ_DATE = TRUNC(SYSDATE)  -1
and aa.SUM_CLOSING + aa.SUM_CG_AVAILABLE >= 100','UBG/OD/DAU/PA@my-cpg.com;','','','( EID-321 ) PF2 ASI-15096 内部账户监控数据需求,餘額大於100(每日)','Please see attached file of ( EID-321 ) PF2 ASI-15096 内部账户监控数据需求,餘額大於100(每日)

Thank you.','lance','2019-10-22 16:35:36','denice.d','2020-01-23 20:32:54','DAU',null);
INSERT INTO MONI_EXPORT (asid,TICKET_NUMBER,EN_NAME,CH_NAME,STATUS,JDBC,PLATFORM,CRON_EXPRESSION,SCRIPT,MAIL_TO,MAIL_CC,MAIL_BCC,MAIL_SUBJECT,MAIL_CONTENT,CREATE_BY,CREATE_TIME,UPDATE_BY,UPDATE_TIME,REQUESTER,LAST_EXPORT) VALUES
('EID-345','ASI-15717','( EID-345 ) PF1 ASI-15717 Delay withdraw reparation','( EID-345 ) PF1 ASI-15717 提現延遲賠償','0','ub8-pf1-sec','1.0','0 0 09 * * ?','with temp as (
select AA.APPLIED_ORDER_NUM, AA.AMOUNT, AA.PROVIDER_OPERATE_TIME, BB.ACCOUNTS, BB.REQ_TIME, CC.VIP_GID,
( case when REQ_TIME between trunc(sysdate-1)+2/24 AND trunc(sysdate-1)+8.5/24 then ((PROVIDER_OPERATE_TIME-(trunc(sysdate-1)+8.5/24))*24*60 )
else ((PROVIDER_OPERATE_TIME-REQ_TIME)*24*60)
end ) as DIFFERENCE from LOTT_NEW_A3D1.LOTT_BANK_WITHDRAW_ARRIVALS_VW AA
left join LOTT_NEW_A3D1.WITHDRAWAL_ATM_VIEW BB on AA.APPLIED_ORDER_NUM = BB.REFID
left join LOTT_NEW_A3D1.LOTT_VW_MEMBER_INFO CC on BB.ACCOUNTS = CC.ACCOUNTS
where AA.PROVIDER_OPERATE_TIME < trunc(sysdate)
and AA.PROVIDER_OPERATE_TIME >= trunc(sysdate-1)
and STATUS = 1
order by PROVIDER_OPERATE_TIME asc)

select APPLIED_ORDER_NUM 订单号, AMOUNT 金额, PROVIDER_OPERATE_TIME 到账时间, ACCOUNTS 客户账号, REQ_TIME 申请时间, DIFFERENCE 时长, PRICE 赔偿金额, (CASE WHEN VIP_GID is null THEN ''NO'' ELSE ''YES'' END) VIP from (
select temp.*,
(
case
-- 2W low
when AMOUNT < 20000 and DIFFERENCE > 30 and DIFFERENCE <= 150 and VIP_GID is null then 18
when AMOUNT < 20000 and DIFFERENCE > 30 and DIFFERENCE <= 150 and VIP_GID is not null then 88
when AMOUNT < 20000 and DIFFERENCE > 150 and DIFFERENCE <= 1470 and VIP_GID is null then 28
when AMOUNT < 20000 and DIFFERENCE > 150 and DIFFERENCE <= 1470 and VIP_GID is not null then 168
when AMOUNT < 20000 and DIFFERENCE > 1470 and VIP_GID is null then 48
when AMOUNT < 20000 and DIFFERENCE > 1470 and VIP_GID is not null then 588
--2W~10W
when AMOUNT >= 20000 and AMOUNT < 100000 and DIFFERENCE > 240 and DIFFERENCE <= 360 and VIP_GID is null then 18
when AMOUNT >= 20000 and AMOUNT < 100000 and DIFFERENCE > 240 and DIFFERENCE <= 360 and VIP_GID is not null then 88
when AMOUNT >= 20000 and AMOUNT < 100000 and DIFFERENCE > 360 and DIFFERENCE <= 1680 and VIP_GID is null then 28
when AMOUNT >= 20000 and AMOUNT < 100000 and DIFFERENCE > 360 and DIFFERENCE <= 1680 and VIP_GID is not null then 168
when AMOUNT >= 20000 and AMOUNT < 100000 and DIFFERENCE > 1680 and VIP_GID is null then 48
when AMOUNT >= 20000 and AMOUNT < 100000 and DIFFERENCE > 1680 and VIP_GID is not null then 588
--10W~20W
when AMOUNT >= 100000 and AMOUNT < 200000 and DIFFERENCE > 480 and DIFFERENCE <= 600 and VIP_GID is null then 18
when AMOUNT >= 100000 and AMOUNT < 200000 and DIFFERENCE > 480 and DIFFERENCE <= 600 and VIP_GID is not null then 88
when AMOUNT >= 100000 and AMOUNT < 200000 and DIFFERENCE > 600 and DIFFERENCE <= 1920 and VIP_GID is null then 28
when AMOUNT >= 100000 and AMOUNT < 200000 and DIFFERENCE > 600 and DIFFERENCE <= 1920 and VIP_GID is not null then 168
when AMOUNT >= 100000 and AMOUNT < 200000 and DIFFERENCE > 1920 and VIP_GID is null then 48
when AMOUNT >= 100000 and AMOUNT < 200000 and DIFFERENCE > 1920 and VIP_GID is not null then 588
--20W~100W
when AMOUNT >= 200000 and AMOUNT < 1000000 and DIFFERENCE > 1440 and DIFFERENCE <= 1560 and VIP_GID is null then 18
when AMOUNT >= 200000 and AMOUNT < 1000000 and DIFFERENCE > 1440 and DIFFERENCE <= 1560 and VIP_GID is not null then 88
when AMOUNT >= 200000 and AMOUNT < 1000000 and DIFFERENCE > 1560 and DIFFERENCE <= 2880 and VIP_GID is null then 28
when AMOUNT >= 200000 and AMOUNT < 1000000 and DIFFERENCE > 1560 and DIFFERENCE <= 2880 and VIP_GID is not null then 168
when AMOUNT >= 200000 and DIFFERENCE > 2880 and VIP_GID is null then 48
when AMOUNT >= 200000 and DIFFERENCE > 2880 and VIP_GID is not null then 588
-- 100W up
else -1 END
) as PRICE
from temp
where DIFFERENCE > 0 )
where PRICE > 0','srvduty@my-cpg.com;yiyi.l@my-cpg.com;tweety.h@my-cpg.com','UBG/OD/DAU/WA@my-cpg.com;UBG/OD/DAU/DA@my-cpg.com;penny.w@my-cpg.com;neal.c@my-cpg.com;blaise.w@my-cpg.com;hanna.h@my-cpg.com;UBG/OD/DAU/PA@my-cpg.com','','( EID-345 ) PF1 ASI-15717 提現延遲賠償','Please see attached file of ( EID-345 ) PF1 ASI-15717 提現延遲賠償

Thank you.','raphael','2020-02-13 23:03:54','raphael','2020-08-19 15:25:35','OP',null);
INSERT INTO MONI_EXPORT (asid,TICKET_NUMBER,EN_NAME,CH_NAME,STATUS,JDBC,PLATFORM,CRON_EXPRESSION,SCRIPT,MAIL_TO,MAIL_CC,MAIL_BCC,MAIL_SUBJECT,MAIL_CONTENT,CREATE_BY,CREATE_TIME,UPDATE_BY,UPDATE_TIME,REQUESTER,LAST_EXPORT) VALUES
('EID-346','ASI-15717','( EID-346 ) PF2 ASI-15717 Delay withdraw reparation','( EID-346 ) PF2 ASI-15717 提現延遲賠償','0','ub8-pf5-core-sec','5.0','0 2 09 * * ?','with temp as (
select AA.RECORD_ID, AA.APPLIED_AMOUNT AMOUNT, AA.ARRIVAL_TIME, AA.CUSTOMER_NAME, AA.REQUEST_TIME, AA.CUSTOMER_ID, BB.VIP VIP_GID,
( case when REQUEST_TIME between trunc(sysdate-1)+2/24 AND trunc(sysdate-1)+8.5/24 then ((ARRIVAL_TIME-(trunc(sysdate-1)+8.5/24))*24*60 ) else ((ARRIVAL_TIME-REQUEST_TIME )*24*60) end ) as DIFFERENCE from core.BPS_WITHDRAW_RECORD_VW AA
left join (select CUSTOMER_ID, (case when GROUP_ID = 45 then ''Yes'' else null end) as VIP from core.US_CUSTOMER_GROUP_MAPPER where GROUP_ID=45) BB on AA.CUSTOMER_ID = BB.CUSTOMER_ID
where AA.ARRIVAL_TIME < trunc(sysdate)
and AA.ARRIVAL_TIME >= trunc(sysdate-1)
and STATUS in (3,4)
order by REQUEST_TIME asc
)

select RECORD_ID 订单号, AMOUNT 金额, ARRIVAL_TIME 到账时间, CUSTOMER_NAME 客户账号, REQUEST_TIME 申请时间, DIFFERENCE 时长, PRICE 赔偿金额, (CASE WHEN VIP_GID is null THEN ''NO'' ELSE ''YES'' END) VIP from (
select temp.*,
(
case
-- 2W low
when AMOUNT < 20000 and DIFFERENCE > 30 and DIFFERENCE <= 150 and VIP_GID is null then 18
when AMOUNT < 20000 and DIFFERENCE > 30 and DIFFERENCE <= 150 and VIP_GID is not null then 88
when AMOUNT < 20000 and DIFFERENCE > 150 and DIFFERENCE <= 1470 and VIP_GID is null then 28
when AMOUNT < 20000 and DIFFERENCE > 150 and DIFFERENCE <= 1470 and VIP_GID is not null then 168
when AMOUNT < 20000 and DIFFERENCE > 1470 and VIP_GID is null then 48
when AMOUNT < 20000 and DIFFERENCE > 1470 and VIP_GID is not null then 588
--2W~10W
when AMOUNT >= 20000 and AMOUNT < 100000 and DIFFERENCE > 240 and DIFFERENCE <= 360 and VIP_GID is null then 18
when AMOUNT >= 20000 and AMOUNT < 100000 and DIFFERENCE > 240 and DIFFERENCE <= 360 and VIP_GID is not null then 88
when AMOUNT >= 20000 and AMOUNT < 100000 and DIFFERENCE > 360 and DIFFERENCE <= 1680 and VIP_GID is null then 28
when AMOUNT >= 20000 and AMOUNT < 100000 and DIFFERENCE > 360 and DIFFERENCE <= 1680 and VIP_GID is not null then 168
when AMOUNT >= 20000 and AMOUNT < 100000 and DIFFERENCE > 1680 and VIP_GID is null then 48
when AMOUNT >= 20000 and AMOUNT < 100000 and DIFFERENCE > 1680 and VIP_GID is not null then 588
--10W~20W
when AMOUNT >= 100000 and AMOUNT < 200000 and DIFFERENCE > 480 and DIFFERENCE <= 600 and VIP_GID is null then 18
when AMOUNT >= 100000 and AMOUNT < 200000 and DIFFERENCE > 480 and DIFFERENCE <= 600 and VIP_GID is not null then 88
when AMOUNT >= 100000 and AMOUNT < 200000 and DIFFERENCE > 600 and DIFFERENCE <= 1920 and VIP_GID is null then 28
when AMOUNT >= 100000 and AMOUNT < 200000 and DIFFERENCE > 600 and DIFFERENCE <= 1920 and VIP_GID is not null then 168
when AMOUNT >= 100000 and AMOUNT < 200000 and DIFFERENCE > 1920 and VIP_GID is null then 48
when AMOUNT >= 100000 and AMOUNT < 200000 and DIFFERENCE > 1920 and VIP_GID is not null then 588
--20W~100W
when AMOUNT >= 200000 and AMOUNT < 1000000 and DIFFERENCE > 1440 and DIFFERENCE <= 1560 and VIP_GID is null then 18
when AMOUNT >= 200000 and AMOUNT < 1000000 and DIFFERENCE > 1440 and DIFFERENCE <= 1560 and VIP_GID is not null then 88
when AMOUNT >= 200000 and AMOUNT < 1000000 and DIFFERENCE > 1560 and DIFFERENCE <= 2880 and VIP_GID is null then 28
when AMOUNT >= 200000 and AMOUNT < 1000000 and DIFFERENCE > 1560 and DIFFERENCE <= 2880 and VIP_GID is not null then 168
when AMOUNT >= 200000 and DIFFERENCE > 2880 and VIP_GID is null then 48
when AMOUNT >= 200000 and DIFFERENCE > 2880 and VIP_GID is not null then 588
-- 100W up
else -1 END
) as PRICE
from temp
where DIFFERENCE > 0 )
where PRICE > 0','srvduty@my-cpg.com;yiyi.l@my-cpg.com;tweety.h@my-cpg.com','UBG/OD/DAU/WA@my-cpg.com;UBG/OD/DAU/DA@my-cpg.com;penny.w@my-cpg.com;neal.c@my-cpg.com;blaise.w@my-cpg.com;hanna.h@my-cpg.com;UBG/OD/DAU/PA@my-cpg.com','','( EID-346 ) PF2 ASI-15717 提現延遲賠償','Please see attached file of ( EID-346 ) PF2 ASI-15717 提現延遲賠償

Thank you.','raphael','2020-02-13 23:46:26','raphael','2020-08-19 15:29:13','OP',null);
INSERT INTO MONI_EXPORT (asid,TICKET_NUMBER,EN_NAME,CH_NAME,STATUS,JDBC,PLATFORM,CRON_EXPRESSION,SCRIPT,MAIL_TO,MAIL_CC,MAIL_BCC,MAIL_SUBJECT,MAIL_CONTENT,CREATE_BY,CREATE_TIME,UPDATE_BY,UPDATE_TIME,REQUESTER,LAST_EXPORT) VALUES
('EID-349','AS Task','( EID-349 ) Kibana Log Alert Record Report (Monthly)','( EID-349 ) Kibana Log告警纪录(每月)','0','mysql-as-portal','AS','30 0 9 1  *  ?','select date_format(time,''%m'') as MONTH, JOB_ID, PF, TIME, RESULT, EXP_RESULT, EXCEPTION from KIBANA_LOG
where TIME >= date_format(CURRENT_DATE - INTERVAL 1 MONTH, ''%Y/%m/01'') and TIME < date_format(CURRENT_DATE, ''%Y/%m/01'')','UBG/UNS/AS@my-cpg.com;kevin.yu@yxunstar.com;mickey.lai@yxunistar.com','','','( EID-349 ) Kibana Log告警纪录(每月)','Please see attached file of ( EID-349 ) Kibana Log告警纪录(每月)

Thank you.','camelle.d','2020-07-01 10:56:08','kimberlyclaire','2021-04-02 11:41:09','AS',null);
INSERT INTO MONI_EXPORT (asid,TICKET_NUMBER,EN_NAME,CH_NAME,STATUS,JDBC,PLATFORM,CRON_EXPRESSION,SCRIPT,MAIL_TO,MAIL_CC,MAIL_BCC,MAIL_SUBJECT,MAIL_CONTENT,CREATE_BY,CREATE_TIME,UPDATE_BY,UPDATE_TIME,REQUESTER,LAST_EXPORT) VALUES
('EID-351','ASI-16574','( EID-351 ) PF2 ASI-16574 3rd Party Amount Transfer to System Timeout Record','( EID-351 ) PF2 第三方轉平台超時紀錄','0','ub8-pf5-core-sec','5.0','0 0 9,21 * * ?','select AC.ACCOUNTS,T.TID as ,
(case T.ATB_ID
 WHEN 0 THEN ''''
END) ATB_ID,
(case AC.TGI_ID
 WHEN 4 THEN ''PT''
 WHEN 6 THEN ''TTG''
 WHEN 7 THEN ''Kaiyuan''
 WHEN 9 THEN ''AG''
 WHEN 10 THEN ''MGS2''
 WHEN 12 THEN ''AS''
 WHEN 13 THEN ''PT2''
 WHEN 14 THEN ''Kaiyuan2''
 WHEN 15 THEN ''SABA''
END) Provider,
'''' as GAME_NAME,T.AMOUNTS,
(case T.TRANSFER_TYPE
WHEN ''2010'' THEN ''Transfer To System''
END) TRANSFER_TYPE,
T.START_TIME,
(case T.TRANSFER_STATUS
WHEN ''200'' THEN ''超时 Timeout''
END) TRANSFER_STATUS
from CORE.LOTT_3RD_INTERNAL_TRANSFER T
left join CORE.LOTT_3RD_ACCOUNTS  AC
on T.ATP_ID　= AC.ATP_ID
where T.update_time > sysdate -12/24
and T.TRANSFER_STATUS = 200
and TRANSFER_TYPE = 2010
order by T.START_TIME desc','e15d2fd0.my-cpg.com@apac.teams.ms','lance.s@my-cpg.com','','( EID-351  ) PF2 3rd Party Amount Transfer to System Timeout Record (Daily Task)','Please see attached file of PF2 3rd Party Amount Transfer to System Timeout Record (Daily Task)
and do SOP: https://wiki.yxunistar.com/x/84FMB

Thank you.','lance','2020-07-30 20:53:51','kimberlyclaire','2021-04-21 21:19:01','AS',null);
INSERT INTO MONI_EXPORT (asid,TICKET_NUMBER,EN_NAME,CH_NAME,STATUS,JDBC,PLATFORM,CRON_EXPRESSION,SCRIPT,MAIL_TO,MAIL_CC,MAIL_BCC,MAIL_SUBJECT,MAIL_CONTENT,CREATE_BY,CREATE_TIME,UPDATE_BY,UPDATE_TIME,REQUESTER,LAST_EXPORT) VALUES
('EID-353','AS Task','( EID-353 ) AS Monitor PF1  Alert Record Report(monthly)','( EID-353 ) AS Monitor PF1告警纪录(每月)','0','mysql-as-portal','AS','0 2 9 1  *  ?','select date_format(a.start_time,''%m'') as MONTH,count(*) as total,a.job_id,b.en_name,b.ch_name,b.platform
FROM monitor.MONI_JOB_LOG a
inner join monitor.MONI_JOB b on a.job_id=b.id
where a.start_time >= date_format(CURRENT_DATE - INTERVAL 1 MONTH, ''%Y/%m/01'') and a.start_time < date_format(CURRENT_DATE, ''%Y/%m/01'') and b.platform = 1.0 and b.status = 1 and a.oper!=''system''
group by a.job_id,b.en_name,b.ch_name,b.platform
order by count(*) desc','UBG/UNS/AS@my-cpg.com;kevin.yu@yxunstar.com;mickey.lai@yxunistar.com','','','( EID-353 ) AS Monitor PF1告警纪录(每月)','Please see attached file of ( EID-353 ) AS Monitor PF1告警纪录(每月)

Thank you.','kimberlyclaire','2020-12-16 10:59:32','kimberlyclaire','2021-04-02 11:30:15','AS',null);
INSERT INTO MONI_EXPORT (asid,TICKET_NUMBER,EN_NAME,CH_NAME,STATUS,JDBC,PLATFORM,CRON_EXPRESSION,SCRIPT,MAIL_TO,MAIL_CC,MAIL_BCC,MAIL_SUBJECT,MAIL_CONTENT,CREATE_BY,CREATE_TIME,UPDATE_BY,UPDATE_TIME,REQUESTER,LAST_EXPORT) VALUES
('EID-354','AS Task','( EID-354 ) AS Monitor PF2 Alert Record Report(monthly)','( EID-354 ) AS MonitorPF2告警纪录(每月)','0','mysql-as-portal','AS','0 1 9 1  *  ?','select date_format(a.start_time,''%m'') as MONTH,count(*) as total,a.job_id,b.en_name,b.ch_name,b.platform
FROM monitor.MONI_JOB_LOG a
inner join monitor.MONI_JOB b on a.job_id=b.id
where a.start_time >= date_format(CURRENT_DATE - INTERVAL 1 MONTH, ''%Y/%m/01'') and a.start_time < date_format(CURRENT_DATE, ''%Y/%m/01'') and b.platform = 5.0 and b.status = 1 and a.oper!=''system''
group by a.job_id,b.en_name,b.ch_name,b.platform
order by count(*) desc','UBG/UNS/AS@my-cpg.com;kevin.yu@yxunstar.com;mickey.lai@yxunistar.com','','','( EID-354 ) AS MonitorPF2告警纪录(每月)','Please see attached file of ( EID-354 ) AS MonitorPF2告警纪录(每月)
Thank you.','kimberlyclaire','2020-12-16 11:01:51','kimberlyclaire','2021-04-02 11:38:36','AS',null);

INSERT INTO MONI_EXPORT (ID,asid,TICKET_NUMBER,EN_NAME,CH_NAME,STATUS,JDBC,PLATFORM,CRON_EXPRESSION,SCRIPT,MAIL_TO,MAIL_CC,MAIL_BCC,MAIL_SUBJECT,MAIL_CONTENT,CREATE_BY,CREATE_TIME,UPDATE_BY,UPDATE_TIME,REQUESTER,LAST_EXPORT) VALUES
(176,'EID-176:MID-50','PRF1_A','( EID-176:MID-50 ) PF1 Profit loss (PF2 Profit)','( EID-176:MID-50 ) PF1 Profit loss (PF2 Profit)','1','ub8-pf5-ods','5.0','0 0/3 * * * ? *','select sum(A.AMT)*-1 profit  from ods.ODS_ACCOUNT_BILL a
join core.LGS_ORDER_MASTER b on a.ORDERNO=b.ORDER_NUM and trunc(B.CREATE_TIME) = trunc( sysdate )
join core.LGS_ORDER_DETAIL c on b.ORDER_MASTER_ID=c.ORDER_MASTER_ID and c.status in ( 4 , 5 ) and a.NUMERO=c.NUMERO','dau-wa@my-cpg.com','','','( EID-176:MID-50 ) PF1 Profit loss (PF2 Profit)','Please see attached file of ( EID-176:MID-50 ) PF1 Profit loss (PF2 Profit)

Thank you.','rieljohn05','2017-04-24 14:41:32','denice.d','2019-12-04 18:47:34','DAU',null);
INSERT INTO MONI_EXPORT (ID,asid,TICKET_NUMBER,EN_NAME,CH_NAME,STATUS,JDBC,PLATFORM,CRON_EXPRESSION,SCRIPT,MAIL_TO,MAIL_CC,MAIL_BCC,MAIL_SUBJECT,MAIL_CONTENT,CREATE_BY,CREATE_TIME,UPDATE_BY,UPDATE_TIME,REQUESTER,LAST_EXPORT) VALUES
(177,'EID-177:MID-50','PRF1.0_B','( EID-177:MID-50 ) PF1 Profit loss (Lott type)','( EID-177:MID-50 ) PF1 Profit loss (Lott type)','1','ub8-pf1-sec','1.0','0 0/3 * * * ? *','with aa as (
 select B.sortid , sum( A.bill_amount )*-1 profit
 from LOTT_NEW_A3D1.lott_accounts_bill A
 join LOTT_NEW_A3D1.lott_fc3d_order_main B on A.orderno = B.orderno
  and B.status in ( ''004'' , ''005'' , ''020'' )
  and trunc(B.into_time) = trunc( sysdate)
 group by grouping sets ( (), B.sortid )
)
select 彩种 ,利润
from (select
         nvl ( B.remark, ''合計'' )彩种 , aa.profit as 利润
       from aa
       left join LOTT_NEW_A3D1.lott_group_series B on B.GROUP_TYPE = ''1''
        and aa.sortid = B.group_value
       order by case when B.REMARK is not null then 1 else 2 end, profit desc)','dau-wa@my-cpg.com','','','( EID-177:MID-50 ) PF1 Profit loss (Lott type)','Please see attached file of ( EID-177:MID-50 ) PF1 Profit loss (Lott type)

Thank you.','rieljohn05','2017-04-24 15:23:58','denice.d','2019-12-04 18:48:10','DAU',null);
INSERT INTO MONI_EXPORT (ID,asid,TICKET_NUMBER,EN_NAME,CH_NAME,STATUS,JDBC,PLATFORM,CRON_EXPRESSION,SCRIPT,MAIL_TO,MAIL_CC,MAIL_BCC,MAIL_SUBJECT,MAIL_CONTENT,CREATE_BY,CREATE_TIME,UPDATE_BY,UPDATE_TIME,REQUESTER,LAST_EXPORT) VALUES
(178,'EID-178:MID-50','PRF1.0_C','( EID-178:MID-50 ) PF1 Profit loss (Order)','( EID-178:MID-50 ) PF1 Profit loss (Order)','1','ub8-pf1-sec','1.0','0 0/3 * * * ? *','with aaa as (
 select  orderno 订单号, b.accounts 账号, total_amount 投注金额 , total_winprice 中奖金额, TOTAL_WINPRICE - TOTAL_AMOUNT as 平台损失  , bet_time 投注时间, into_time as 开奬时间, c.WIN_NO 开奖号码
 from LOTT_NEW_A3D1.lott_fc3d_order_main B
 left join LOTT_NEW_A3D1.lott_manaul_temp c on b.SORTID=c.SORTID and b.NUMERO=c.NUMERO
 where trunc(B.into_time) = trunc( sysdate)
 and status in ( ''004'' , ''020'' )
 and ( total_winprice >=50000 or total_winprice/total_amount > 25 )
 order by TOTAL_WINPRICE - TOTAL_AMOUNT desc
)
select 订单号,账号,投注金额,中奖金额,平台损失,投注时间,开奬时间,开奖号码
from aaa
where rownum <= 200','dau-wa@my-cpg.com','','','( EID-178:MID-50 ) PF1 Profit loss (Order)','Please see attached file of ( EID-178:MID-50 ) PF1 Profit loss (Order)


Thank you.



','rieljohn05','2017-04-24 15:43:39','denice.d','2019-12-04 18:48:42','DAU',null);
INSERT INTO MONI_EXPORT (ID,asid,TICKET_NUMBER,EN_NAME,CH_NAME,STATUS,JDBC,PLATFORM,CRON_EXPRESSION,SCRIPT,MAIL_TO,MAIL_CC,MAIL_BCC,MAIL_SUBJECT,MAIL_CONTENT,CREATE_BY,CREATE_TIME,UPDATE_BY,UPDATE_TIME,REQUESTER,LAST_EXPORT) VALUES
(179,'EID-179:MID-50','PRF1.0_D','( EID-179:MID-50 ) PF1 Profit loss (Customer)','( EID-179:MID-50 ) PF1 Profit loss (Customer)','1','ub8-pf1-sec','1.0','0 0/3 * * * ? *','with aaa as (
 select  orderno , accounts , total_amount, total_winprice, TOTAL_WINPRICE - TOTAL_AMOUNT , bet_time, into_time, status
 from LOTT_NEW_A3D1.lott_fc3d_order_main B
 where trunc(B.into_time) = trunc( sysdate )
 and status in (  ''004'' , ''005'' , ''020'' )
), bb as (
select
   accounts 账号,
   sum( total_winprice - total_amount ) as 平台损失,
   sum( total_amount  ) as 客戶累計投注
from aaa
group by accounts
order by 2 desc
)
select 账号, 平台损失,客戶累計投注 from bb
where rownum < 101','dau-wa@my-cpg.com','','','( EID-179:MID-50 ) PF1 Profit loss (Customer)','Please see attached file of ( EID-179:MID-50 ) PF1 Profit loss (Customer)



Thank you.','rieljohn05','2017-04-24 15:52:30','denice.d','2019-12-04 18:49:14','DAU',null);
INSERT INTO MONI_EXPORT (ID,asid,TICKET_NUMBER,EN_NAME,CH_NAME,STATUS,JDBC,PLATFORM,CRON_EXPRESSION,SCRIPT,MAIL_TO,MAIL_CC,MAIL_BCC,MAIL_SUBJECT,MAIL_CONTENT,CREATE_BY,CREATE_TIME,UPDATE_BY,UPDATE_TIME,REQUESTER,LAST_EXPORT) VALUES
(180,'EID-180:MID-50','PRF1.0_E','( EID-180:MID-50 ) PF1 Profit loss (play_kind)','( EID-180:MID-50 ) PF1 Profit loss (play_kind)','1','ub8-pf1-sec','1.0','0 0/3 * * * ? *','with aaa as (
  select sortid, bet_num, gid, ''keno'' as gg from LOTT_NEW_A3D1.lott_keno_order_detail
union all
select sortid, bet_num, gid, ''ssc'' as gg from LOTT_NEW_A3D1.lott_ssc_order_detail
union all
select sortid, bet_num, gid, ''11x5'' as gg from LOTT_NEW_A3D1.lott_11x5_order_detail
union all
select sortid, bet_num, gid, ''lf'' as gg from LOTT_NEW_A3D1.lott_lf_order_detail
union all
select sortid, bet_num, gid, ''k3'' as gg from LOTT_NEW_A3D1.lott_k3_order_detail
), aa as (
select
  aaa.SORTID, max( C.accounts ) as account , sum( A.SINGLE_WIN_PRICE ) as win_amount,
  sum( aaa.bet_num ) as bet_num ,
  max( C.TOTAL_TIMES ) as TOTAL_TIMES,
  max ( C.KINDVALUE ) as KINDVALUE,
A.ORDERNO , max( aaa.gg ) as cai_group
 from LOTT_NEW_A3D1.lott_fc3d_order_data A
 join aaa on A.PID = aaa.GID
 left join LOTT_NEW_A3D1.lott_fc3d_order_main C on A.ORDERNO = C.orderno
 where trunc(C.into_time) = trunc( sysdate )
 group by aaa.sortid, A.orderno
), play_menu as (
  select B.PLAY_ID||''.''||B.GPID as play_id, PLAY_NAME from LOTT_NEW_A3D1.lott_play_menu B
  union all
  select play_id||'''' as play_id  , play_name from LOTT_NEW_A3D1.lott_play
)
select 账号,订单号,中奖金额,注数,倍数,元角分,平台损失,玩法,彩种组 from (
select
  aa.account 账号,
  aa.orderno 订单号 ,
  aa.win_amount 中奖金额,
  aa.bet_num 注数 ,
  aa.TOTAL_TIMES 倍数,
  aa.KINDVALUE 元角分,
  aa.win_amount - (bet_num * TOTAL_TIMES * KINDVALUE * 2 ) as 平台损失,
  B.PLAY_NAME 玩法,
  cai_group as 彩种组
from aa
left join play_menu B on aa.sortid = B.play_id
where aa.win_amount - (bet_num * TOTAL_TIMES * KINDVALUE * 2 ) >= 5000
order by 平台损失 desc)','dau-wa@my-cpg.com','','','( EID-180:MID-50 ) PF1 Profit loss (play_kind)','Please see attached file of ( EID-180:MID-50 ) PF1 Profit loss (play_kind)


Thank you.','rieljohn05','2017-04-24 15:54:12','denice.d','2019-12-04 18:50:11','DAU',null);
INSERT INTO MONI_EXPORT (ID,asid,TICKET_NUMBER,EN_NAME,CH_NAME,STATUS,JDBC,PLATFORM,CRON_EXPRESSION,SCRIPT,MAIL_TO,MAIL_CC,MAIL_BCC,MAIL_SUBJECT,MAIL_CONTENT,CREATE_BY,CREATE_TIME,UPDATE_BY,UPDATE_TIME,REQUESTER,LAST_EXPORT) VALUES
(181,'EID-181:MID-53','PRF2_A','( EID-181:MID-53 ) PF2 Profit Loss (PF1 Profit)','( EID-181:MID-53 ) PF2 Profit Loss (PF1 Profit)','1','ub8-pf1-sec','1.0','0 0/3 * * * ? *','select  sum( A.bill_amount )*-1 profit
 from LOTT_NEW_A3D1.lott_accounts_bill A
 join LOTT_NEW_A3D1.lott_fc3d_order_main B on A.orderno = B.orderno
  and B.status in ( ''004'' , ''005'' , ''020'' )
  and trunc(B.into_time) = trunc( sysdate - 1/24 )','dau-wa@my-cpg.com','','','( EID-181:MID-53 ) PF2 Profit Loss (PF1 Profit)','Please see attached file of ( EID-181:MID-53 ) PF2 Profit Loss (PF1 Profit)

Thank you.','AS_Team','2017-04-24 18:41:40','denice.d','2019-12-04 18:50:31','DAU',null);
INSERT INTO MONI_EXPORT (ID,asid,TICKET_NUMBER,EN_NAME,CH_NAME,STATUS,JDBC,PLATFORM,CRON_EXPRESSION,SCRIPT,MAIL_TO,MAIL_CC,MAIL_BCC,MAIL_SUBJECT,MAIL_CONTENT,CREATE_BY,CREATE_TIME,UPDATE_BY,UPDATE_TIME,REQUESTER,LAST_EXPORT) VALUES
(182,'EID-182:MID-53','PRF2LOSS_B','( EID-182:MID-53 ) PF2 Profit Loss (Lott type)','( EID-182:MID-53 ) PF2 Profit Loss (Lott type)','1','ub8-pf5-core-sec','5.0','0 0/3 * * * ? *','with AA as (
  select
    B.game_code game_code, C.order_num order_no, D.remark game_name, B.NUMERO
  from core.lgs_order_detail B
  left join core.lgs_order_master C on C.order_master_id = B.order_master_id
  left join core.lgs_game D on D.code = B.game_code
  where B.status in ( 4,  5 ) and  trunc(B.draw_time) = trunc( sysdate - 1/24)
)
select 彩种,平台利润
  from(select AA.game_name 彩种, sum(A.amount)*-1 平台利润
         from core.acs_transaction A
         join AA on A.order_no = AA.order_no
          and AA.numero = A.numero
         group by AA.game_name
         order by 平台利润 desc)','dau-wa@my-cpg.com','raymond.t@my-cpg.com','','( EID-182:MID-53 ) PF2 Profit Loss (Lott type)','Please see attached file of ( EID-182:MID-53 ) PF2 Profit Loss (Lott type)



Thank you.','Nikki','2017-04-24 22:56:32','denice.d','2019-12-04 18:51:32','DAU',null);
INSERT INTO MONI_EXPORT (ID,asid,TICKET_NUMBER,EN_NAME,CH_NAME,STATUS,JDBC,PLATFORM,CRON_EXPRESSION,SCRIPT,MAIL_TO,MAIL_CC,MAIL_BCC,MAIL_SUBJECT,MAIL_CONTENT,CREATE_BY,CREATE_TIME,UPDATE_BY,UPDATE_TIME,REQUESTER,LAST_EXPORT) VALUES
(183,'EID-183:MID-53','PRF2LOSS_C','( EID-183:MID-53 ) PF2 Profit Loss (Order)','( EID-183:MID-53 ) PF2 Profit Loss (Order)','1','ub8-pf5-core-sec','5.0','0 0/3 * * * ? *','with aaa as (
  select
    B.ORDER_NUM 订单号,
    A.numero as 期号,
    C.customer_name 账号 ,
    A.actual_bet_amount 投注金额,
    A.win_amount 中奖金额,
    nvl(A.win_amount, 0) - A.actual_bet_amount as 平台损失,
    A.create_time 投注时间, A.draw_time as 开奬时间,
    d.WINNING_NUMBER 开奖号码
  from core.lgs_order_detail A
  left join core.lgs_order_master B on A.order_master_id = B.order_master_id
  left join core.us_customer_vw C on B.customer_id = C.customer_id
  left join core.LGS_DRAW_NUMBER_RESULT d on A.numero=d.numero and a.GAME_CODE=d.GAME_CODE
  where  A.status = 4
  and trunc(A.draw_time) = trunc( sysdate - 1/24 )
and ( A.win_amount > 50000 or A.win_amount/A.actual_bet_amount > 25 )
order by (nvl( A.win_amount, 0) - A.actual_bet_amount) desc
)
select 订单号,期号,账号,投注金额,中奖金额,平台损失,开奬时间,开奖号码
 from aaa
where rownum <=200','dau-wa@my-cpg.com;','raymond.t@my-cpg.com','','( EID-183:MID-53 ) PF2 Profit Loss (Order)','Please see attached file of ( EID-183:MID-53 ) PF2 Profit Loss (Order)



Thank you.','Nikki','2017-04-24 23:02:10','denice.d','2019-12-04 18:51:58','DAU',null);
INSERT INTO MONI_EXPORT (ID,asid,TICKET_NUMBER,EN_NAME,CH_NAME,STATUS,JDBC,PLATFORM,CRON_EXPRESSION,SCRIPT,MAIL_TO,MAIL_CC,MAIL_BCC,MAIL_SUBJECT,MAIL_CONTENT,CREATE_BY,CREATE_TIME,UPDATE_BY,UPDATE_TIME,REQUESTER,LAST_EXPORT) VALUES
(184,'EID-184:MID-53','PRF2LOSS_D','( EID-184:MID-53 ) PF2 Profit Loss (Customer)','( EID-184:MID-53 ) PF2 Profit Loss (Customer)','1','ub8-pf5-core-sec','5.0','0 0/3 * * * ? *','with aaa as (
  select
    C.customer_name,
    A.ACTUAL_BET_AMOUNT,
    nvl( A.WIN_AMOUNT, 0) as WIN_AMOUNT
  from core.lgs_order_detail A
  left join core.lgs_order_master B on A.order_master_id = B.order_master_id
  left join core.us_customer_vw C on B.customer_id = C.customer_id
where A.status in ( 4,  5 ) and  trunc(A.draw_time) = trunc( sysdate - 1/24)
), bb as (
select
   customer_name 账号,
   sum( WIN_AMOUNT - ACTUAL_BET_AMOUNT  ) as 平台损失,
   sum( ACTUAL_BET_AMOUNT  ) as 客戶累計投注
from aaa
group by customer_name
order by 2 desc
)
select 账号,平台损失,客戶累計投注 from bb
where rownum < 101','dau-wa@my-cpg.com','raymond.t@my-cpg.com','','( EID-184:MID-53 ) PF2 Profit Loss (Customer)','Please see attached file of ( EID-184:MID-53 ) PF2 Profit Loss (Customer)



Thank you.','Nikki','2017-04-24 23:03:21','denice.d','2019-12-04 18:52:19','DAU',null);
INSERT INTO MONI_EXPORT (ID,asid,TICKET_NUMBER,EN_NAME,CH_NAME,STATUS,JDBC,PLATFORM,CRON_EXPRESSION,SCRIPT,MAIL_TO,MAIL_CC,MAIL_BCC,MAIL_SUBJECT,MAIL_CONTENT,CREATE_BY,CREATE_TIME,UPDATE_BY,UPDATE_TIME,REQUESTER,LAST_EXPORT) VALUES
(186,'EID-186','PF1Lottery','( EID-186 ) ASI-10613 PF1 Lottery Loss ','( EID-186 ) ASI-10613 PF1 Lottery Loss ','1','ub8-pf1-sec','1.0','0 0/3 * * * ? *','with aa as (
 select x.sortid , sum( A.bill_amount )*-1 profit
 from LOTT_NEW_A3D1.lott_accounts_bill A
 join LOTT_NEW_A3D1.lott_fc3d_order_main x on A.orderno = x.orderno
  and x.status in ( ''004'' , ''005'' , ''020'' )
  and trunc(x.into_time) = trunc( sysdate )

 group by x.sortid
)
select
   c.REMARK,
   c.PARAM_ONE,
   orderno 订单号,
   a.accounts 账号,
   total_amount 投注金额 ,
   total_winprice 中奖金额,
   TOTAL_WINPRICE - TOTAL_AMOUNT as 平台损失 ,
   bet_time 投注时间,
   b.WIN_DATE as 表定开奖时间,
   into_time as 实际开奬时间,
   b.WIN_NO 开奖号码,
   case when bet_time > WIN_DATE then ''超过开奖时间后投注'' end as 警告讯息
 from LOTT_NEW_A3D1.lott_fc3d_order_main a
 join LOTT_NEW_A3D1.lott_manaul_temp b on a.SORTID=b.SORTID and a.NUMERO=b.NUMERO
 join LOTT_NEW_A3D1.lott_group_series c on a.sortid=c.GROUP_VALUE and c.group_type = 1
 where (a.into_time between trunc( sysdate -7/24 ) + 7/24 and trunc ( sysdate +1 -6/24 ) + 6/24 )
 and status in ( ''004'', ''020'' )
 and TOTAL_WINPRICE - TOTAL_AMOUNT >= 10000
 and PARAM_ONE in (select x.PARAM_ONE
                     from aa
                          left join LOTT_NEW_A3D1.lott_group_series x on x.GROUP_TYPE = ''1''
                          and aa.sortid = x.group_value
                    where aa.profit < -200000)
 order by 6 desc','dau-wa@my-cpg.com;','','','( EID-186:MID-81 ) ASI-10613 PF1 Lottery Loss ','Please see attached file of ( EID-186:MID-81 ) ASI-10613 PF1 Lottery Loss


Thank you.

','aljen','2017-04-25 15:07:50','kimberlyclaire','2020-01-31 17:14:23','AS',null);
INSERT INTO MONI_EXPORT (ID,asid,TICKET_NUMBER,EN_NAME,CH_NAME,STATUS,JDBC,PLATFORM,CRON_EXPRESSION,SCRIPT,MAIL_TO,MAIL_CC,MAIL_BCC,MAIL_SUBJECT,MAIL_CONTENT,CREATE_BY,CREATE_TIME,UPDATE_BY,UPDATE_TIME,REQUESTER,LAST_EXPORT) VALUES
(213,'EID-213:MID-131','ASI-11796','( EID-213:MID-131 ) PF1 ASI-11796 Fraud Bank Card','( EID-213:MID-131 ) PF1 ASI-11796 恶意投诉勒索涉案出款卡','1','ub8-pf1-sec','1.0','0 0 * * * ?','SELECT ACCOUNTS AS "ACCOUNT 账户" , ''1.0'' AS "PLATFORM 平台" , BANKCARDNO AS "BANK CARD提现银行卡" , REALNAME AS "PAYEE NAME提款人姓名" FROM LOTT_NEW_A3D1.LOTT_VW_MEMBER_BANK
WHERE BANKCARDNO IN
(
''6222020506004955189'',
''6217004470026680079'',
''6228481208280518976'',
''6217857600028157746'',
''6212261102030802824'',
''6235213288006157713'',
''6212263602025583782'',
''6236683950000641823'',
''6217007200020873967'',
''4367421375200059851'',
''6215590602003275291'',
''6222083901000129810'',
''6217852700016860585'',
''6228480298561401977'',
''411024198409197713'',
''6228461208001307372'',
''6228480360884256619'',
''6212261603001953710'',
''6217001430016762843'',
''6214850280677433'',
''6225880173817587'',
''6212261001040446574'',
''6228481454438757013'',
''6217000010103088921'',
''622908373010420110'',
''6214836351414269'',
''622908373105668912'',
''6214835498992062'',
''6210812550004918653'',
''6216917001307620'',
''6217995030013781966'',
''6217002020039474788'',
''6217856101009001483'',
''6222081207002015482'',
''6228480368022407978'',
''6214835711954642'',
''6228480070138970317'',
''6212262014003175675'',
''6217996730006053682'',
''6210985131008553597'',
''6217001830025259378'',
''6212264100032716817'',
''370204197201021329'',
''6222081208002704059'',
''4367421760310814750'',
''6217001760007789490'',
''6217001830031642393'',
''621202000000000000'',
''6228480383263170417'',
''6236681460008273795'',
''6226194100311204'',
''6222024000084323530'',
''6217002430011039204'',
''6212262305004484912'',
''6236682020000006251'',
''6212261402035189346'',
''6212262102013331543'',
''6226090202792905'',
''6217002020000007799'',
''6230580000123706785'',
''6212261702009259763'',
''6222021510005795692'',
''6222021207014303085'',
''6222024000074485265'',
''6222022703019182838'',
''6228480751078816913'',
''6215584402005085832'',
''6214852118856288'',
''6228480708206208579'',
''6214993860364129'',
''6217002930109674960'',
''6227003765080095613'',
''6228480246137606769'',
''6227001020410288369'',
''6225885351693015'',
''6230521720009376872'',
''6236681300000776579'',
''6228480218693660779'',
''6212260408006387265'',
''6217000150022823915'',
''6230582000057691993'',
''6214835850816701'',
''6217580500002381367'',
''6225887841912591'',
''6217681000240864'',
''6230523170013330000'',
''6215581105003798719'',
''6212261001085973938'',
''6212264000006878736'',
''6222621310017812062'',
''6228451268015223876'',
''6222629530008593841'',
''6228482208977983276'',
''6212262316004295810'',
''6214830240829258'',
''6214831270605808'',
''6222000200104332812'',
''6222621410006623239'',
''6217000430004444322'',
''6212262502024126180'',
''6212261406003393699'',
''6212262005004019821'',
''6236683150001258335'',
''6228480719529979671'',
''6217002340003861632'',
''6217001860006047112'',
''6214661144665757'',
''6212261402013634347'',
''6230582000051877374'',
''6222024301034096659'',
''6221500000000000000'',
''6214833518451433'',
''6212260407008221704'',
''6217923576736309'',
''6222021714005603621'',
''6216695000001300496'',
''6217000150022727090'',
''6217933501294878'',
''6212261001064061036'',
''6217003690002837283'',
''6216698000002810409'',
''6212261408006485282'',
''6212260711001499914'',
''6230523160033430000'',
''6222081203008774016'',
''6212260408011940751'',
''6236680150002926834'',
''6228483038621395778'',
''6214830113450976'',
''6214600180010584238'',
''6227002342341471222'',
''6217003020107062100'',
''6230580000132636569'',
''6215581105011796630'',
''6230521320011404174'',
''6215593700013827445'',
''6212261608006513302'',
''6214832009521688'',
''6217003810042993744'',
''6214620239000491402'',
''6217003110026584076'',
''6228481136762504778'',
''6212260809002044042'',
''6228480086766747777'',
''6217002210028953815'',
''6217004260001270081'',
''6217001930009725590'',
''6013822000591269298'',
''6228480316053853362'',
''6217000130020616057'',
''6212264301002427878'',
''6222023602092048115'',
''6222082403001382564'',
''6212262201033754203'',
''6214852107488796'',
''6236681430001261311'',
''6228480156016459166'',
''6228411080394009910'',
''6230520830002100871'',
''6212263602078217056'',
''6230580000134030258'',
''6227002980350601286'',
''6215584402018155937'',
''6212262013017172884'',
''6212264301025137264'',
''6228480329387767976'',
''6212261502009803309'',
''6217000150001641304'',
''6212260412008054881'',
''6217000150014379595'',
''6228481739131499677'',
''6216608000004879120'',
''6212262708000018321'',
''6236683760003161400'',
''6215683100002951333'',
''6216603600002269623'',
''6222082003001148120'',
''6217680901422316'',
''6228480482379040413'',
''6228480343107390811'',
''6212260302025041534'',
''6217002050002294913'',
''6214835194580013'',
''6214660635566888'',
''6212263100037677031'',
''6214855492902933'',
''6222800000000000000'',
''6210812530004827120'',
''6230583000012115665'',
''6230943240001179034'',
''6227000012510430836'',
''6236682340006472301'',
''6222032102004491247'',
''6217003150005638345'',
''6217003320048543477'',
''6228480930911958211'',
''6214832511635182'',
''6215581507000112515'',
''6228481538563520970'',
''6222081901004059973'',
''6217996100098769431'',
''6222021408016684049'',
''6230200092612030'',
''6227003040140410016'',
''6217003320063996584'',
''6217002870073594705'',
''6212260200144403389'',
''6228480038111575171'',
''6214832804383169'',
''6226631500532079'',
''6217993900061781922'',
''6212262201012585222'',
''6228482118151363072'',
''6214830170226939'',
''6215591302002846288'',
''6214920202519110'',
''6226621703960201'',
''6217231211000444636'',
''6228480580540635613'',
''6226220630762853'',
''6212263100025448718'',
''6212261602002681353'',
''6217007200030236445'',
''6222081404000524660'',
''6227001935550500846'',
''6217003760007235146'',
''6217000660002672447'',
''6217922070388237'',
''6228480900796093814'',
''6217004470008291721'',
''9558804301103805923'',
''6214832510486678'',
''6222031207003160825'',
''6217992400053177792'',
''6210812500003982341'',
''6215590603001173926'',
''6217003240017172217'',
''6217001330015743317'',
''6217001880003336748'',
''6228480322033365816'',
''6222032010007842805'',
''6217003320033815336'',
''6214835733170706'',
''6212261709004396425'',
''6217003810056272670'',
''6217001830036624099'',
''6212260411007128340'',
''6222080610000511751'',
''6226197900246769'',
''4367420132049156625'',
''6228481258760428774'',
''6228480469743677079'',
''6212262012011970780'',
''6236683140001379199'',
''6217003960001562954'',
''6217002430040556210'',
''6212264000046498701'',
''6228481336702800464'',
''6214832168919038'',
''6217002280012395174'',
''6228481208168685178'',
''6228480048626517873'',
''6228483471570631614'',
''6222021717003172911'',
''6214837631488859'',
''6212261709003902702'',
''6222002008103409087'',
''6212260409011741421'',
''6222020905008111346'',
''6228481598418801173'',
''6214830203331334'',
''6217000460012060968'',
''6217858400018353143'',
''6230930030004614250'',
''6214834573444487'',
''6236681540008684131'',
''6212260505006225815'',
''6215582603000439054'',
''6214921103162430'',
''622908473393655215'',
''6217003130009547650'',
''6217001850004638111'',
''6228410423034748664'',
''6217002590001996448'',
''6222081203006156877'',
''6215686000007525909'',
''6217002220013074097'',
''6227007201280460346'',
''6217858300029929982'',
''6215581109008077087'',
''6212260905005107669'',
''6217007110003001066'',
''6212262312002137914'',
''6212262902015878734'',
''6214832804360845'',
''6217001210090317221'',
''6228480038998430979'',
''6217002220012856049'',
''6214838983696461'',
''6217002200012398994'',
''6217865000009125400'',
''6217991770002323270'',
''6212260904004345842'',
''6227002671050501849'',
''6212262011028413610'',
''6222080200017306815'',
''6217003370002428652'',
''6230520680025501070'',
''6217002210026839131'',
''6212260200130308568'',
''6212261001064110528'',
''4367420130668399088'',
''6217852000019397143'',
''6217996710010262370'',
''6228481150714465814'',
''6228480329265488174'',
''6212260302001289628'',
''6222620340004088641'',
''6217004470012301573'',
''6228482118169074976'',
''6222031309000057168'',
''6222032116001260256'',
''6222083602013993891'',
''6217003150003106774'',
''6212264402055236115'',
''6217001820001527120'',
''6225880002195692'',
''6222022017004009546'',
''6217001830025761704'',
''6212261102021123123'',
''6216260000015837025'',
''6222001402100986224'',
''6227001376600031518'',
''6212261405009752288'',
''6228460000000000000'',
''6212261203016848714'',
''6217001070003251671'',
''6217993300090865517'',
''6214837714798455'',
''6212261207009815663'',
''6228480086820499274'',
''6214837710367057'',
''6222021001124124402'',
''6212262408005391993'',
''6212263500026951034'',
''6217003810053069731'',
''6212261613004824552'',
''6214835433874243'',
''6214855746631007'',
''6214832027355325'',
''6212262013015753230'',
''6236683480001721549'',
''6212263602044031417'',
''6225380089999207'',
''6217000010121616703'',
''6214834113936315'',
''622033100021977144'',
''6226600000000000'',
''6226630901966068'',
''622908153049612717'',
''6217003230029282765'',
''6228480240524751411'',
''6212260408004324930'',
''6210812831000661939'',
''6210812440001912968'',
''6212261911001103461'',
''6230523170014470000'',
''6215593202018762966'',
''6222623730006081577'',
''6217683101370723'',
''6212260408009993499'',
''6215581313000961062'',
''6236682830000871243'',
''6217003320064262432'',
''6228413164511720000'',
''6222021910002892726'',
''6228483368409231071'',
''6212262116002747873'',
''6222032116000123513'',
''6236683480001653494'',
''6228483178414303777'',
''6215581818005431051'',
''6222030714000133631'',
''6228413170026555311'',
''6216913400644044'',
''6222022008014662606'',
''6222020411002018488'',
''6222023803015687647'',
''6217004470021956532'',
''6212260408008934619'',
''6222021705006220829'',
''6217002340017342884'',
''6212261905004965090'',
''6226097690991386'',
''6217003800009955844'',
''6217230406000437025'',
''6217002120009514587'',
''6217231510001345316'',
''6212261717008219634'',
''6212261203013186746'',
''6217003120011745665'',
''6222081208007177988'',
''6228482399468118876'',
''6217857600032159951'',
''6230810324547778'',
''6214830109881572'',
''6230580000069536261'',
''6214833612900053'',
''6212261202004706645'',
''6215593700007268101'',
''6228480329473602574'',
''6217001260003467993'',
''6212264402000628531'',
''6212264000060270002'',
''6236683810000776922'',
''6217004220031998217'',
''6212264000047257494'',
''6222022010028497961'',
''6228480086945622370'',
''6210181478802343879'',
''6212261211006439782'',
''620522156220085884'',
''6217000830003466244'',
''6217001140010787791'',
''6222020302052585619'',
''6217002250003924670'',
''6222000200122402126'',
''4340613811803510'',
''6214832915227768'',
''6217003810030746724'',
''6228483626139671068'',
''6222021702043142652'',
''6212263901017268729'',
''6212262902003781965'',
''6222023602103783684'',
''6214855912269905'',
''6226632703533419'',
''6226632703507520'',
''6222022002005509249'',
''6228481165278860317'',
''6222031207004620355'',
''6222080402008888831'',
''6217001290000183293'',
''6214850254840348'',
''6222021204010384128'',
''6212261116000402290'',
''6217002170003420455'',
''6225882139633439'',
''6227003150190340417'',
''6222082102001990232'',
''6212262102011203645'',
''6217221812000102769'',
''6214830161589865'',
''6217905300003966029'',
''6212261203016459892'',
''6217920116688933'',
''6212261907006658996'',
''6222020407000323003'',
''6212261202048712328'',
''6214835907021826'',
''6217001540024297424'',
''6217856200044231061'',
''6217920275862774'',
''6217560800002040557'',
''6212264000066640935'',
''6228480128660868471'',
''6212262504001096923'',
''6222620590008620100'',
''6222082402002497272'',
''6215593901003243664'',
''6212262010024425164'',
''6217231818000637512'',
''6222020712002277846'',
''4340610150328802'',
''6236981430000018941'',
''6228480089188549672'',
''6215996400001254354'',
''6212262316003428396'',
''6214661084473949'',
''6216260000008831019'',
''6225885865203038'',
''6212262003009384761'',
''6212261202037895837'',
''6217001820002556714'',
''6222023100072952224'',
''6217002280018484345'',
''6228480405840734579'',
''6236683760002175336'',
''6227001464580409720'',
''6217231702003133937'',
''6217003320049649711'',
''6212260200144314024'',
''6214833806781012'',
''6230523170014490000'',
''6228481258586222971'',
''6228480469830800279'',
''6217002180003880400'',
''6212261901015308081'',
''6212262902015565927'',
''6222020609006631665'',
''6222032702000128550'',
''6222801142471073994'',
''6236682870009715900'',
''6215591901000498230'',
''6228480068835702777'',
''6217001340006486032'',
''6217002100004127957'',
''6222801375081080799'',
''6217856000002240843'',
''6212260200071874388'',
''6222620810014777953'',
''6222020406016165143'',
''6212261211005660818'',
''6222620620029667804'',
''6222020907000081311'',
''6225885924728967'',
''6214854712721108'',
''6212262011032888328'',
''6228480568095964272'',
''6212261306001119205'',
''6217001630045385561'',
''6217002000042530000'',
''6212260200078279953'',
''6226194801003548'',
''6228481269243159779'',
''6236684140002170240'',
''6236680130003780364'',
''6222022304000657795'',
''6212261202043709105'',
''6231810012500657606'',
''6217002030002783867'',
''6217002430009194599'',
''6228482550982836019'',
''6217004150004031301'',
''6222022603004921713'',
''6217230912001950650'',
''6217000780012291770'',
''6226227900298773'',
''6214835328172042'',
''6212261712005738173'',
''6222024402051074783'',
''6222081607002623245'',
''6217003800024629309'',
''6222620710011189063'',
''6217996100090192129'',
''6222032116001260199'',
''6217996100101246898'',
''6217232502000447572'',
''6214832804395155'',
''6228482441764146613'',
''6230520690003714777'',
''6217230614000120166'',
''6228480529085462479'',
''6217003800021929371'',
''6217002660008792858'',
''6212261611002132382'',
''6228481829038565777'',
''6222031709000418148'',
''6217003020103475017'',
''6227004222700058703'',
''6236680190000525998'',
''6212263202004270327'',
''4367421432217116073'',
''6227002746080257511'',
''6212262103005405279'',
''6216606300006260309'',
''6214837672139429'',
''6217230504001806105'',
''6222020406014716699'',
''6228410394525778470'',
''6210812450003284753'',
''6210982600087446587'',
''6212261406002353223'',
''6214830116762773'',
''6214921205082551'',
''6217001860002794972'',
''6217230608000280194'',
''6217852700020303218'',
''6217995950005007577'',
''6222004000113401905'',
''6222023004003495842'',
''6222621030000012971'',
''6228480758718129276'',
''6236683760006350901'',
''6228480218733612673'',
''6228450088102325371'',
''6214854514812683'',
''6217000060032637876'',
''6227000061891757150'',
''6227003525240249686'',
''6222033100021392223'',
''6214835374292132'',
''6228480031295307610'',
''6228481829077580679'',
''6215591702000535066'',
''5522451590032978'',
''6214832919274816'',
''6228484122215299916'',
''6227002920180233157'',
''6212262514000032217'',
''6228481408203837277'',
''6215590603002702798'',
''6228480395788657579'',
''6212261609006508748'',
''6230523170015284678'',
''6212262902004695248'',
''6215584402004242269'',
''6217004470002116247'',
''6228480298848705174'',
''6227002745040271364'',
''6217003810016094313'',
''6212261605003333940'',
''6214830129233051'',
''6212261402015805341'',
''6228483465320041579'',
''6217002290005283444'',
''6217920805917767'',
''6217000460003170404'',
''6212262402019700703'',
''6212260908002009193'',
''6217002500009257529'',
''6222620920007126868'',
''6226620306419987'',
''6230523170015420000'',
''6228481358978330976'',
''6214830192866845'',
''6217003760021938949'',
''6217004640000483696'',
''6214920207286798'',
''6214992430048618'',
''6226730200557533'',
''6212261106001096035'',
''6222081814000603662'',
''6236681460006649129'',
''6236682700003048323'',
''6212261901017341288'',
''6212261407005968306'',
''6216696200004167186'',
''6222080402006109008'',
''6228480084547039119'',
''652270023915900980853'',
''6217986020000024653'',
''6228480388019180271'',
''6217003810058699235'',
''6215593202018212459'',
''6212260707002021764'',
''6212261202034004912'',
''6228480381439157318'',
''6222081402004419127'',
''6217003800021431121'',
''6217001850015243752'',
''6217001670011780000'',
''6228480478674580871'',
''6217003810030809423'',
''6222083301000199337'',
''6222629530003637734'',
''4340624580036091'',
''6222020904005708998'',
''6217567600022993212'',
''6230200700031649'',
''6222033301002802913'',
''6222003602112660836'',
''6228482038815822273'',
''622908503008234368'',
''6228480462892166317'',
''6222082104000595855'',
''6217007180003542245'',
''6214672120001914336'',
''6217003800017238092'',
''6222032107001178994'',
''6222082402003797167'',
''6217003230023745213'',
''6212264402064447810'',
''6217001370024715005'',
''211022197609263000'',
''6228480379403706276'',
''6225880000000000'',
''6222031001006390079'',
''6212264000011850589'',
''6212263602125049775'',
''6230521120009552871'',
''6222033100024092564'',
''612326198508016516'',
''6214831242723812'',
''6217994910139107942'',
''6217231208010447302'',
''6217231208011263815'',
''6212262902014788736'',
''6226090218881486'',
''6222081202007532706'',
''6217003320020075936'',
''6217857000013498256'',
''6217002000058099195'',
''6217000360004683944'',
''6217007110014817120'',
''6217002960103716400'',
''6222021001041629921'',
''6217001340006906070'',
''6214830207743112'',
''6236681540007293926'',
''6222033301007978833'',
''6222084402010033661'',
''320911199004223417'',
''6210812450007737483'',
''6212262902009808887'',
''6222032103002238820'',
''6230520140006568879'',
''6217000150013776841'',
''6226190901023329'',
''6215591714001214187'',
''6217933135218723'',
''6217901400002725261'',
''6228480318299924478'',
''6217906400028529130'',
''6228480089492257277'',
''6222022314005919090'',
''6212261408005671379'',
''6212261906001661732'',
''6212263100027300362'',
''6228480469842916675'',
''6222020200091593133'',
''6217002060002241137'',
''6212264402075034185'',
''6222620250011041659'',
''6217007200078471144'',
''6222082502002930394'',
''6212262013005643730'',
''6217000350009913057'',
''6217003980002505265'',
''6228482449347505676'',
''6217003860026464006'',
''6222022102001714908'',
''6212262902016602950'',
''6212262905000442655'',
''6212262902016602968'',
''6214835776513358'',
''6215581302000469341'',
''6228482299191604079'',
''6214832015876985'',
''6217003760017730532'',
''6222629530000390444'',
''6214680181974187'',
''6217002020030179915'',
''6217922873036314'',
''6222030409000819830'',
''6215593202002206780'',
''6210817200040474239'',
''6214857556077446'',
''6217007200077581927'',
''6226097812597715'',
''6217007200026666209'',
''6228480468918048579'',
''6226192001058015'',
''6212261607013837316'',
''6228450876014840069'',
''6222032703000851043'',
''6214837906577907'',
''6236682870008511490'',
''6228482326172389667'',
''6217995520009767854'',
''6228480768773385275'',
''6214921206995157'',
''6215581115005753307'',
''6217000150014818089'',
''6215581116005152490'',
''6230523170015275874'',
''6222081717001303978'',
''6230521260011497176'',
''6228480340825079916'',
''6217000010118522732'',
''6217003760016107674'',
''6228482478486710276'',
''622848317919289000'',
''6228482920761386611'',
''6222081001017124706'',
''6217000130000517085'',
''6217230411000471784'',
''6222030409002261304'',
''6217858000084394342'',
''6212262502025209373'',
''6217003860001836525'',
''9558801001163076307'',
''6228481728552439973'',
''6216693100001375761'',
''6212261608006187370'',
''6217930462060660'',
''6230523170014530000'',
''6214835191132602'',
''6212264000068833900'',
''6230580000156161858'',
''6228480409358551573'',
''6217001830023901260'',
''6217231614000028491'',
''6230523170014580000'',
''6212263100027009765'',
''6214835221129453'',
''6221504980000246702'',
''6217007200043333296'',
''6214880942605555'',
''6222620310001030490'',
''6227000731430171184'',
''6228480048520463372'',
''6228482058291784474'',
''6222032405002118476'',
''6214920208981108'',
''6212260411008268855'',
''6217000010125967201'',
''6227000351080043276'',
''6221503410001460640'',
''6236681540013337212'',
''6222023500031705540'',
''6217003490000665640'',
''6217007200039952513'',
''6227002090170459061'',
''6212261704009290228'',
''6214850282404869'',
''6227004220810155617'',
''6227004660300148400'',
''6217002220010487078'',
''6214835414777753'',
''6236681300002377251'',
''6217000260010445314'',
''6228480469687945375'',
''6214921600398487'',
''6222081001007048659'',
''6217880800001969999'',
''6222081903000514290'',
''6222032003000543009'',
''6227000190200013961'',
''6217002480003008956'',
''6228480638499782271'',
''6214835793429273'',
''6214923007022587'',
''6212262407003011892'',
''6222001606100262648'',
''6222031203003368278'',
''6222033100016328182'',
''6212261617001286665'',
''6215688000008802404'',
''6236680690001440626'',
''6217856200031608495'',
''6217991650000443116'',
''6215583901000946006'',
''6215592606002115166'',
''6228481729121459476'',
''6217857000075390581'',
''6210812590002029715'',
''6236682390001879133'',
''6210812390005610912'',
''6212262009003260451'',
''6226221700795575'',
''6217007180002126081'',
''6228483471312562010'',
''6214837974924502'',
''6212262201039649902'',
''6228460460017932716'',
''6217922002767342'',
''6222033301009521698'',
''6217000170004847229'',
''6222080200016699129'',
''6217231811000319207'',
''6222020402045163043'',
''6217001490002995229'',
''6226224400289691'',
''6212261716003600798'',
''6210812430019532304'',
''6222081001012665737'',
''6212261001063158544'',
''6222023100081505617'',
''6217004260008765117'',
''6228480170783842314'',
''6216696500001830466'',
''6217994350012880002'',
''6228410430196443117'',
''6230582000083398159'',
''6230582000074535934'',
''6217231811000812060'',
''6217868000004081621'',
''623059125601326709'',
''6210817200014336125'',
''6222021605004058793'',
''6217231604001455041'',
''6217681802233943'',
''6212260407006454208'',
''6212390000002663808'',
''6215695000002463303'',
''6226174800268722'',
''6222021102068326951'',
''6212261603015330434'',
''6228450288066015378'',
''6217003230041819545'',
''6227002349381049321'',
''6013827005014901927'',
''6217003320045864827'',
''6236681470003230492'',
''6215581714003396687'',
''6214855127345391'',
''6222021116014600418'',
''6217003370006008674'',
''6228480455799463076'',
''6212261110001049440'',
''6217001650003353518'',
''4100622518878899'',
''4367420013500892165'',
''4367421215904102013'',
''4367421217384062774'',
''6210810730001082842'',
''6210810730020667417'',
''6210810730030460761'',
''6210814220006694446'',
''6210814220007272528'',
''6212252312000010313'',
''6212253602006215315'',
''6212260302015848757'',
''6212260405000784778'',
''6212260406001239598'',
''6212260409016090139'',
''6212260502000510631'',
''6212260502010986144'',
''6212260511006152173'',
''6212260613000989475'',
''6212260905007066731'',
''6212261001070654485'',
''6212261205004791434'',
''6212261603013046529'',
''6212261610010963127'',
''6212261715008840631'',
''6212261716003040102'',
''6212262008018288150'',
''6212262012004247485'',
''6212262013014039961'',
''6212262102006170189'',
''6212262115002739930'',
''6212262201032337133'',
''6212262314001903445'',
''6212262406004537319'',
''6212262603000018241'',
''6212263500029806474'',
''6212263602015941982'',
''6212263602067700674'',
''6212263602097760482'',
''6212263602110580685'',
''6212264402010303489'',
''6212883012000020307'',
''6214830127319837'',
''6214830165956029'',
''6214830169041232'',
''6214830176991122'',
''6214830178625132'',
''6214830221508079'',
''6214831234075486'',
''6214831297432509'',
''6214832903310675'',
''6214832917696135'',
''6214832918500682'',
''6214835215491588'',
''6214835414974541'',
''6214835418234967'',
''6214835494557521'',
''6214835713021069'',
''6214835923541682'',
''6214837311977163'',
''6214837554193015'',
''6214837555343973'',
''6214837699131177'',
''6214837845941107'',
''6214837878244361'',
''6214837903592586'',
''6214839561213513'',
''6214850230610872'',
''6214850239696591'',
''6214854713022175'',
''6214855713082952'',
''6214855911656102'',
''6214855912060056'',
''6214856551042983'',
''6214857802824351'',
''6214857812496208'',
''6214857910505124'',
''6215581105004209005'',
''6215581507003592994'',
''6215581507003593000'',
''6215581812004573138'',
''6215590603007383552'',
''6215591302002179839'',
''6215592102000836987'',
''6217000500001354284'',
''6217001040004958129'',
''6217001780006873749'',
''6217001820015986569'',
''6217001840006320776'',
''6217001840011361617'',
''6217002170005394161'',
''6217002230001721880'',
''6217002290023074585'',
''6217002300015649953'',
''6217003120008115716'',
''6217003160002570250'',
''6217003200003616908'',
''6217003230033541602''
)
UNION
SELECT ACCOUNTS AS "ACCOUNT 账户" , ''1.0'' AS "PLATFORM 平台" , BANKCARDNO AS "BANK CARD提现银行卡" , REALNAME AS "PAYEE NAME提款人姓名" FROM LOTT_NEW_A3D1.LOTT_VW_MEMBER_BANK
WHERE BANKCARDNO IN
(
''6217003760038163903'',
''6217003800012460857'',
''6217003810039901205'',
''6217004180003770468'',
''6217004190001368660'',
''6217004220044988297'',
''6217004220045325226'',
''6217004220045433756'',
''6217004550001885395'',
''6217230705000610543'',
''6217230710000646430'',
''6217231001001466245'',
''6217232605002388197'',
''6217681500624369'',
''6217713001828221'',
''6217770470386560'',
''6217857000067511533'',
''6217903100005583711'',
''6217906000001585339'',
''6222001001107695687'',
''6222003803100211570'',
''6222020705006940195'',
''6222021001101229943'',
''6222021611007043857'',
''6222022201016969539'',
''6222022304006545606'',
''6222022313004162314'',
''6222023100042907092'',
''6222023500031615962'',
''6222031203002061833'',
''6222032014000410784'',
''6222032105001364036'',
''6222080603003491428'',
''6222080808000575160'',
''6222081102007220254'',
''6222081105000617061'',
''6222081106001472357'',
''6222081203001828074'',
''6222081604000257126'',
''6222082105001621517'',
''6222083400004447120'',
''6222083602005684417'',
''6222083602013111155'',
''6222084000008491378'',
''6222600610017881149'',
''6222620250008801172'',
''6222980019825639'',
''6225882134388096'',
''6225884201006973'',
''6226097310229522'',
''6226225600839904'',
''6226622806668261'',
''6226961200166070'',
''6227002661800045361'',
''6227002870810081239'',
''6227002872380275605'',
''6228270146064546471'',
''6228270651234766776'',
''6228270771250971272'',
''6228271631240255179'',
''6228480078209717277'',
''6228480086787586972'',
''6228480089780826676'',
''6228480098481194375'',
''6228480136706060276'',
''6228480218767937376'',
''6228480268860870370'',
''6228480289017131078'',
''6228480318128708779'',
''6228480318240890570'',
''6228480382642604716'',
''6228480431124025419'',
''6228480631851164014'',
''6228480669073290472'',
''6228480688562215774'',
''6228480819448137177'',
''6228481139537015070'',
''6228481198848377777'',
''6228481269225229376'',
''6228481332988301616'',
''6228481619104444175'',
''6228481758353024278'',
''6228481988932848877'',
''6228482028574207378'',
''6228482309196611977'',
''622908373060405417'',
''6230520210020812874'',
''6230520210020993476'',
''6230520460057971172'',
''6230521000000019270'',
''6230522080019735271'',
''6230580000071054501'',
''6230580000088255307'',
''6230580000098109395'',
''6230580000114321990'',
''6230580000117351572'',
''6230580000123743739'',
''6230582000046148030'',
''6230943210000207250'',
''6236682340007176026'',
''6236682830005136311'',
''6236683610001916430'',
''6236683630000400814'',
''6236684160003356473'',
''6236684220001924100'',
''6217991410006575084'',
''6212260302037351160'',
''6236682870012027079'',
''6214837664668393'',
''6222032116001441948'',
''6217003590006259817'',
''6214855711190005'',
''6222620170014643162'',
''6212263500041291143'',
''6212261907007305902'',
''6217905300005420223'',
''6217001870002949856'',
''6217002950105780348'',
''6222033100021677144'',
''6228480608148437478'',
''6217003590006259825'',
''6215593202009515324'',
''6217921408224833'',
''6214680131826263'',
''6228480128455331172'',
''330424199602262017'',
''6228580499014617180'',
''6228480383393380712'',
''62170018930023900000'',
''6217905300005420000'',
''6217001870002940000'',
''6217001370024710000'',
''6216608000004870000'',
''6217003320049640000'',
''6236682940004017444'',
''6230521100014134279'',
''6230520050059670375'',
''6215591904001999446'',
''621700720006344093'',
''622908433047561714'',
''6214837970500066'',
''6214837856820042'',
''6215581813007272769'',
''6228480086792788571'',
''6222620750010138463'',
''6212262109001650560'',
''6217906500035320041'',
''6217997900062415054'',
''6227003811990406803'',
''6227000730340059950'',
''6236680010002198505'',
''6228480068825005678'',
''6212262106000555881'',
''6222629530010001296'',
''6230523470025030677'',
''6228482168964614773'',
''6212264402028319923'',
''6217003390007518984'',
''6217712000198420'',
''6228481028959581976'',
''6217001250010325870'',
''6230520790020308379'',
''6222021108015149586'',
''6215581102007925232'',
''6216606100002638882'',
''6221871000002642009'',
''6217731203389784'',
''6217921601959839'',
''6214920604191864'',
''6214857160026821'',
''6226630204319155'',
''6214855160183987'',
''6217001830033852784'',
''6217256300009023887'',
''6212262502037600460'',
''6212262502036958851'',
''6216690100005294136'',
''6214831008728781'',
''6222030802002499678'',
''6214837970788349'',
''6212261510002301965'',
''6217002120004827992'',
''6228480469624752975'',
''6217903100010305787'',
''6212252006000971967'',
''6214830161890842'',
''6217001140010373956'',
''6217002110003291779'',
''6228482316063756363'',
''6228480156032466765'',
''6228480156024604464'',
''6228481308433929276'',
''6212843191360052354'',
''6212843191360052354'',
''6217858100029509366'',
''6212838105000144741'',
''6226630204922818'',
''6217865000009637255'',
''6228480378257556670'',
''411325198206052912'',
''6217880800010974691'',
''6210812470001673609'',
''6217001830037658435'',
''6217866400004872973'',
''6230521820046461370'',
''6217001830037550483'',
''6217004220050918188'',
''6222620280003284660'',
''6222623550003039729'',
''6226220318302444'',
''6226631702375301'',
''6228430338048575976'',
''6228480819437778379'',
''6228482479617118579'',
''6230520680054044075'',
''6217000270000245302'',
''6228460718021617676'',
''6228480136742388277'',
''6222032003003915477'',
''6228270146069680374'',
''6215582603000997283'',
''6228482409750483175'',
''6217923671249240'',
''6222620720006100777'',
''6217906400019589127'',
''6212261512003918045'',
''6217921802107311'',
''6222034000005908136'',
''6222032015001049927'',
''6222032015000881858'',
''6217001820027547870'',
''6217003030108656792'',
''6217582000045808169'',
''6214837789525312'',
''6216667500002190220'',
''6214857822754638'',
''6215697500014265396'',
''6212261906005911943'',
''6228210399028053075'',
''6217996020049279779'',
''6236683030001081384'',
''6212262408003577080'',
''6212261913006871134'',
''6217000120022515290'',
''6217002920001543546'',
''6222021901007260019'',
''6228480086962717178'',
''6230580000222047685'',
''6236681930009157361'',
''6222030713000813184'',
''6226630204922818'',
''6230522380006783478'',
''6212264402005765742'',
''6222620910030475242'',
''6217710724643374'',
''6212260200166693800'',
''6217930675389328'',
''6228480018948435971'',
''6221871000011063064'',
''6212260200171601681'',
''6222620910030475242'',
''62170072000072100632'',
''6217993680017711971'',
''6228482309027340176'',
''6230520860019898373'',
''6217560500035398291'',
''6214832047383455'',
''6222032102007768906'',
''6217003810042592306'',
''6228481028960031870'',
''6226221700382812'',
''6228480328882618478'',
''6222081001024943833'',
''6217001210075995421'',
''6230520030075894076'',
''6228480038104447370'',
''6217001210027834876'',
''6222620910030475242'',
''6217230903002109891'',
''6214832707995572'',
''421083198804155320'',
''6230523460018133976'',
''6217001340006750635'',
''6228483465805621879'',
''6222623710000816061'',
''6217856100091483682'',
''6226662001298928'',
''6217921771938381'',
''6013821900070837716'',
''6212262201042889784'',
''6228481629554933973'',
''6212262016005410588'',
''6217906400028731520'',
''6228482578099336771'',
''6229538106600344498'',
''6217906300021667426'',
''6217568300000165441'',
''6230580000227461584'',
''6222620710032143458'',
''6214832022626787'',
''6217566300000165441'',
''6226482578099336771'',
''6227082430090492513'',
''6217858000107144831'',
''6217995910006018189'',
''6217000150025821817'',
''6216910316065637'',
''6217853100025846403'',
''6236683690000165940'',
''6212262317012262543'',
''6228480688350241370'',
''6227001833310286238'',
''6228480683009574016'',
''6217001830036103003'',
''6227002120690165526'',
''622908436229518519'',
''6230520460163926276'',
''6222620530012916574'',
''6216693100005008103'',
''6222022008018717539'',
''6225887521071759'',
''6226221105768748'',
''6212262010029456388'',
''6228480269026512872'',
''6222022102016888622'',
''6228480395881297976'',
''6217002190017067175'',
''6216912702162291'',
''6228270081492688779'',
''6222629530007560411'',
''6230520460203211473'',
''6214838986579797'',
''6217257500003252205'',
''6217003730002317108'',
''6217993900037031980'',
''6217003810057586102'',
''6228413854653466179'',
''6217977151001738909'',
''6217993000318144410'',
''6212262010005203184'',
''6222081607002520839'',
''6228480208318206777'',
''622908376266247715 '',
''6222020200115997401'',
''6228460028001283774'',
''6222021617001990688'',
''4367420012690066721'',
''6222023700018946188'',
''6227003631120333374'',
''6212261402003388698'',
''6227000167970095881'',
''6212263602008661696'',
''6228282130924567215'',
''6222020407002119094'',
''6212261406002431912'',
''6217003230019164759'',
''6217001930019027110'',
''6226903800025504'',
''6212261703003845938'',
''622709108971617'',
''6227001892560238612'',
''6217001830003033639'',
''6227001264290223522'',
''6227001824360057856'',
''6227000167970020012'',
''6222020502002227127'',
''6212261703000393602'',
''6212262010018423205'',
''6222081103002996178'',
''6212262010018427721'',
''6212261702002745204'',
''6217002660006633112'',
''6227002664090149570'',
''6217002230006570316'',
''6222023700038164754'',
''6212262603000187202'',
''6222022603003411294'',
''6212262603001337384'',
''6212262603000187194'',
''6212262603001332708'',
''6217220200002018947'',
''6228482828515763870'',
''6222021313006440263'',
''6228483151320723719'',
''6236681540003019085'',
''6227002463010121821'',
''6212261712003088845'',
''6217002580000323579'',
''6228481258975460778'',
''6212262110000211602'',
''6228482018261639579'',
''6212261602002150060'',
''6217850500010719429'',
''6222023400028183662'',
''6259960046798823'',
''5287080009172565'',
''622848056026797413'',
''6222023400025803171'',
''6227000786120083297'',
''6227000786110098834'',
''6212263301008842337'',
''6214835491176705'',
''6222021302028362738'',
''6228480660513315516'',
''6222021602020442929'',
''6212262513000953232'',
''6212262513000419721'',
''6212262513000975458'',
''6212262513000681015'',
''6212260606001127566'',
''6222020606000847040'',
''6717000130033403790'',
''6227002031010536411'',
''6222023301035053866'',
''6217001070009633104'',
''6217001140017906295'',
''6214671070003166453'',
''6217000210008657503'',
''6222023301040093949'',
''6217001070008617900'',
''6217001070002041354'',
''6217000210007847733'',
''6217001140026763620'',
''6217001070006700575'',
''6217001070000285748'',
''6217001070009631595'',
''6222024200028609578'',
''6217000990004768533'',
''6217001070009635448'',
''6217001070009633567'',
''6228482660635749517'',
''6217000210002050564'',
''6217001070008621902'',
''6212260200116699253'',
''6228480011017746014'',
''4340621022798189'',
''6217855000048930184'',
''6217001070009631785'',
''6217001070006213793'',
''6217001070006685081'',
''6222623310003701178'',
''6217001070003195589'',
''6215581103002839519'',
''6217002830004236479'',
''6228481558538313970'',
''6212261410002465102'',
''6228481552308516516'',
''6227001882840398013'',
''6212261410000289074'',
''6217003520006246928'',
''6217001880000808434'',
''6228481552587532317'',
''6228481552092932317'',
''6222021410003179140'',
''6217002920116145997'',
''6212261911004873144'',
''6215591911000633264'',
''6221215212321563256'',
''621226040202512783'',
''6214832009412052'',
''6227007201541267191'',
''6212262115002712945'',
''6212262112002506403'',
''6217682901289687'',
''6222082102001843720'',
''6217000140023764572'',
''622908127378779412'',
''6217714900950462'',
''622908123008655858'',
''6222020402038022727'',
''6222021502019065436'',
''6214835218997888'',
''6217000010062442515'',
''6217001210031205485'',
''6212264000042160529'',
''6212264000043460373'',
''6212262010026802188'',
''6212262004004764221'',
''6212261716003018488'',
''6222021906005426819'',
''6212262105000532296'',
''6228480838425524074'',
''6222020402032715151'',
''6222023202033001966'',
''6227002871580337280'',
''6228481436698787772'',
''6212261702016757841'',
''6222370125807608'',
''6222020408016990033'',
''6212261713002355037'',
''6217857500009085579'',
''6222340037711800'',
''4563517500024406108'',
''6222021901023421884'',
''6226220115871153'',
''6226900717320176'',
''6212261603000462697'',
''6222083500003419184'',
''6222023500007745918'',
''6212260200058902137'',
''6228480018335163079'',
''6225880159285767'',
''6225880159284398'',
''6227000581380120487'',
''6210810580001928753'',
''6210810580000465724'',
''6222020704009805448'',
''6227000581410029641'',
''6222020704006280843'',
''6228480018609697471'',
''6217856200016144540'',
''6217004280009986637'',
''6212251813001076741'',
''6228480791116706015'',
''6222020710004177477'',
''6228480258879872970'',
''6214835760188977'',
''6222081404001003680'',
''6222021606008662168'',
''5309900017054253'',
''6225882013152688'',
''6222021606010912957'',
''6227002192453558484'',
''6222022703017076610'',
''6222020604004034855'',
''6222021609006306028'',
''6222021814001993396'',
''6222021303001964557'',
''6228480291428959311'',
''6222620910017027388'',
''6222081607000101814'',
''6222081607002260915'',
''6227002200036830724'',
''6222600910074506419'',
''6217995030000934784'',
''6228480058576601072'',
''6222020713003853155'',
''6236682530002796527'',
''6222021706003969830'',
''6217908000001080883'',
''6215581503000395366'',
''6217004260006774061'',
''6227004381010071580'',
''6217004380000781290'',
''6227002476030028552'',
''6222370034901831'',
''6228480405802637778'',
''6222021503001526039'',
''6215580912000049918'',
''4270200017243727'',
''6215581405000294245'',
''6217001840007584586'',
''6215581405000169439'',
''6217002230004037664'',
''6216917902436031'',
''6228480268083550874'',
''6222100102206643'',
''4367420012510402759'',
''4563510100887934457'',
''6212260712001457282'',
''6230943240001661239'',
''6222022104001226610'',
''6227003100160144711'',
''6222022003008560957'',
''6222021611007542312'',
''6222022002006955540'',
''622202200200695540'',
''6227003234120018143'',
''6222022609003239288'',
''6228482920365379517'',
''6222023100044417470'',
''6228480291207277018'',
''6217996900087243946'',
''6222023100014279033'',
''6212261602006673059'',
''6228482301127495513'',
''6212261211001243429'',
''6222021609002998455'',
''6228481831755620819'',
''6222601040002629445'',
''6222802397581036690'',
''6222021309002588816'',
''6228481730647168716'',
''6222080200017477947'',
''6222023100083104310'',
''6222022706003072915'',
''6227004227240019438'',
''6227002548010234937'',
''6227003114130115388'',
''9558821109001104607'',
''6228481388458096474'',
''1912101701002976831'',
''6217003010000279612'',
''6227075770150882'',
''6222081912000885469'',
''6222624390000701867'',
''4340623010027514'',
''6222021912000885469'',
''6225887317400808'',
''6217007200048185683'',
''6215983010200018321'',
''6217003010104006762'',
''6212262111004767904'',
''6217003010104277223'',
''6222080302002811476'',
''6228480778354229677'',
''6222021912000512751'',
''6222081912000504037'',
''6222081912000709040'',
''6222021912004919432'',
''6222021508006041967'',
''6228484178497806372'',
''6217003640006181998'',
''6222022102003101880'',
''6222081607001837614'',
''6222021607010173947'',
''4367422200037259863'',
''6228480928266241274'',
''6222021604001297744'',
''6222021102033688873'',
''6227002006730038062'',
''6214850254262311'',
''6228481841932736511'',
''6212260200127580187'',
''6215983760008810986'',
''6222022105009784369'',
''6222082105001090119'',
''6212261001015518415'',
''6214835121984189'',
''6222022403005480052'',
''6222022010033185916'',
''6227002454810291583'',
''6236681840001721736'',
''6212261408012678763'',
''6222021408018405682'',
''6222021613008210394'',
''6222802349961078297'',
''6222023202012783964'',
''6228481261306894517'',
''6222020409008073077'',
''6222380037539066'',
''6222021914003546125'',
''6227001274570022361'',
''6212261717001429370'',
''6217001210051848180'',
''6222802430161022960'',
''6222021702040763112'',
''6212261718001915996'',
''6222113957593304'',
''6222621030001504992'',
''6212262405004380167'',
''6212262405001555803'',
''6222022405003901773'',
''6228481208142416674'',
''6228481163988289018'',
''6228480329448374374'',
''6228480328705476872'',
''6222520178399982'',
''6222020408016815537'',
''622202048016815537'',
''6227002951240486774'',
''6222021905002954211'',
''6212261206000605966'',
''6212263602072352370'',
''6212260200013319963'',
''6212262402004221616'',
''6222021505001682894'',
''6222021901015877341'',
''6222021906004186257'',
''6222021404001227894'',
''6227003191110027783'',
''6215592006000234822'',
''621700319000530352'',
''6221881600039338857'',
''6222021706017213902'',
''6222021706010117316'',
''6222020503005988871'',
''6222022201011805290'',
''6222022315006807101'',
''6222021102055553807'',
''6227002301081803317'',
''9558803602163650633'',
''6227002942310133057'',
''6222021903003682246'',
''6212250603000307218'',
''6212262012004058304'',
''6222020409012336262'',
''6212261404000550544'',
''6228482038140494178'',
''6212261611001346504'',
''6212261611001446064'',
''6214835102189733'',
''6228480518610915879'',
''6215581103006020710'',
''6227002260020646908'',
''6217856100069044653'',
''6221507970002065926'',
''6215582316003681198'',
''6228480404836035117'',
''6212264402047486448'',
''6227003813850049095'',
''6217996730000148389'',
''6217995030013766462'',
''6228481849051009073'',
''6228481849002682374'',
''6216602700000863731'',
''6236692390000990574'',
''6228480246022168263'',
''6228482131722361319'',
''6228480048527982176'',
''4340620160030835'',
''6222020407000686649'',
''6222080407000152862'',
''6217003620002384465'',
''6228482868722153473'',
''6217903100031655152'',
''6214833781894715'',
''6236682920008938464'',
''6222022608001907938'',
''6217232608000880991'',
''6222021311006825558'',
''6222024000041633229'',
''6222022010028485636'',
''6222004000109703215'',
''6222022010024610021'',
''6227004310550040838'',
''6222022103006837462'',
''6222021901002657334'',
''62220220100284856363'',
''62220220100246100212'',
''6222021817001133046'',
''6222021804003198052'',
''6222024000000999371'',
''6222022020001402243'',
''6222021305003466432'',
''6227002920770602159'',
''6210810940001872080'',
''6222021714005526871'',
''6212261309001546765'',
''6222021309006743193'',
''6228483331016058816'',
''6222022103006881791'',
''6222021908006194586'',
''6222021804003652546'',
''6222022010030170945'',
''4000026501111335289'',
''6228480329292662874'',
''6228480328660218277'',
''6222080407001456775'',
''6214660160102893'',
''6222080407001632300'',
''6228413854647190778'',
''6215582318000497610'',
''6212264402005492982'',
''6228483858529534578'',
''6226194801119385'',
''6217001280001719351'',
''6215581807002548298'',
''6228271057001453474'',
''6222021103022211685'',
''6227001030720035129'',
''6212260909002877308'',
''6222082320000041613'',
''6222022320000797332'',
''6217996840002196334'',
''6215683100018178483'',
''2320632401101024191'',
''6216910104937955'',
''6212261309000319255'',
''6214835210685432'',
''6217993000102006676'',
''6217856101016199379'',
''6228481628835591378'',
''6222802732601000468'',
''6217921774167087'',
''6228480298971541172'',
''6217002200004048805'',
''6236681820007820963'',
''6228480068831694572'',
''6225880159253575'',
''6214837715339853'',
''6217002460016570457'',
''6217002460022480394'',
''6212261706012877149'',
''6212261709001426787'',
''6217002480005317025'',
''6227002481310090694'',
''6222625980000768962'',
''6217856100007313007'',
''6222031001013180448''
)','dau-wa@my-cpg.com;UBG/OD/DAU/WA@my-cpg.com','7d35e28a.my-cpg.com@apac.teams.ms','','( EID-213:MID-131 ) PF1 ASI-11796 恶意投诉勒索涉案出款卡','Please see attached file of ( EID-213:MID-131 ) PF1 ASI-11796 恶意投诉勒索涉案出款卡

Thank you.','wilson','2017-09-29 15:09:25','denice.d','2020-01-21 14:02:59','DAU',null);
INSERT INTO MONI_EXPORT (ID,asid,TICKET_NUMBER,EN_NAME,CH_NAME,STATUS,JDBC,PLATFORM,CRON_EXPRESSION,SCRIPT,MAIL_TO,MAIL_CC,MAIL_BCC,MAIL_SUBJECT,MAIL_CONTENT,CREATE_BY,CREATE_TIME,UPDATE_BY,UPDATE_TIME,REQUESTER,LAST_EXPORT) VALUES
(214,'EID-214:MID-132','ASI-11796','( EID-214:MID-132 ) PF2 ASI-11796 Fraud Bank Card','( EID-214:MID-132 ) PF2 ASI-11796 恶意投诉勒索涉案出款卡','1','ub8-pf5-core-sec','5.0','0 0 * * * ?','select CUSTOMER_ID as "Account 账户" , ''2.0'' as "Platform 平台" , CARD_NO as "Bank Card提现银行卡"
from CORE.BPS_CUSTOMER_BANK_VW
where CARD_NO in
(
''6222020506004955189'',
''6217004470026680079'',
''6228481208280518976'',
''6217857600028157746'',
''6212261102030802824'',
''6235213288006157713'',
''6212263602025583782'',
''6236683950000641823'',
''6217007200020873967'',
''4367421375200059851'',
''6215590602003275291'',
''6222083901000129810'',
''6217852700016860585'',
''6228480298561401977'',
''411024198409197713'',
''6228461208001307372'',
''6228480360884256619'',
''6212261603001953710'',
''6217001430016762843'',
''6214850280677433'',
''6225880173817587'',
''6212261001040446574'',
''6228481454438757013'',
''6217000010103088921'',
''622908373010420110'',
''6214836351414269'',
''622908373105668912'',
''6214835498992062'',
''6210812550004918653'',
''6216917001307620'',
''6217995030013781966'',
''6217002020039474788'',
''6217856101009001483'',
''6222081207002015482'',
''6228480368022407978'',
''6214835711954642'',
''6228480070138970317'',
''6212262014003175675'',
''6217996730006053682'',
''6210985131008553597'',
''6217001830025259378'',
''6212264100032716817'',
''370204197201021329'',
''6222081208002704059'',
''4367421760310814750'',
''6217001760007789490'',
''6217001830031642393'',
''621202000000000000'',
''6228480383263170417'',
''6236681460008273795'',
''6226194100311204'',
''6222024000084323530'',
''6217002430011039204'',
''6212262305004484912'',
''6236682020000006251'',
''6212261402035189346'',
''6212262102013331543'',
''6226090202792905'',
''6217002020000007799'',
''6230580000123706785'',
''6212261702009259763'',
''6222021510005795692'',
''6222021207014303085'',
''6222024000074485265'',
''6222022703019182838'',
''6228480751078816913'',
''6215584402005085832'',
''6214852118856288'',
''6228480708206208579'',
''6214993860364129'',
''6217002930109674960'',
''6227003765080095613'',
''6228480246137606769'',
''6227001020410288369'',
''6225885351693015'',
''6230521720009376872'',
''6236681300000776579'',
''6228480218693660779'',
''6212260408006387265'',
''6217000150022823915'',
''6230582000057691993'',
''6214835850816701'',
''6217580500002381367'',
''6225887841912591'',
''6217681000240864'',
''6230523170013330000'',
''6215581105003798719'',
''6212261001085973938'',
''6212264000006878736'',
''6222621310017812062'',
''6228451268015223876'',
''6222629530008593841'',
''6228482208977983276'',
''6212262316004295810'',
''6214830240829258'',
''6214831270605808'',
''6222000200104332812'',
''6222621410006623239'',
''6217000430004444322'',
''6212262502024126180'',
''6212261406003393699'',
''6212262005004019821'',
''6236683150001258335'',
''6228480719529979671'',
''6217002340003861632'',
''6217001860006047112'',
''6214661144665757'',
''6212261402013634347'',
''6230582000051877374'',
''6222024301034096659'',
''6221500000000000000'',
''6214833518451433'',
''6212260407008221704'',
''6217923576736309'',
''6222021714005603621'',
''6216695000001300496'',
''6217000150022727090'',
''6217933501294878'',
''6212261001064061036'',
''6217003690002837283'',
''6216698000002810409'',
''6212261408006485282'',
''6212260711001499914'',
''6230523160033430000'',
''6222081203008774016'',
''6212260408011940751'',
''6236680150002926834'',
''6228483038621395778'',
''6214830113450976'',
''6214600180010584238'',
''6227002342341471222'',
''6217003020107062100'',
''6230580000132636569'',
''6215581105011796630'',
''6230521320011404174'',
''6215593700013827445'',
''6212261608006513302'',
''6214832009521688'',
''6217003810042993744'',
''6214620239000491402'',
''6217003110026584076'',
''6228481136762504778'',
''6212260809002044042'',
''6228480086766747777'',
''6217002210028953815'',
''6217004260001270081'',
''6217001930009725590'',
''6013822000591269298'',
''6228480316053853362'',
''6217000130020616057'',
''6212264301002427878'',
''6222023602092048115'',
''6222082403001382564'',
''6212262201033754203'',
''6214852107488796'',
''6236681430001261311'',
''6228480156016459166'',
''6228411080394009910'',
''6230520830002100871'',
''6212263602078217056'',
''6230580000134030258'',
''6227002980350601286'',
''6215584402018155937'',
''6212262013017172884'',
''6212264301025137264'',
''6228480329387767976'',
''6212261502009803309'',
''6217000150001641304'',
''6212260412008054881'',
''6217000150014379595'',
''6228481739131499677'',
''6216608000004879120'',
''6212262708000018321'',
''6236683760003161400'',
''6215683100002951333'',
''6216603600002269623'',
''6222082003001148120'',
''6217680901422316'',
''6228480482379040413'',
''6228480343107390811'',
''6212260302025041534'',
''6217002050002294913'',
''6214835194580013'',
''6214660635566888'',
''6212263100037677031'',
''6214855492902933'',
''6222800000000000000'',
''6210812530004827120'',
''6230583000012115665'',
''6230943240001179034'',
''6227000012510430836'',
''6236682340006472301'',
''6222032102004491247'',
''6217003150005638345'',
''6217003320048543477'',
''6228480930911958211'',
''6214832511635182'',
''6215581507000112515'',
''6228481538563520970'',
''6222081901004059973'',
''6217996100098769431'',
''6222021408016684049'',
''6230200092612030'',
''6227003040140410016'',
''6217003320063996584'',
''6217002870073594705'',
''6212260200144403389'',
''6228480038111575171'',
''6214832804383169'',
''6226631500532079'',
''6217993900061781922'',
''6212262201012585222'',
''6228482118151363072'',
''6214830170226939'',
''6215591302002846288'',
''6214920202519110'',
''6226621703960201'',
''6217231211000444636'',
''6228480580540635613'',
''6226220630762853'',
''6212263100025448718'',
''6212261602002681353'',
''6217007200030236445'',
''6222081404000524660'',
''6227001935550500846'',
''6217003760007235146'',
''6217000660002672447'',
''6217922070388237'',
''6228480900796093814'',
''6217004470008291721'',
''9558804301103805923'',
''6214832510486678'',
''6222031207003160825'',
''6217992400053177792'',
''6210812500003982341'',
''6215590603001173926'',
''6217003240017172217'',
''6217001330015743317'',
''6217001880003336748'',
''6228480322033365816'',
''6222032010007842805'',
''6217003320033815336'',
''6214835733170706'',
''6212261709004396425'',
''6217003810056272670'',
''6217001830036624099'',
''6212260411007128340'',
''6222080610000511751'',
''6226197900246769'',
''4367420132049156625'',
''6228481258760428774'',
''6228480469743677079'',
''6212262012011970780'',
''6236683140001379199'',
''6217003960001562954'',
''6217002430040556210'',
''6212264000046498701'',
''6228481336702800464'',
''6214832168919038'',
''6217002280012395174'',
''6228481208168685178'',
''6228480048626517873'',
''6228483471570631614'',
''6222021717003172911'',
''6214837631488859'',
''6212261709003902702'',
''6222002008103409087'',
''6212260409011741421'',
''6222020905008111346'',
''6228481598418801173'',
''6214830203331334'',
''6217000460012060968'',
''6217858400018353143'',
''6230930030004614250'',
''6214834573444487'',
''6236681540008684131'',
''6212260505006225815'',
''6215582603000439054'',
''6214921103162430'',
''622908473393655215'',
''6217003130009547650'',
''6217001850004638111'',
''6228410423034748664'',
''6217002590001996448'',
''6222081203006156877'',
''6215686000007525909'',
''6217002220013074097'',
''6227007201280460346'',
''6217858300029929982'',
''6215581109008077087'',
''6212260905005107669'',
''6217007110003001066'',
''6212262312002137914'',
''6212262902015878734'',
''6214832804360845'',
''6217001210090317221'',
''6228480038998430979'',
''6217002220012856049'',
''6214838983696461'',
''6217002200012398994'',
''6217865000009125400'',
''6217991770002323270'',
''6212260904004345842'',
''6227002671050501849'',
''6212262011028413610'',
''6222080200017306815'',
''6217003370002428652'',
''6230520680025501070'',
''6217002210026839131'',
''6212260200130308568'',
''6212261001064110528'',
''4367420130668399088'',
''6217852000019397143'',
''6217996710010262370'',
''6228481150714465814'',
''6228480329265488174'',
''6212260302001289628'',
''6222620340004088641'',
''6217004470012301573'',
''6228482118169074976'',
''6222031309000057168'',
''6222032116001260256'',
''6222083602013993891'',
''6217003150003106774'',
''6212264402055236115'',
''6217001820001527120'',
''6225880002195692'',
''6222022017004009546'',
''6217001830025761704'',
''6212261102021123123'',
''6216260000015837025'',
''6222001402100986224'',
''6227001376600031518'',
''6212261405009752288'',
''6228460000000000000'',
''6212261203016848714'',
''6217001070003251671'',
''6217993300090865517'',
''6214837714798455'',
''6212261207009815663'',
''6228480086820499274'',
''6214837710367057'',
''6222021001124124402'',
''6212262408005391993'',
''6212263500026951034'',
''6217003810053069731'',
''6212261613004824552'',
''6214835433874243'',
''6214855746631007'',
''6214832027355325'',
''6212262013015753230'',
''6236683480001721549'',
''6212263602044031417'',
''6225380089999207'',
''6217000010121616703'',
''6214834113936315'',
''622033100021977144'',
''6226600000000000'',
''6226630901966068'',
''622908153049612717'',
''6217003230029282765'',
''6228480240524751411'',
''6212260408004324930'',
''6210812831000661939'',
''6210812440001912968'',
''6212261911001103461'',
''6230523170014470000'',
''6215593202018762966'',
''6222623730006081577'',
''6217683101370723'',
''6212260408009993499'',
''6215581313000961062'',
''6236682830000871243'',
''6217003320064262432'',
''6228413164511720000'',
''6222021910002892726'',
''6228483368409231071'',
''6212262116002747873'',
''6222032116000123513'',
''6236683480001653494'',
''6228483178414303777'',
''6215581818005431051'',
''6222030714000133631'',
''6228413170026555311'',
''6216913400644044'',
''6222022008014662606'',
''6222020411002018488'',
''6222023803015687647'',
''6217004470021956532'',
''6212260408008934619'',
''6222021705006220829'',
''6217002340017342884'',
''6212261905004965090'',
''6226097690991386'',
''6217003800009955844'',
''6217230406000437025'',
''6217002120009514587'',
''6217231510001345316'',
''6212261717008219634'',
''6212261203013186746'',
''6217003120011745665'',
''6222081208007177988'',
''6228482399468118876'',
''6217857600032159951'',
''6230810324547778'',
''6214830109881572'',
''6230580000069536261'',
''6214833612900053'',
''6212261202004706645'',
''6215593700007268101'',
''6228480329473602574'',
''6217001260003467993'',
''6212264402000628531'',
''6212264000060270002'',
''6236683810000776922'',
''6217004220031998217'',
''6212264000047257494'',
''6222022010028497961'',
''6228480086945622370'',
''6210181478802343879'',
''6212261211006439782'',
''620522156220085884'',
''6217000830003466244'',
''6217001140010787791'',
''6222020302052585619'',
''6217002250003924670'',
''6222000200122402126'',
''4340613811803510'',
''6214832915227768'',
''6217003810030746724'',
''6228483626139671068'',
''6222021702043142652'',
''6212263901017268729'',
''6212262902003781965'',
''6222023602103783684'',
''6214855912269905'',
''6226632703533419'',
''6226632703507520'',
''6222022002005509249'',
''6228481165278860317'',
''6222031207004620355'',
''6222080402008888831'',
''6217001290000183293'',
''6214850254840348'',
''6222021204010384128'',
''6212261116000402290'',
''6217002170003420455'',
''6225882139633439'',
''6227003150190340417'',
''6222082102001990232'',
''6212262102011203645'',
''6217221812000102769'',
''6214830161589865'',
''6217905300003966029'',
''6212261203016459892'',
''6217920116688933'',
''6212261907006658996'',
''6222020407000323003'',
''6212261202048712328'',
''6214835907021826'',
''6217001540024297424'',
''6217856200044231061'',
''6217920275862774'',
''6217560800002040557'',
''6212264000066640935'',
''6228480128660868471'',
''6212262504001096923'',
''6222620590008620100'',
''6222082402002497272'',
''6215593901003243664'',
''6212262010024425164'',
''6217231818000637512'',
''6222020712002277846'',
''4340610150328802'',
''6236981430000018941'',
''6228480089188549672'',
''6215996400001254354'',
''6212262316003428396'',
''6214661084473949'',
''6216260000008831019'',
''6225885865203038'',
''6212262003009384761'',
''6212261202037895837'',
''6217001820002556714'',
''6222023100072952224'',
''6217002280018484345'',
''6228480405840734579'',
''6236683760002175336'',
''6227001464580409720'',
''6217231702003133937'',
''6217003320049649711'',
''6212260200144314024'',
''6214833806781012'',
''6230523170014490000'',
''6228481258586222971'',
''6228480469830800279'',
''6217002180003880400'',
''6212261901015308081'',
''6212262902015565927'',
''6222020609006631665'',
''6222032702000128550'',
''6222801142471073994'',
''6236682870009715900'',
''6215591901000498230'',
''6228480068835702777'',
''6217001340006486032'',
''6217002100004127957'',
''6222801375081080799'',
''6217856000002240843'',
''6212260200071874388'',
''6222620810014777953'',
''6222020406016165143'',
''6212261211005660818'',
''6222620620029667804'',
''6222020907000081311'',
''6225885924728967'',
''6214854712721108'',
''6212262011032888328'',
''6228480568095964272'',
''6212261306001119205'',
''6217001630045385561'',
''6217002000042530000'',
''6212260200078279953'',
''6226194801003548'',
''6228481269243159779'',
''6236684140002170240'',
''6236680130003780364'',
''6222022304000657795'',
''6212261202043709105'',
''6231810012500657606'',
''6217002030002783867'',
''6217002430009194599'',
''6228482550982836019'',
''6217004150004031301'',
''6222022603004921713'',
''6217230912001950650'',
''6217000780012291770'',
''6226227900298773'',
''6214835328172042'',
''6212261712005738173'',
''6222024402051074783'',
''6222081607002623245'',
''6217003800024629309'',
''6222620710011189063'',
''6217996100090192129'',
''6222032116001260199'',
''6217996100101246898'',
''6217232502000447572'',
''6214832804395155'',
''6228482441764146613'',
''6230520690003714777'',
''6217230614000120166'',
''6228480529085462479'',
''6217003800021929371'',
''6217002660008792858'',
''6212261611002132382'',
''6228481829038565777'',
''6222031709000418148'',
''6217003020103475017'',
''6227004222700058703'',
''6236680190000525998'',
''6212263202004270327'',
''4367421432217116073'',
''6227002746080257511'',
''6212262103005405279'',
''6216606300006260309'',
''6214837672139429'',
''6217230504001806105'',
''6222020406014716699'',
''6228410394525778470'',
''6210812450003284753'',
''6210982600087446587'',
''6212261406002353223'',
''6214830116762773'',
''6214921205082551'',
''6217001860002794972'',
''6217230608000280194'',
''6217852700020303218'',
''6217995950005007577'',
''6222004000113401905'',
''6222023004003495842'',
''6222621030000012971'',
''6228480758718129276'',
''6236683760006350901'',
''6228480218733612673'',
''6228450088102325371'',
''6214854514812683'',
''6217000060032637876'',
''6227000061891757150'',
''6227003525240249686'',
''6222033100021392223'',
''6214835374292132'',
''6228480031295307610'',
''6228481829077580679'',
''6215591702000535066'',
''5522451590032978'',
''6214832919274816'',
''6228484122215299916'',
''6227002920180233157'',
''6212262514000032217'',
''6228481408203837277'',
''6215590603002702798'',
''6228480395788657579'',
''6212261609006508748'',
''6230523170015284678'',
''6212262902004695248'',
''6215584402004242269'',
''6217004470002116247'',
''6228480298848705174'',
''6227002745040271364'',
''6217003810016094313'',
''6212261605003333940'',
''6214830129233051'',
''6212261402015805341'',
''6228483465320041579'',
''6217002290005283444'',
''6217920805917767'',
''6217000460003170404'',
''6212262402019700703'',
''6212260908002009193'',
''6217002500009257529'',
''6222620920007126868'',
''6226620306419987'',
''6230523170015420000'',
''6228481358978330976'',
''6214830192866845'',
''6217003760021938949'',
''6217004640000483696'',
''6214920207286798'',
''6214992430048618'',
''6226730200557533'',
''6212261106001096035'',
''6222081814000603662'',
''6236681460006649129'',
''6236682700003048323'',
''6212261901017341288'',
''6212261407005968306'',
''6216696200004167186'',
''6222080402006109008'',
''6228480084547039119'',
''652270023915900980853'',
''6217986020000024653'',
''6228480388019180271'',
''6217003810058699235'',
''6215593202018212459'',
''6212260707002021764'',
''6212261202034004912'',
''6228480381439157318'',
''6222081402004419127'',
''6217003800021431121'',
''6217001850015243752'',
''6217001670011780000'',
''6228480478674580871'',
''6217003810030809423'',
''6222083301000199337'',
''6222629530003637734'',
''4340624580036091'',
''6222020904005708998'',
''6217567600022993212'',
''6230200700031649'',
''6222033301002802913'',
''6222003602112660836'',
''6228482038815822273'',
''622908503008234368'',
''6228480462892166317'',
''6222082104000595855'',
''6217007180003542245'',
''6214672120001914336'',
''6217003800017238092'',
''6222032107001178994'',
''6222082402003797167'',
''6217003230023745213'',
''6212264402064447810'',
''6217001370024715005'',
''211022197609263000'',
''6228480379403706276'',
''6225880000000000'',
''6222031001006390079'',
''6212264000011850589'',
''6212263602125049775'',
''6230521120009552871'',
''6222033100024092564'',
''612326198508016516'',
''6214831242723812'',
''6217994910139107942'',
''6217231208010447302'',
''6217231208011263815'',
''6212262902014788736'',
''6226090218881486'',
''6222081202007532706'',
''6217003320020075936'',
''6217857000013498256'',
''6217002000058099195'',
''6217000360004683944'',
''6217007110014817120'',
''6217002960103716400'',
''6222021001041629921'',
''6217001340006906070'',
''6214830207743112'',
''6236681540007293926'',
''6222033301007978833'',
''6222084402010033661'',
''320911199004223417'',
''6210812450007737483'',
''6212262902009808887'',
''6222032103002238820'',
''6230520140006568879'',
''6217000150013776841'',
''6226190901023329'',
''6215591714001214187'',
''6217933135218723'',
''6217901400002725261'',
''6228480318299924478'',
''6217906400028529130'',
''6228480089492257277'',
''6222022314005919090'',
''6212261408005671379'',
''6212261906001661732'',
''6212263100027300362'',
''6228480469842916675'',
''6222020200091593133'',
''6217002060002241137'',
''6212264402075034185'',
''6222620250011041659'',
''6217007200078471144'',
''6222082502002930394'',
''6212262013005643730'',
''6217000350009913057'',
''6217003980002505265'',
''6228482449347505676'',
''6217003860026464006'',
''6222022102001714908'',
''6212262902016602950'',
''6212262905000442655'',
''6212262902016602968'',
''6214835776513358'',
''6215581302000469341'',
''6228482299191604079'',
''6214832015876985'',
''6217003760017730532'',
''6222629530000390444'',
''6214680181974187'',
''6217002020030179915'',
''6217922873036314'',
''6222030409000819830'',
''6215593202002206780'',
''6210817200040474239'',
''6214857556077446'',
''6217007200077581927'',
''6226097812597715'',
''6217007200026666209'',
''6228480468918048579'',
''6226192001058015'',
''6212261607013837316'',
''6228450876014840069'',
''6222032703000851043'',
''6214837906577907'',
''6236682870008511490'',
''6228482326172389667'',
''6217995520009767854'',
''6228480768773385275'',
''6214921206995157'',
''6215581115005753307'',
''6217000150014818089'',
''6215581116005152490'',
''6230523170015275874'',
''6222081717001303978'',
''6230521260011497176'',
''6228480340825079916'',
''6217000010118522732'',
''6217003760016107674'',
''6228482478486710276'',
''622848317919289000'',
''6228482920761386611'',
''6222081001017124706'',
''6217000130000517085'',
''6217230411000471784'',
''6222030409002261304'',
''6217858000084394342'',
''6212262502025209373'',
''6217003860001836525'',
''9558801001163076307'',
''6228481728552439973'',
''6216693100001375761'',
''6212261608006187370'',
''6217930462060660'',
''6230523170014530000'',
''6214835191132602'',
''6212264000068833900'',
''6230580000156161858'',
''6228480409358551573'',
''6217001830023901260'',
''6217231614000028491'',
''6230523170014580000'',
''6212263100027009765'',
''6214835221129453'',
''6221504980000246702'',
''6217007200043333296'',
''6214880942605555'',
''6222620310001030490'',
''6227000731430171184'',
''6228480048520463372'',
''6228482058291784474'',
''6222032405002118476'',
''6214920208981108'',
''6212260411008268855'',
''6217000010125967201'',
''6227000351080043276'',
''6221503410001460640'',
''6236681540013337212'',
''6222023500031705540'',
''6217003490000665640'',
''6217007200039952513'',
''6227002090170459061'',
''6212261704009290228'',
''6214850282404869'',
''6227004220810155617'',
''6227004660300148400'',
''6217002220010487078'',
''6214835414777753'',
''6236681300002377251'',
''6217000260010445314'',
''6228480469687945375'',
''6214921600398487'',
''6222081001007048659'',
''6217880800001969999'',
''6222081903000514290'',
''6222032003000543009'',
''6227000190200013961'',
''6217002480003008956'',
''6228480638499782271'',
''6214835793429273'',
''6214923007022587'',
''6212262407003011892'',
''6222001606100262648'',
''6222031203003368278'',
''6222033100016328182'',
''6212261617001286665'',
''6215688000008802404'',
''6236680690001440626'',
''6217856200031608495'',
''6217991650000443116'',
''6215583901000946006'',
''6215592606002115166'',
''6228481729121459476'',
''6217857000075390581'',
''6210812590002029715'',
''6236682390001879133'',
''6210812390005610912'',
''6212262009003260451'',
''6226221700795575'',
''6217007180002126081'',
''6228483471312562010'',
''6214837974924502'',
''6212262201039649902'',
''6228460460017932716'',
''6217922002767342'',
''6222033301009521698'',
''6217000170004847229'',
''6222080200016699129'',
''6217231811000319207'',
''6222020402045163043'',
''6217001490002995229'',
''6226224400289691'',
''6212261716003600798'',
''6210812430019532304'',
''6222081001012665737'',
''6212261001063158544'',
''6222023100081505617'',
''6217004260008765117'',
''6228480170783842314'',
''6216696500001830466'',
''6217994350012880002'',
''6228410430196443117'',
''6230582000083398159'',
''6230582000074535934'',
''6217231811000812060'',
''6217868000004081621'',
''623059125601326709'',
''6210817200014336125'',
''6222021605004058793'',
''6217231604001455041'',
''6217681802233943'',
''6212260407006454208'',
''6212390000002663808'',
''6215695000002463303'',
''6226174800268722'',
''6222021102068326951'',
''6212261603015330434'',
''6228450288066015378'',
''6217003230041819545'',
''6227002349381049321'',
''6013827005014901927'',
''6217003320045864827'',
''6236681470003230492'',
''6215581714003396687'',
''6214855127345391'',
''6222021116014600418'',
''6217003370006008674'',
''6228480455799463076'',
''6212261110001049440'',
''6217001650003353518'',
''4100622518878899'',
''4367420013500892165'',
''4367421215904102013'',
''4367421217384062774'',
''6210810730001082842'',
''6210810730020667417'',
''6210810730030460761'',
''6210814220006694446'',
''6210814220007272528'',
''6212252312000010313'',
''6212253602006215315'',
''6212260302015848757'',
''6212260405000784778'',
''6212260406001239598'',
''6212260409016090139'',
''6212260502000510631'',
''6212260502010986144'',
''6212260511006152173'',
''6212260613000989475'',
''6212260905007066731'',
''6212261001070654485'',
''6212261205004791434'',
''6212261603013046529'',
''6212261610010963127'',
''6212261715008840631'',
''6212261716003040102'',
''6212262008018288150'',
''6212262012004247485'',
''6212262013014039961'',
''6212262102006170189'',
''6212262115002739930'',
''6212262201032337133'',
''6212262314001903445'',
''6212262406004537319'',
''6212262603000018241'',
''6212263500029806474'',
''6212263602015941982'',
''6212263602067700674'',
''6212263602097760482'',
''6212263602110580685'',
''6212264402010303489'',
''6212883012000020307'',
''6214830127319837'',
''6214830165956029'',
''6214830169041232'',
''6214830176991122'',
''6214830178625132'',
''6214830221508079'',
''6214831234075486'',
''6214831297432509'',
''6214832903310675'',
''6214832917696135'',
''6214832918500682'',
''6214835215491588'',
''6214835414974541'',
''6214835418234967'',
''6214835494557521'',
''6214835713021069'',
''6214835923541682'',
''6214837311977163'',
''6214837554193015'',
''6214837555343973'',
''6214837699131177'',
''6214837845941107'',
''6214837878244361'',
''6214837903592586'',
''6214839561213513'',
''6214850230610872'',
''6214850239696591'',
''6214854713022175'',
''6214855713082952'',
''6214855911656102'',
''6214855912060056'',
''6214856551042983'',
''6214857802824351'',
''6214857812496208'',
''6214857910505124'',
''6215581105004209005'',
''6215581507003592994'',
''6215581507003593000'',
''6215581812004573138'',
''6215590603007383552'',
''6215591302002179839'',
''6215592102000836987'',
''6217000500001354284'',
''6217001040004958129'',
''6217001780006873749'',
''6217001820015986569'',
''6217001840006320776'',
''6217001840011361617'',
''6217002170005394161'',
''6217002230001721880'',
''6217002290023074585'',
''6217002300015649953'',
''6217003120008115716'',
''6217003160002570250'',
''6217003200003616908'',
''6217003230033541602''
)
UNION
select CUSTOMER_ID as "Account 账户" , ''2.0'' as "Platform 平台" , CARD_NO as "Bank Card提现银行卡"
from CORE.BPS_CUSTOMER_BANK_VW
where CARD_NO in
(
''6217003760038163903'',
''6217003800012460857'',
''6217003810039901205'',
''6217004180003770468'',
''6217004190001368660'',
''6217004220044988297'',
''6217004220045325226'',
''6217004220045433756'',
''6217004550001885395'',
''6217230705000610543'',
''6217230710000646430'',
''6217231001001466245'',
''6217232605002388197'',
''6217681500624369'',
''6217713001828221'',
''6217770470386560'',
''6217857000067511533'',
''6217903100005583711'',
''6217906000001585339'',
''6222001001107695687'',
''6222003803100211570'',
''6222020705006940195'',
''6222021001101229943'',
''6222021611007043857'',
''6222022201016969539'',
''6222022304006545606'',
''6222022313004162314'',
''6222023100042907092'',
''6222023500031615962'',
''6222031203002061833'',
''6222032014000410784'',
''6222032105001364036'',
''6222080603003491428'',
''6222080808000575160'',
''6222081102007220254'',
''6222081105000617061'',
''6222081106001472357'',
''6222081203001828074'',
''6222081604000257126'',
''6222082105001621517'',
''6222083400004447120'',
''6222083602005684417'',
''6222083602013111155'',
''6222084000008491378'',
''6222600610017881149'',
''6222620250008801172'',
''6222980019825639'',
''6225882134388096'',
''6225884201006973'',
''6226097310229522'',
''6226225600839904'',
''6226622806668261'',
''6226961200166070'',
''6227002661800045361'',
''6227002870810081239'',
''6227002872380275605'',
''6228270146064546471'',
''6228270651234766776'',
''6228270771250971272'',
''6228271631240255179'',
''6228480078209717277'',
''6228480086787586972'',
''6228480089780826676'',
''6228480098481194375'',
''6228480136706060276'',
''6228480218767937376'',
''6228480268860870370'',
''6228480289017131078'',
''6228480318128708779'',
''6228480318240890570'',
''6228480382642604716'',
''6228480431124025419'',
''6228480631851164014'',
''6228480669073290472'',
''6228480688562215774'',
''6228480819448137177'',
''6228481139537015070'',
''6228481198848377777'',
''6228481269225229376'',
''6228481332988301616'',
''6228481619104444175'',
''6228481758353024278'',
''6228481988932848877'',
''6228482028574207378'',
''6228482309196611977'',
''622908373060405417'',
''6230520210020812874'',
''6230520210020993476'',
''6230520460057971172'',
''6230521000000019270'',
''6230522080019735271'',
''6230580000071054501'',
''6230580000088255307'',
''6230580000098109395'',
''6230580000114321990'',
''6230580000117351572'',
''6230580000123743739'',
''6230582000046148030'',
''6230943210000207250'',
''6236682340007176026'',
''6236682830005136311'',
''6236683610001916430'',
''6236683630000400814'',
''6236684160003356473'',
''6236684220001924100'',
''6217991410006575084'',
''6212260302037351160'',
''6236682870012027079'',
''6214837664668393'',
''6222032116001441948'',
''6217003590006259817'',
''6214855711190005'',
''6222620170014643162'',
''6212263500041291143'',
''6212261907007305902'',
''6217905300005420223'',
''6217001870002949856'',
''6217002950105780348'',
''6222033100021677144'',
''6228480608148437478'',
''6217003590006259825'',
''6215593202009515324'',
''6217921408224833'',
''6214680131826263'',
''6228480128455331172'',
''330424199602262017'',
''6228580499014617180'',
''6228480383393380712'',
''62170018930023900000'',
''6217905300005420000'',
''6217001870002940000'',
''6217001370024710000'',
''6216608000004870000'',
''6217003320049640000'',
''6236682940004017444'',
''6230521100014134279'',
''6230520050059670375'',
''6215591904001999446'',
''621700720006344093'',
''622908433047561714'',
''6214837970500066'',
''6214837856820042'',
''6215581813007272769'',
''6228480086792788571'',
''6222620750010138463'',
''6212262109001650560'',
''6217906500035320041'',
''6217997900062415054'',
''6227003811990406803'',
''6227000730340059950'',
''6236680010002198505'',
''6228480068825005678'',
''6212262106000555881'',
''6222629530010001296'',
''6230523470025030677'',
''6228482168964614773'',
''6212264402028319923'',
''6217003390007518984'',
''6217712000198420'',
''6228481028959581976'',
''6217001250010325870'',
''6230520790020308379'',
''6222021108015149586'',
''6215581102007925232'',
''6216606100002638882'',
''6221871000002642009'',
''6217731203389784'',
''6217921601959839'',
''6214920604191864'',
''6214857160026821'',
''6226630204319155'',
''6214855160183987'',
''6217001830033852784'',
''6217256300009023887'',
''6212262502037600460'',
''6212262502036958851'',
''6216690100005294136'',
''6214831008728781'',
''6222030802002499678'',
''6214837970788349'',
''6212261510002301965'',
''6217002120004827992'',
''6228480469624752975'',
''6217903100010305787'',
''6212252006000971967'',
''6214830161890842'',
''6217001140010373956'',
''6217002110003291779'',
''6228482316063756363'',
''6228480156032466765'',
''6228480156024604464'',
''6228481308433929276'',
''6212843191360052354'',
''6212843191360052354'',
''6217858100029509366'',
''6212838105000144741'',
''6226630204922818'',
''6217865000009637255'',
''6228480378257556670'',
''411325198206052912'',
''6217880800010974691'',
''6210812470001673609'',
''6217001830037658435'',
''6217866400004872973'',
''6230521820046461370'',
''6217001830037550483'',
''6217004220050918188'',
''6222620280003284660'',
''6222623550003039729'',
''6226220318302444'',
''6226631702375301'',
''6228430338048575976'',
''6228480819437778379'',
''6228482479617118579'',
''6230520680054044075'',
''6217000270000245302'',
''6228460718021617676'',
''6228480136742388277'',
''6222032003003915477'',
''6228270146069680374'',
''6215582603000997283'',
''6228482409750483175'',
''6217923671249240'',
''6222620720006100777'',
''6217906400019589127'',
''6212261512003918045'',
''6217921802107311'',
''6222034000005908136'',
''6222032015001049927'',
''6222032015000881858'',
''6217001820027547870'',
''6217003030108656792'',
''6217582000045808169'',
''6214837789525312'',
''6216667500002190220'',
''6214857822754638'',
''6215697500014265396'',
''6212261906005911943'',
''6228210399028053075'',
''6217996020049279779'',
''6236683030001081384'',
''6212262408003577080'',
''6212261913006871134'',
''6217000120022515290'',
''6217002920001543546'',
''6222021901007260019'',
''6228480086962717178'',
''6230580000222047685'',
''6236681930009157361'',
''6222030713000813184'',
''6226630204922818'',
''6230522380006783478'',
''6212264402005765742'',
''6222620910030475242'',
''6217710724643374'',
''6212260200166693800'',
''6217930675389328'',
''6228480018948435971'',
''6221871000011063064'',
''6212260200171601681'',
''6222620910030475242'',
''62170072000072100632'',
''6217993680017711971'',
''6228482309027340176'',
''6230520860019898373'',
''6217560500035398291'',
''6214832047383455'',
''6222032102007768906'',
''6217003810042592306'',
''6228481028960031870'',
''6226221700382812'',
''6228480328882618478'',
''6222081001024943833'',
''6217001210075995421'',
''6230520030075894076'',
''6228480038104447370'',
''6217001210027834876'',
''6222620910030475242'',
''6217230903002109891'',
''6214832707995572'',
''421083198804155320'',
''6230523460018133976'',
''6217001340006750635'',
''6228483465805621879'',
''6222623710000816061'',
''6217856100091483682'',
''6226662001298928'',
''6217921771938381'',
''6013821900070837716'',
''6212262201042889784'',
''6228481629554933973'',
''6212262016005410588'',
''6217906400028731520'',
''6228482578099336771'',
''6229538106600344498'',
''6217906300021667426'',
''6217568300000165441'',
''6222620710032143458'',
''6214832022626787'',
''6217566300000165441'',
''6226482578099336771'',
''6227082430090492513'',
''6217858000107144831'',
''6217995910006018189'',
''6217000150025821817'',
''6216910316065637'',
''6217853100025846403'',
''6236683690000165940'',
''6212262317012262543'',
''6228480688350241370'',
''6227001833310286238'',
''6228480683009574016'',
''6217001830036103003'',
''6227002120690165526'',
''622908436229518519'',
''6230520460163926276'',
''6222620530012916574'',
''6216693100005008103'',
''6222022008018717539'',
''6225887521071759'',
''6226221105768748'',
''6212262010029456388'',
''6228480269026512872'',
''6222022102016888622'',
''6228480395881297976'',
''6217002190017067175'',
''6216912702162291'',
''6228270081492688779'',
''6222629530007560411'',
''6230520460203211473'',
''6214838986579797'',
''6217257500003252205'',
''6217003730002317108'',
''6217993900037031980'',
''6217003810057586102'',
''6228413854653466179'',
''6217977151001738909'',
''6217993000318144410'',
''6212262010005203184'',
''6222081607002520839'',
''6228480208318206777'',
''622908376266247715 '',
''6222020200115997401'',
''6228460028001283774'',
''6222021617001990688'',
''4367420012690066721'',
''6222023700018946188'',
''6227003631120333374'',
''6212261402003388698'',
''6227000167970095881'',
''6212263602008661696'',
''6228282130924567215'',
''6222020407002119094'',
''6212261406002431912'',
''6217003230019164759'',
''6217001930019027110'',
''6226903800025504'',
''6212261703003845938'',
''622709108971617'',
''6227001892560238612'',
''6217001830003033639'',
''6227001264290223522'',
''6227001824360057856'',
''6227000167970020012'',
''6222020502002227127'',
''6212261703000393602'',
''6212262010018423205'',
''6222081103002996178'',
''6212262010018427721'',
''6212261702002745204'',
''6217002660006633112'',
''6227002664090149570'',
''6217002230006570316'',
''6222023700038164754'',
''6212262603000187202'',
''6222022603003411294'',
''6212262603001337384'',
''6212262603000187194'',
''6212262603001332708'',
''6217220200002018947'',
''6228482828515763870'',
''6222021313006440263'',
''6228483151320723719'',
''6236681540003019085'',
''6227002463010121821'',
''6212261712003088845'',
''6217002580000323579'',
''6228481258975460778'',
''6212262110000211602'',
''6228482018261639579'',
''6212261602002150060'',
''6217850500010719429'',
''6222023400028183662'',
''6259960046798823'',
''5287080009172565'',
''622848056026797413'',
''6222023400025803171'',
''6227000786120083297'',
''6227000786110098834'',
''6212263301008842337'',
''6214835491176705'',
''6222021302028362738'',
''6228480660513315516'',
''6222021602020442929'',
''6212262513000953232'',
''6212262513000419721'',
''6212262513000975458'',
''6212262513000681015'',
''6212260606001127566'',
''6222020606000847040'',
''6717000130033403790'',
''6227002031010536411'',
''6222023301035053866'',
''6217001070009633104'',
''6217001140017906295'',
''6214671070003166453'',
''6217000210008657503'',
''6222023301040093949'',
''6217001070008617900'',
''6217001070002041354'',
''6217000210007847733'',
''6217001140026763620'',
''6217001070006700575'',
''6217001070000285748'',
''6217001070009631595'',
''6222024200028609578'',
''6217000990004768533'',
''6217001070009635448'',
''6217001070009633567'',
''6228482660635749517'',
''6217000210002050564'',
''6217001070008621902'',
''6212260200116699253'',
''6228480011017746014'',
''4340621022798189'',
''6217855000048930184'',
''6217001070009631785'',
''6217001070006213793'',
''6217001070006685081'',
''6222623310003701178'',
''6217001070003195589'',
''6215581103002839519'',
''6217002830004236479'',
''6228481558538313970'',
''6212261410002465102'',
''6228481552308516516'',
''6227001882840398013'',
''6212261410000289074'',
''6217003520006246928'',
''6217001880000808434'',
''6228481552587532317'',
''6228481552092932317'',
''6222021410003179140'',
''6217002920116145997'',
''6212261911004873144'',
''6215591911000633264'',
''6221215212321563256'',
''621226040202512783'',
''6214832009412052'',
''6227007201541267191'',
''6212262115002712945'',
''6212262112002506403'',
''6217682901289687'',
''6222082102001843720'',
''6217000140023764572'',
''622908127378779412'',
''6217714900950462'',
''622908123008655858'',
''6222020402038022727'',
''6222021502019065436'',
''6214835218997888'',
''6217000010062442515'',
''6217001210031205485'',
''6212264000042160529'',
''6212264000043460373'',
''6212262010026802188'',
''6212262004004764221'',
''6212261716003018488'',
''6222021906005426819'',
''6212262105000532296'',
''6228480838425524074'',
''6222020402032715151'',
''6222023202033001966'',
''6227002871580337280'',
''6228481436698787772'',
''6212261702016757841'',
''6222370125807608'',
''6222020408016990033'',
''6212261713002355037'',
''6217857500009085579'',
''6222340037711800'',
''4563517500024406108'',
''6222021901023421884'',
''6226220115871153'',
''6226900717320176'',
''6212261603000462697'',
''6222083500003419184'',
''6222023500007745918'',
''6212260200058902137'',
''6228480018335163079'',
''6225880159285767'',
''6225880159284398'',
''6227000581380120487'',
''6210810580001928753'',
''6210810580000465724'',
''6222020704009805448'',
''6227000581410029641'',
''6222020704006280843'',
''6228480018609697471'',
''6217856200016144540'',
''6217004280009986637'',
''6212251813001076741'',
''6228480791116706015'',
''6222020710004177477'',
''6228480258879872970'',
''6214835760188977'',
''6222081404001003680'',
''6222021606008662168'',
''5309900017054253'',
''6225882013152688'',
''6222021606010912957'',
''6227002192453558484'',
''6222022703017076610'',
''6222020604004034855'',
''6222021609006306028'',
''6222021814001993396'',
''6222021303001964557'',
''6228480291428959311'',
''6222620910017027388'',
''6222081607000101814'',
''6222081607002260915'',
''6227002200036830724'',
''6222600910074506419'',
''6217995030000934784'',
''6228480058576601072'',
''6222020713003853155'',
''6236682530002796527'',
''6222021706003969830'',
''6217908000001080883'',
''6215581503000395366'',
''6217004260006774061'',
''6227004381010071580'',
''6217004380000781290'',
''6227002476030028552'',
''6222370034901831'',
''6228480405802637778'',
''6222021503001526039'',
''6215580912000049918'',
''4270200017243727'',
''6215581405000294245'',
''6217001840007584586'',
''6215581405000169439'',
''6217002230004037664'',
''6216917902436031'',
''6228480268083550874'',
''6222100102206643'',
''4367420012510402759'',
''4563510100887934457'',
''6212260712001457282'',
''6230943240001661239'',
''6222022104001226610'',
''6227003100160144711'',
''6222022003008560957'',
''6222021611007542312'',
''6222022002006955540'',
''622202200200695540'',
''6227003234120018143'',
''6222022609003239288'',
''6228482920365379517'',
''6222023100044417470'',
''6228480291207277018'',
''6217996900087243946'',
''6222023100014279033'',
''6212261602006673059'',
''6228482301127495513'',
''6212261211001243429'',
''6222021609002998455'',
''6228481831755620819'',
''6222601040002629445'',
''6222802397581036690'',
''6222021309002588816'',
''6228481730647168716'',
''6222080200017477947'',
''6222023100083104310'',
''6222022706003072915'',
''6227004227240019438'',
''6227002548010234937'',
''6227003114130115388'',
''9558821109001104607'',
''6228481388458096474'',
''1912101701002976831'',
''6217003010000279612'',
''6227075770150882'',
''6222081912000885469'',
''6222624390000701867'',
''4340623010027514'',
''6222021912000885469'',
''6225887317400808'',
''6217007200048185683'',
''6215983010200018321'',
''6217003010104006762'',
''6212262111004767904'',
''6217003010104277223'',
''6222080302002811476'',
''6228480778354229677'',
''6222021912000512751'',
''6222081912000504037'',
''6222081912000709040'',
''6222021912004919432'',
''6222021508006041967'',
''6228484178497806372'',
''6217003640006181998'',
''6222022102003101880'',
''6222081607001837614'',
''6222021607010173947'',
''4367422200037259863'',
''6228480928266241274'',
''6222021604001297744'',
''6222021102033688873'',
''6227002006730038062'',
''6214850254262311'',
''6228481841932736511'',
''6212260200127580187'',
''6215983760008810986'',
''6222022105009784369'',
''6222082105001090119'',
''6212261001015518415'',
''6214835121984189'',
''6222022403005480052'',
''6222022010033185916'',
''6227002454810291583'',
''6236681840001721736'',
''6212261408012678763'',
''6222021408018405682'',
''6222021613008210394'',
''6222802349961078297'',
''6222023202012783964'',
''6228481261306894517'',
''6222020409008073077'',
''6222380037539066'',
''6222021914003546125'',
''6227001274570022361'',
''6212261717001429370'',
''6217001210051848180'',
''6222802430161022960'',
''6222021702040763112'',
''6212261718001915996'',
''6222113957593304'',
''6222621030001504992'',
''6212262405004380167'',
''6212262405001555803'',
''6222022405003901773'',
''6228481208142416674'',
''6228481163988289018'',
''6228480329448374374'',
''6228480328705476872'',
''6222520178399982'',
''6222020408016815537'',
''622202048016815537'',
''6227002951240486774'',
''6222021905002954211'',
''6212261206000605966'',
''6212263602072352370'',
''6212260200013319963'',
''6212262402004221616'',
''6222021505001682894'',
''6222021901015877341'',
''6222021906004186257'',
''6222021404001227894'',
''6227003191110027783'',
''6215592006000234822'',
''621700319000530352'',
''6221881600039338857'',
''6222021706017213902'',
''6222021706010117316'',
''6222020503005988871'',
''6222022201011805290'',
''6222022315006807101'',
''6222021102055553807'',
''6227002301081803317'',
''9558803602163650633'',
''6227002942310133057'',
''6222021903003682246'',
''6212250603000307218'',
''6212262012004058304'',
''6222020409012336262'',
''6212261404000550544'',
''6228482038140494178'',
''6212261611001346504'',
''6212261611001446064'',
''6214835102189733'',
''6228480518610915879'',
''6215581103006020710'',
''6227002260020646908'',
''6217856100069044653'',
''6221507970002065926'',
''6215582316003681198'',
''6228480404836035117'',
''6212264402047486448'',
''6227003813850049095'',
''6217996730000148389'',
''6217995030013766462'',
''6228481849051009073'',
''6228481849002682374'',
''6216602700000863731'',
''6236692390000990574'',
''6228480246022168263'',
''6228482131722361319'',
''6228480048527982176'',
''4340620160030835'',
''6222020407000686649'',
''6222080407000152862'',
''6217003620002384465'',
''6228482868722153473'',
''6217903100031655152'',
''6214833781894715'',
''6236682920008938464'',
''6222022608001907938'',
''6217232608000880991'',
''6222021311006825558'',
''6222024000041633229'',
''6222022010028485636'',
''6222004000109703215'',
''6222022010024610021'',
''6227004310550040838'',
''6222022103006837462'',
''6222021901002657334'',
''62220220100284856363'',
''62220220100246100212'',
''6222021817001133046'',
''6222021804003198052'',
''6222024000000999371'',
''6222022020001402243'',
''6222021305003466432'',
''6227002920770602159'',
''6210810940001872080'',
''6222021714005526871'',
''6212261309001546765'',
''6222021309006743193'',
''6228483331016058816'',
''6222022103006881791'',
''6222021908006194586'',
''6222021804003652546'',
''6222022010030170945'',
''4000026501111335289'',
''6228480329292662874'',
''6228480328660218277'',
''6222080407001456775'',
''6214660160102893'',
''6222080407001632300'',
''6228413854647190778'',
''6215582318000497610'',
''6212264402005492982'',
''6228483858529534578'',
''6226194801119385'',
''6217001280001719351'',
''6215581807002548298'',
''6228271057001453474'',
''6222021103022211685'',
''6227001030720035129'',
''6212260909002877308'',
''6222082320000041613'',
''6222022320000797332'',
''6217996840002196334'',
''6215683100018178483'',
''2320632401101024191'',
''6216910104937955'',
''6212261309000319255'',
''6214835210685432'',
''6217993000102006676'',
''6217856101016199379'',
''6228481628835591378'',
''6222802732601000468'',
''6217921774167087'',
''6228480298971541172'',
''6217002200004048805'',
''6236681820007820963'',
''6228480068831694572'',
''6225880159253575'',
''6214837715339853'',
''6217002460016570457'',
''6217002460022480394'',
''6212261706012877149'',
''6212261709001426787'',
''6217002480005317025'',
''6227002481310090694'',
''6222625980000768962'',
''6217856100007313007'',
''6222031001013180448''
)','dau-wa@my-cpg.com;UBG/OD/DAU/WA@my-cpg.com','7d35e28a.my-cpg.com@apac.teams.ms','','( EID-214:MID-132 ) PF2 ASI-11796 恶意投诉勒索涉案出款卡','Please see attached file of ( EID-214:MID-132 ) PF2 ASI-11796 恶意投诉勒索涉案出款卡

Thank you.','wilson','2017-09-29 15:38:11','denice.d','2020-01-21 14:03:40','DAU',null);
INSERT INTO MONI_EXPORT (ID,asid,TICKET_NUMBER,EN_NAME,CH_NAME,STATUS,JDBC,PLATFORM,CRON_EXPRESSION,SCRIPT,MAIL_TO,MAIL_CC,MAIL_BCC,MAIL_SUBJECT,MAIL_CONTENT,CREATE_BY,CREATE_TIME,UPDATE_BY,UPDATE_TIME,REQUESTER,LAST_EXPORT) VALUES
(216,'EID-216:MID-136','ASI-11798','( EID-216:MID-136 ) PF2 ASI-11798 Recharge Deposit Data','( EID-216:MID-136 ) PF2 ASI-11798 充值回調記錄','1','ub8-pf5-core-sec','5.0','0 15 10 ? * *','WITH TASK AS (select CUSTOMER_NAME, APPLICANT, CREATE_TIME, EXECUTOR, UPDATE_TIME, TASK_STATUS,
  REGEXP_SUBSTR(PROCESS_REMARK , ''UB([[:alnum:]]+\.?){5,5}'') TID
from core.BPM_WORKFLOW_TASK
where process_definition = ''CS''
and process_name = ''RECHARGE_DEPOSIT''), DEPOSIT AS (
select RECORD_ID,ARRIVAL_AMOUNT from core.BPS_DEPOSIT_RECORD_VW
where base_info = ''RECHARGE_DEPOSIT''
)
SELECT
TASK.CUSTOMER_NAME 用戶名稱,
TASK.TID 交易號碼,
DEPOSIT.ARRIVAL_AMOUNT 到帳金額,
TASK.APPLICANT 申請人,
TASK.CREATE_TIME 申請時間,
TASK.EXECUTOR 審核人,
TASK.UPDATE_TIME 通過時間,
DECODE(TASK.TASK_STATUS, 0, ''申請中'', 1, ''審核通過'', 2, ''審核駁回'', 3,''部分提現成功'', 4,''提現成功'',5,''提現失敗'' , TASK.TASK_STATUS) 審核狀態
FROM TASK LEFT JOIN DEPOSIT ON TASK.TID = DEPOSIT.RECORD_ID
WHERE TASK.CREATE_TIME > SYSDATE -1
ORDER BY TASK.CREATE_TIME DESC','dau-wa@my-cpg.com','eloise.p@my-cpg.com;pearl.y@my-cpg.com;sean.x@my-cpg.com','','( EID-216:MID-136 ) PF2 ASI-11798 充值回調記錄','Please see attached file of ( EID-216:MID-136 ) PF2 ASI-11798 充值回調記錄

报表将输出近一期所有的充值回调任务，任务与充值的关联使用任务表中的备注栏位中的交易号进行关联

Thank you.','kevin','2017-10-09 15:57:24','denice.d','2019-12-04 18:56:19','DAU',null);
INSERT INTO MONI_EXPORT (ID,asid,TICKET_NUMBER,EN_NAME,CH_NAME,STATUS,JDBC,PLATFORM,CRON_EXPRESSION,SCRIPT,MAIL_TO,MAIL_CC,MAIL_BCC,MAIL_SUBJECT,MAIL_CONTENT,CREATE_BY,CREATE_TIME,UPDATE_BY,UPDATE_TIME,REQUESTER,LAST_EXPORT) VALUES
(265,'EID-265:MID-3','','( EID-265:MID-3 ) PF1 To Check Negative Return Point (auto)','( EID-265:MID-3 ) PF1 檢查是否有負返點產生 (自动)','1','ub8-pf1-sec','1.0','* * * * * ?','SELECT ACCOUNTS, BILLTYPE, BILL_AMOUNT, TO_CHAR( BILL_TIME, ''yyyy-mm-dd hh24:mi:ss'' ) AS BILL_TIME, ORDERNO, SORTID
FROM LOTT_ACCOUNTS_BILL
WHERE BILLTYPE IN (''1100'', ''0001'')
    AND BILL_TIME + 1 > SYSDATE
    AND BILL_AMOUNT < 0','e15d2fd0.my-cpg.com@apac.teams.ms','','','( EID-265:MID-3 ) PF1 檢查是否有負返點產生 (自动)','【 L1 Actions 】
1. Callback alert

【 L2 Actions 】
1. 不需要立即處理，於上班日再做處理
','shanti','2018-12-22 11:25:25','denice.d','2019-12-04 18:57:10','AS',null);
INSERT INTO MONI_EXPORT (ID,asid,TICKET_NUMBER,EN_NAME,CH_NAME,STATUS,JDBC,PLATFORM,CRON_EXPRESSION,SCRIPT,MAIL_TO,MAIL_CC,MAIL_BCC,MAIL_SUBJECT,MAIL_CONTENT,CREATE_BY,CREATE_TIME,UPDATE_BY,UPDATE_TIME,REQUESTER,LAST_EXPORT) VALUES
(269,'EID-269:MID-5','','( EID-269:MID-5 ) PF1 Find Out Undraw Order (auto)','( EID-269:MID-5 ) PF1 查詢應開獎而未開獎訂單 (自动)','1','ub8-pf1-sec','1.0','* * * * * ?','SELECT lb.orderno,lb.accounts,lb.numero,to_char(lb.bet_time,''yyyy-mm-dd hh24:mi:ss'') bet,to_char(lt.win_date,''yyyy-mm-dd hh24:mi:ss'') win,to_char(lr.last_date,''yyyy-mm-dd hh24:mi:ss'') last,lb.device,lb.total_amount,lb.total_num,lb.total_winprice,lb.device ,lb.recall
FROM LOTT_NEW_A3D1.lott_fc3d_order_main lb,LOTT_NEW_A3D1.lott_win_records lr,LOTT_NEW_A3D1.lott_manaul_temp lt,LOTT_NEW_A3D1.lott_current_numero ln
WHERE lb.numero= lr.numero
	AND lt.numero=lr.numero
	AND lr.sortid=lt.sortid
	AND lb.sortid=lr.sortid
	AND lt.sortid=ln.sortid
	AND lb.numero < ln.cnumero
	AND lb.bet_time > SYSDATE-1/24/60*2
	AND lb.status=''002''','e15d2fd0.my-cpg.com@apac.teams.ms','','','( EID-269:MID-5 ) PF1 查詢應開獎而未開獎訂單 (自动)','【 L1 Actions 】
1. Callback alert

【 L2 Actions 】
1. 不需要立即處理，於上班日再做處理','shanti','2018-12-22 17:12:00','mediza.p','2019-12-30 06:22:29','AS',null);
INSERT INTO MONI_EXPORT (ID,asid,TICKET_NUMBER,EN_NAME,CH_NAME,STATUS,JDBC,PLATFORM,CRON_EXPRESSION,SCRIPT,MAIL_TO,MAIL_CC,MAIL_BCC,MAIL_SUBJECT,MAIL_CONTENT,CREATE_BY,CREATE_TIME,UPDATE_BY,UPDATE_TIME,REQUESTER,LAST_EXPORT) VALUES
(270,'EID-270:MID-250','','( EID-270:MID-250 ) PF1 SMS XSS Monitor','( EID-270:MID-250 ) PF1 SMS XSS 偵測','1','ub8-pf1-sec','1.0','* * * * * ?','SELECT  SENDMAN, SMSTITLE, SENDTIME, SMSCONTENT FROM LOTT_NEW_A3D1.l0tt_smsinfo  WHERE
( SENDTIME > SYSDATE - 1/24/5 ) AND
( ( lower(SMSCONTENT) LIKE ''%script%'') or ( lower(SMSCONTENT) LIKE ''%select%'') or ( lower(SMSCONTENT) LIKE ''%print%'') )','e15d2fd0.my-cpg.com@apac.teams.ms','','','( EID-270:MID-250 ) PF1 SMS XSS 偵測','Please see attached file of ( EID-270:MID-250 ) PF1 SMS XSS 偵測

PF1 站內信疑似使用 XSS 語法，請確認

Thank you.','shanti','2018-12-22 17:20:06','kimberlyclaire','2020-05-15 01:58:17','AS',null);
INSERT INTO MONI_EXPORT (ID,asid,TICKET_NUMBER,EN_NAME,CH_NAME,STATUS,JDBC,PLATFORM,CRON_EXPRESSION,SCRIPT,MAIL_TO,MAIL_CC,MAIL_BCC,MAIL_SUBJECT,MAIL_CONTENT,CREATE_BY,CREATE_TIME,UPDATE_BY,UPDATE_TIME,REQUESTER,LAST_EXPORT) VALUES
(274,'EID-274:MID-100','','( EID-274:MID-100 ) PF1 The Number of Repeat Login Customer More Than 10','( EID-274:MID-100 ) PF1 重复登录人数超10个','1','ub8-pf1','1.0','0 0/1 * * * ?','select count(*) from (
select
 ACCOUNTS, count(*), max( LOGIN_IP)
from lott_new_a3d1.accounts_login_logs
where LOGIN_TIME >= trunc(sysdate, ''HH24'')
 and LOGIN_TIME <= trunc(sysdate, ''HH24'') + 40/60/24
 and loginway in (''Web'')
group by accounts
having count(*) > 4
) a
having count(*)>10','e15d2fd0.my-cpg.com@apac.teams.ms','','','( EID-274:MID-100 ) PF1 重复登录人数超10个','【 L1 Actions 】
1.Click callback first and Check is System post to Teams > AS > General
2.Login to pf1 by url and check auto log out problem','shanti','2018-12-22 19:16:45','denice.d','2019-12-04 19:00:43','AS',null);
INSERT INTO MONI_EXPORT (ID,asid,TICKET_NUMBER,EN_NAME,CH_NAME,STATUS,JDBC,PLATFORM,CRON_EXPRESSION,SCRIPT,MAIL_TO,MAIL_CC,MAIL_BCC,MAIL_SUBJECT,MAIL_CONTENT,CREATE_BY,CREATE_TIME,UPDATE_BY,UPDATE_TIME,REQUESTER,LAST_EXPORT) VALUES
(275,'EID-275:MID-93/251','','( EID-275:MID-93/251 ) PF1 WIN NUM Randomness Monitor','( EID-275:MID-93/251 ) PF1 獎號重複性監控','1','data-warehouse','5.0','* * * * * ?','SELECT  BIZ_DATE,GAME_CODE,TIMES_01,NUM_WIN_01,ALERT_01,TIMES_07,SCORE_07,NUM_WIN_07,ALERT_07,TIMES_15,SCORE_15,NUM_WIN_15,ALERT_15,TIMES_30,SCORE_30,NUM_WIN_30,ALERT_30,DW_SOURCE,UPDATE_TIME
FROM DW.DW_A_NUM_DUP WHERE
( DW_SOURCE = ''1'') AND
( BIZ_DATE=TRUNC(SYSDATE-1) ) AND
(( ALERT_01<>0 ) OR ( ALERT_07<>0 ) OR ( ALERT_15<>0 ) OR ( ALERT_30<>0 ))','451fcc1a.my-cpg.com@apac.teams.ms;UBG/OD/DAU/DA@my-cpg.com','','','( EID-275:MID-93/251 ) PF1 獎號重複性監控','Please see attached file of ( EID-275:MID-93/251 ) PF1 獎號重複性監控

PF1，目前有開獎號碼出現重複性問題，請進行確認。

Thank you.','shanti','2018-12-23 17:19:15','riel_john','2021-05-27 09:15:45','DAU',null);
INSERT INTO MONI_EXPORT (ID,asid,TICKET_NUMBER,EN_NAME,CH_NAME,STATUS,JDBC,PLATFORM,CRON_EXPRESSION,SCRIPT,MAIL_TO,MAIL_CC,MAIL_BCC,MAIL_SUBJECT,MAIL_CONTENT,CREATE_BY,CREATE_TIME,UPDATE_BY,UPDATE_TIME,REQUESTER,LAST_EXPORT) VALUES
(276,'EID-276:MID-73','','( EID-276:MID-73 ) PF2 WIN NUM Repeatability Monitor','( EID-276:MID-73 ) PF2 獎號重複性監控','1','data-warehouse','5.0','* * * * * ?','SELECT  BIZ_DATE,GAME_CODE,TIMES_01,NUM_WIN_01,ALERT_01,TIMES_07,SCORE_07,NUM_WIN_07,ALERT_07,TIMES_15,SCORE_15,NUM_WIN_15,ALERT_15,TIMES_30,SCORE_30,NUM_WIN_30,ALERT_30,DW_SOURCE,UPDATE_TIME
FROM DW.DW_A_NUM_DUP WHERE
( DW_SOURCE = ''2'') AND
( BIZ_DATE=TRUNC(SYSDATE-1) ) AND
(( ALERT_01<>0 ) OR ( ALERT_07<>0 ) OR ( ALERT_15<>0 ) OR ( ALERT_30<>0 ))','ba81b2c6.my-cpg.com@apac.teams.ms;e15d2fd0.my-cpg.com@apac.teams.ms;UBG/OD/DAU/DA@my-cpg.com','','','( EID-276:MID-73 ) PF2 獎號重複性監控','Please see attached file of ( EID-276:MID-73 ) PF2 獎號重複性監控

PF2 目前有開獎號碼出現重複性問題，請進行確認。

Thank you.','shanti','2019-01-08 20:16:46','kimberlyclaire','2021-03-15 13:06:37','DAU',null);
INSERT INTO MONI_EXPORT (ID,asid,TICKET_NUMBER,EN_NAME,CH_NAME,STATUS,JDBC,PLATFORM,CRON_EXPRESSION,SCRIPT,MAIL_TO,MAIL_CC,MAIL_BCC,MAIL_SUBJECT,MAIL_CONTENT,CREATE_BY,CREATE_TIME,UPDATE_BY,UPDATE_TIME,REQUESTER,LAST_EXPORT) VALUES
(278,'EID-278:MID-253','','( EID-278:MID-253 ) PF1 WIN NUM Randomness Monitor (auto)','( EID-278:MID-253 ) PF1 獎號隨機性監控 (自动)','1','data-warehouse','5.0','* * * * * ?','SELECT GAME_CODE,BIZ_DATE,DIGIT,ALERT_01,ALERT_03,ALERT_05,ALERT_07,ALERT_30,UPDATE_TIME,DW_SOURCE
FROM DW.DW_A_NUM_RANDOMTEST
WHERE ( DW_SOURCE = ''1'') AND ( BIZ_DATE=TRUNC(SYSDATE-1) ) AND
(( ALERT_01<>0 ) OR ( ALERT_03<>0 ) OR ( ALERT_05<>0 ) OR ( ALERT_07<>0 ) OR ( ALERT_30<>0 ))','451fcc1a.my-cpg.com@apac.teams.ms;UBG/OD/DAU/DA@my-cpg.com','','','( EID-278:MID-253 ) PF1 獎號隨機性監控 (自动)','Please see attached file of ( EID-278:MID-253 ) PF1 獎號隨機性監控 (自动)

Encode the result on google: https://tinyurl.com/y2gobpzg

PF1，目前有開獎號碼出現隨機性問題，請進行確認

Thank you.','shanti','2019-01-10 18:46:21','kimberlyclaire','2021-03-15 13:07:36','DAU',null);
INSERT INTO MONI_EXPORT (ID,asid,TICKET_NUMBER,EN_NAME,CH_NAME,STATUS,JDBC,PLATFORM,CRON_EXPRESSION,SCRIPT,MAIL_TO,MAIL_CC,MAIL_BCC,MAIL_SUBJECT,MAIL_CONTENT,CREATE_BY,CREATE_TIME,UPDATE_BY,UPDATE_TIME,REQUESTER,LAST_EXPORT) VALUES
(279,'EID-279:MID-254','','( EID-279:MID-254 ) PF2 WIN NUM Randomness Monitor (Auto)','( EID-279:MID-254 ) PF2 獎號隨機性監控 (自动)','1','data-warehouse','5.0','* * * * * ?','SELECT GAME_CODE,BIZ_DATE,DIGIT,ALERT_01,ALERT_03,ALERT_05,ALERT_07,ALERT_30,UPDATE_TIME,DW_SOURCE
FROM DW.DW_A_NUM_RANDOMTEST
WHERE ( DW_SOURCE = ''2'') AND ( BIZ_DATE=TRUNC(SYSDATE-1) ) AND
(( ALERT_01<>0 ) OR ( ALERT_03<>0 ) OR ( ALERT_05<>0 ) OR ( ALERT_07<>0 ) OR ( ALERT_30<>0 ))','ba81b2c6.my-cpg.com@apac.teams.ms;UBG/OD/DAU/DA@my-cpg.com','','','( EID-279:MID-254 ) PF2 獎號隨機性監控 (自动)','Please see attached file of ( EID-279:MID-254 ) PF2 獎號隨機性監控 (自动)

Encode the result on google: https://tinyurl.com/y2gobpzg

PF2，目前有開獎號碼出現隨機性問題，請進行確認

Thank you.','shanti','2019-01-10 18:51:55','kimberlyclaire','2021-03-15 13:05:34','DAU',null);
INSERT INTO MONI_EXPORT (ID,asid,TICKET_NUMBER,EN_NAME,CH_NAME,STATUS,JDBC,PLATFORM,CRON_EXPRESSION,SCRIPT,MAIL_TO,MAIL_CC,MAIL_BCC,MAIL_SUBJECT,MAIL_CONTENT,CREATE_BY,CREATE_TIME,UPDATE_BY,UPDATE_TIME,REQUESTER,LAST_EXPORT) VALUES
(282,'EID-282:MID-258','','( EID-282:MID-258 ) PF2 SMS XSS Monitor (auto)','( EID-282:MID-258 ) PF2 SMS XSS 偵測 (自动)','1','ub8-pf5-core-sec','5.0','* * * * * ?','SELECT  M.SENDRD_NAME,M.SM_TITLE, M.SM_CONTENT,M.PUBLISH_TIME  FROM CORE.PMS_SHORT_MSG M
LEFT JOIN CORE.PMS_SHORT_MSG_RECIPIENT MR ON M.MSG_ID = MR.MSG_ID WHERE
( M.PUBLISH_TIME> SYSDATE - 1/24/5 ) AND
( ( lower(M.SM_CONTENT) LIKE ''%script%'') or ( lower(M.SM_CONTENT) LIKE ''%select%'') or ( lower(M.SM_CONTENT) LIKE ''%print%'') )','e15d2fd0.my-cpg.com@apac.teams.ms','','','( EID-282:MID-258 ) PF2 SMS XSS 偵測 (自动)','Please see attached file of ( EID-282:MID-258 ) PF2 SMS XSS 偵測 (自动)

PF2 站內信疑似使用 XSS 語法，請確認

Thank you.','shanti','2019-02-12 15:34:57','denice.d','2019-12-04 19:03:24','AS',null);
INSERT INTO MONI_EXPORT (ID,asid,TICKET_NUMBER,EN_NAME,CH_NAME,STATUS,JDBC,PLATFORM,CRON_EXPRESSION,SCRIPT,MAIL_TO,MAIL_CC,MAIL_BCC,MAIL_SUBJECT,MAIL_CONTENT,CREATE_BY,CREATE_TIME,UPDATE_BY,UPDATE_TIME,REQUESTER,LAST_EXPORT) VALUES
(293,'EID-293:MID-270','ASI-14236','( EID-293:MID-270 ) PF1 ASI-14236 Monitoring By Numero Profit','( EID-293:MID-270 ) PF1 ASI-14236 期號盈利率監控 ','1','ub8-pf1','1.0','* * * * * ?','WITH DRAW AS (
SELECT LGS.PARAM_ONE "GAME_CODE" ,LMT.SORTID,LMT.NUMERO ,LMT.WIN_DATE,(LMT.WIN_DATE - LPA.PARAMVALUES/24/60/60) "LOCKTIME",LMT.WIN_NO
FROM LOTT_NEW_A3D1.LOTT_MANAUL_TEMP LMT
INNER JOIN LOTT_NEW_A3D1.LOTT_GROUP_SERIES LGS on LMT.SORTID = LGS.GROUP_VALUE
INNER JOIN
 (SELECT replace( GROUPNAMES,''_LotteryParameterSetting'','''') AS GAME_CODE,PARAMVALUES FROM LOTT_NEW_A3D1.lott_para_all WHERE PARAMNAMES= ''LockingTime'') LPA ON LPA.GAME_CODE = LGS.PARAM_ONE
WHERE LMT.WIN_DATE > ( SYSDATE - 1/24/10) AND  LMT.STATE = ''1''
),BET AS (
SELECT SORTID,NUMERO,COUNT(*) "CNT_BET" , SUM(TOTAL_AMOUNT) "SUM_BET"
FROM LOTT_NEW_A3D1.LOTT_FC3D_ORDER_MAIN
WHERE STATUS IN (''004'',''005'')
GROUP BY SORTID,NUMERO
),WIN AS (
SELECT SORTID,NUMERO,COUNT(*) "CNT_WIN",SUM(TOTAL_WIN_AMOUNT) "SUM_WIN"
FROM LOTT_NEW_A3D1.LOTT_WIN_RECORDS
GROUP BY SORTID,NUMERO
)
SELECT SYSDATE "日期", DRAW.GAME_CODE "彩种",DRAW.NUMERO "期号",DRAW.WIN_DATE "开奖时间",DRAW.LOCKTIME "进入锁定期时间",
DRAW.WIN_NO "开奖号码",BET.CNT_BET "投注人数",WIN.CNT_WIN "中奖人数", BET.SUM_BET "投注额", WIN.SUM_WIN "中奖额",
ROUND((WIN.SUM_WIN / BET.SUM_BET),2) "盈利率"
FROM DRAW
INNER JOIN BET ON BET.SORTID = DRAW.SORTID AND BET.NUMERO = DRAW.NUMERO
INNER JOIN WIN ON WIN.SORTID = BET.SORTID AND WIN.NUMERO = BET.NUMERO
WHERE ( ( WIN.SUM_WIN > 100000 ) AND (WIN.SUM_WIN / BET.SUM_BET) > 20 )  OR  (WIN.SUM_WIN - BET.SUM_BET > 200000)','ryan.z@my-cpg.com;dau-wa@my-cpg.com;jarry.z@my-cpg.com;4ffc1532.my-cpg.com@apac.teams.ms','','','( EID-293:MID-270 ) PF1 ASI-14236 期號盈利率監控 ','Please see attached file of ( EID-293:MID-270 ) PF1 ASI-14236 期號盈利率監控

Thank you.','shanti','2019-03-19 12:14:55','denice.d','2019-12-04 19:12:25','DAU',null);
INSERT INTO MONI_EXPORT (ID,asid,TICKET_NUMBER,EN_NAME,CH_NAME,STATUS,JDBC,PLATFORM,CRON_EXPRESSION,SCRIPT,MAIL_TO,MAIL_CC,MAIL_BCC,MAIL_SUBJECT,MAIL_CONTENT,CREATE_BY,CREATE_TIME,UPDATE_BY,UPDATE_TIME,REQUESTER,LAST_EXPORT) VALUES
(301,'EID-301:MID-275','AS Task','( EID-301:MID-275 ) PF1 3RD party accounts balance error','( EID-301:MID-275 ) PF1 老虎機遊戲帳戶餘額異常','1','ub8-pf1-sec','1.0','* * * * * ?','SELECT ACCOUNTS,TGI_ID,AMOUNTS,UPDATE_TIME,THIRD_PARTY_ACCOUNT FROM LOTT_NEW_A3D1.LOTT_3RD_ACCOUNTS WHERE
ACCOUNTS IN ( SELECT ACCOUNTS FROM LOTT_NEW_A3D1.LOTT_3RD_ACCOUNTS WHERE AMOUNTS > 0 GROUP BY ACCOUNTS HAVING COUNT(*) > 1 ) AND
AMOUNTS > 0
ORDER BY ACCOUNTS','e15d2fd0.my-cpg.com@apac.teams.ms','','','( EID-301:MID-275 ) PF1 老虎機遊戲帳戶餘額異常','Please see attached file of ( EID-301:MID-275 ) PF1 老虎機遊戲帳戶餘額異常
Thank you.','shanti','2019-04-11 16:13:38','camelle.d','2019-12-04 20:50:34','AS',null);
INSERT INTO MONI_EXPORT (ID,asid,TICKET_NUMBER,EN_NAME,CH_NAME,STATUS,JDBC,PLATFORM,CRON_EXPRESSION,SCRIPT,MAIL_TO,MAIL_CC,MAIL_BCC,MAIL_SUBJECT,MAIL_CONTENT,CREATE_BY,CREATE_TIME,UPDATE_BY,UPDATE_TIME,REQUESTER,LAST_EXPORT) VALUES
(304,'EID-304:MID-81','ASI-10613','( EID-304:MID-81 ) PF1 ASI-10613 Lottery Loss','( EID-304:MID-81 ) PF1 ASI-10613 彩票损失','1','ub8-pf1-sec','1.0','* */1 * * * ?','with aa as (
 select B.sortid , sum( A.bill_amount )*-1 profit
 from LOTT_NEW_A3D1.lott_accounts_bill A
 join LOTT_NEW_A3D1.lott_fc3d_order_main B on A.orderno = B.orderno
  and B.status in ( ''004'' , ''005'' , ''020'' )
  and trunc(B.into_time) = trunc( sysdate )
 group by B.sortid
)
select
         B.remark as 彩种, b.PARAM_ONE, aa.profit as 利润
       from aa
       left join LOTT_NEW_A3D1.lott_group_series B on B.GROUP_TYPE = ''1''
        and aa.sortid = B.group_value
where aa.profit < -200000
order by 3','4ffc1532.my-cpg.com@apac.teams.ms','','','( EID-304:MID-81 ) PF1 ASI-10613 彩票損失','Please see attached file of ( EID-304:MID-81 ) PF1 ASI-10613 彩票损失
Thank you.','kimberlyclaire','2019-04-19 21:16:25','camelle.d','2019-12-13 16:16:26','DAU',null);
INSERT INTO MONI_EXPORT (ID,asid,TICKET_NUMBER,EN_NAME,CH_NAME,STATUS,JDBC,PLATFORM,CRON_EXPRESSION,SCRIPT,MAIL_TO,MAIL_CC,MAIL_BCC,MAIL_SUBJECT,MAIL_CONTENT,CREATE_BY,CREATE_TIME,UPDATE_BY,UPDATE_TIME,REQUESTER,LAST_EXPORT) VALUES
(305,'EID-305:MID-50','ASI-10613','( EID-305:MID-50 ) PF1 Lottery Profit Monitor','( EID-305:MID-50 ) PF1 彩票盈利监控','1','ub8-pf1-sec','1.0','0 3 * * * ?','with aa as (
 select  sum( A.bill_amount )*-1 profit
 from LOTT_NEW_A3D1.lott_accounts_bill A
 join LOTT_NEW_A3D1.lott_fc3d_order_main B on A.orderno = B.orderno
  and B.status in ( ''004'' , ''005'' , ''020'' )
  and trunc(B.into_time) = trunc( sysdate )
)
select * from LOTT_NEW_A3D1.aa
where profit < -200000','4ffc1532.my-cpg.com@apac.teams.ms','','','( EID-305:MID-50 ) PF1 Profit Loss','Please see attached file of ( EID-305:MID-50 ) PF1 彩票盈利监控
Thank you.','riel_john','2019-04-20 14:53:49','camelle.d','2019-12-13 16:16:40','DAU',null);
INSERT INTO MONI_EXPORT (ID,asid,TICKET_NUMBER,EN_NAME,CH_NAME,STATUS,JDBC,PLATFORM,CRON_EXPRESSION,SCRIPT,MAIL_TO,MAIL_CC,MAIL_BCC,MAIL_SUBJECT,MAIL_CONTENT,CREATE_BY,CREATE_TIME,UPDATE_BY,UPDATE_TIME,REQUESTER,LAST_EXPORT) VALUES
(307,'EID-307:MID-53','ASI-10613','( EID-307:MID-53 ) PF2 Lottery Profit Monitor','( EID-307:MID-53 ) PF2 彩票盈利监控','1','ub8-pf5-ods','5.0','20 3 * * * ?','WITH AA AS (
  SELECT
    B.GAME_CODE GAME_CODE, C.ORDER_NUM ORDER_NO, D.REMARK GAME_NAME, B.NUMERO
  FROM CORE.LGS_ORDER_DETAIL B
  LEFT JOIN CORE.LGS_ORDER_MASTER C ON C.ORDER_MASTER_ID = B.ORDER_MASTER_ID
  LEFT JOIN CORE.LGS_GAME D ON D.CODE = B.GAME_CODE
  WHERE B.STATUS IN ( 4,  5 ) AND  TRUNC(B.DRAW_TIME) = TRUNC( SYSDATE - 1/24 )
)
SELECT SUM(平台利润)
  FROM(SELECT AA.GAME_NAME 彩种, SUM(A.AMOUNT)*-1 平台利润
         FROM CORE.ACS_TRANSACTION A
         JOIN AA ON A.ORDER_NO = AA.ORDER_NO
          AND AA.NUMERO = A.NUMERO
         GROUP BY AA.GAME_NAME
         ORDER BY 平台利润 DESC)
 HAVING SUM(平台利润) < -200000','4ffc1532.my-cpg.com@apac.teams.ms','','','( EID-307:MID-53 ) PF2_profit_monitor','Please see attached file of ( EID-307:MID-53 ) PF2 彩票盈利监控
Thank you.','camelle.d','2019-04-21 07:42:01','camelle.d','2019-12-04 20:44:40','DAU',null);
INSERT INTO MONI_EXPORT (ID,asid,TICKET_NUMBER,EN_NAME,CH_NAME,STATUS,JDBC,PLATFORM,CRON_EXPRESSION,SCRIPT,MAIL_TO,MAIL_CC,MAIL_BCC,MAIL_SUBJECT,MAIL_CONTENT,CREATE_BY,CREATE_TIME,UPDATE_BY,UPDATE_TIME,REQUESTER,LAST_EXPORT) VALUES
(312,'EID-312:MID-279','ASI-14536','( EID-312:MID-279 ) PF1 ASI-14536 All platform IPs been Monitored have logged in','( EID-312:MID-279 ) PF1 ASI-14536 全平台用户IP异常登陆预警提示','1','ub8-pf1-sec','1.0','0 0 0 * * ?','select ACCOUNTS,LOGIN_IP,LOGINWAY,LOGIN_TIME from LOTT_NEW_A3D1.ACCOUNTS_LOGIN_LOGS where LOGIN_IP IN (''112.116.183.149'',''112.116.160.76'',''116.53.174.213'',''60.160.104.205'',''117.136.80.100'',''222.221.54.143'',''116.53.174.129'',''39.128.58.244'',''183.224.98.22'') AND LOGIN_TIME > sysdate-5/60/24','UBG/OD/SRV/ACS@my-cpg.com;bad21c36.my-cpg.com@apac.teams.ms;','tweety.h@my-cpg.com','','( EID-312:MID-279 ) PF1 ASI-14536 全平台用户IP异常登陆预警提示','Please see attached file of ( EID-312:MID-279 ) PF1 ASI-14536 全平台用户IP异常登陆预警提示

PF1 被監控的IPs登入平台

Thank you.','raphael','2019-07-04 12:01:06','lance','2020-12-18 10:46:24','SRV',null);
INSERT INTO MONI_EXPORT (ID,asid,TICKET_NUMBER,EN_NAME,CH_NAME,STATUS,JDBC,PLATFORM,CRON_EXPRESSION,SCRIPT,MAIL_TO,MAIL_CC,MAIL_BCC,MAIL_SUBJECT,MAIL_CONTENT,CREATE_BY,CREATE_TIME,UPDATE_BY,UPDATE_TIME,REQUESTER,LAST_EXPORT) VALUES
(313,'EID-313:MID-280','ASI-14536','( EID-313:MID-280 ) PF2 ASI-14536 All platform IPs been Monitored have logged in','( EID-313:MID-280 ) PF2 ASI-14536 全平台用户IP异常登陆预警提示','1','ub8-pf5-core-sec','5.0','0 0 0 * * ?','select aa.CUSTOMER_NAME,aa.LOGIN_IP,aa.DEVICE_USER_AGENT,aa.LOGIN_TIME from core.US_CUSTOMER_LOGIN_LOG aa JOIN (select MAX(LOGIN_TIME) AS LOGIN_TIME,CUSTOMER_NAME from core.US_CUSTOMER_LOGIN_LOG where LOGIN_IP IN (''112.116.183.149'',''112.116.160.76'',''116.53.174.213'',''60.160.104.205'',''117.136.80.100'',''222.221.54.143'',''116.53.174.129'',''39.128.58.244'',''183.224.98.22'') AND LOGIN_TIME > sysdate-5/60/24 group by CUSTOMER_NAME) bb on aa.LOGIN_TIME = bb.LOGIN_TIME AND aa.CUSTOMER_NAME = bb.CUSTOMER_NAME','UBG/OD/SRV/ACS@my-cpg.com;c476abfd.my-cpg.com@apac.teams.ms;','tweety.h@my-cpg.com','','( EID-313:MID-280 ) PF2 ASI-14536 全平台用户IP异常登陆预警提示','Please see attached file of ( EID-313:MID-280 ) PF2 ASI-14536 全平台用户IP异常登陆预警提示

PF2 被監控的IPs登入平台

Thank you.','raphael','2019-07-04 16:42:52','lance','2020-12-18 10:47:01','SRV',null);
INSERT INTO MONI_EXPORT (ID,asid,TICKET_NUMBER,EN_NAME,CH_NAME,STATUS,JDBC,PLATFORM,CRON_EXPRESSION,SCRIPT,MAIL_TO,MAIL_CC,MAIL_BCC,MAIL_SUBJECT,MAIL_CONTENT,CREATE_BY,CREATE_TIME,UPDATE_BY,UPDATE_TIME,REQUESTER,LAST_EXPORT) VALUES
(314,'EID-314:MID-286','ASI-14793','( EID-314:MID-286 ) PF1 ASI-14793 Deposit Duplicate Number','( EID-314:MID-286 ) PF1 ASI-14793 充值重複單號','1','ub8-pf1-sec','1.0','* * * * * ?','select count(PROVIDER_ORDER_NUM),z.ACCOUNTS
from LOTT_NEW_A3D1.LOTT_BANK_DEPOSIT_ARRIVALS_VW y  left join LOTT_NEW_A3D1.LOTT_VW_CHARFE_REC  z on y.PROVIDER_ORDER_NUM = z.TRANSID
where y.bank_id in (''1046'',''1047'') and y.UPDATE_TIME > sysdate -3/24/60
group by y.PROVIDER_ORDER_NUM,z.ACCOUNTS having count(PROVIDER_ORDER_NUM) > 1','bad21c36.my-cpg.com@apac.teams.ms','','','( EID-314:MID-286 ) PF1 ASI-14793 充值重複單號','Please see attached file of ( EID-314:MID-286 ) PF1 ASI-14793 充值重複單號

Thank you.
','lance','2019-08-28 12:31:30','camelle.d','2019-12-04 19:36:25','SRV',null);
INSERT INTO MONI_EXPORT (ID,asid,TICKET_NUMBER,EN_NAME,CH_NAME,STATUS,JDBC,PLATFORM,CRON_EXPRESSION,SCRIPT,MAIL_TO,MAIL_CC,MAIL_BCC,MAIL_SUBJECT,MAIL_CONTENT,CREATE_BY,CREATE_TIME,UPDATE_BY,UPDATE_TIME,REQUESTER,LAST_EXPORT) VALUES
(315,'EID-315:MID-285','ASI-14793','( EID-315:MID-285 ) PF2 ASI-14793 Deposit Duplicate Number','( EID-315:MID-285 ) PF2 ASI-14793 充值重複單號','1','ub8-pf5-core-sec','5.0','* * * * * ?','select CUSTOMER_NAME, DP_TRANSACTION_ID, count(DP_TRANSACTION_ID)
from CORE.BPS_DEPOSIT_RECORD_VW
where  REQUEST_TIME > sysdate-3/24/60
group by CUSTOMER_NAME, DP_TRANSACTION_ID
having count(*) > 1','bad21c36.my-cpg.com@apac.teams.ms','','','( EID-315:MID-285 ) PF2 ASI-14793 充值重複單號','Please see attached file of ( EID-315:MID-285 ) PF2 ASI-14793 充值重複單號

Thank you.
','garys','2019-08-28 13:57:44','jason','2019-12-05 15:04:03','SRV',null);
INSERT INTO MONI_EXPORT (ID,asid,TICKET_NUMBER,EN_NAME,CH_NAME,STATUS,JDBC,PLATFORM,CRON_EXPRESSION,SCRIPT,MAIL_TO,MAIL_CC,MAIL_BCC,MAIL_SUBJECT,MAIL_CONTENT,CREATE_BY,CREATE_TIME,UPDATE_BY,UPDATE_TIME,REQUESTER,LAST_EXPORT) VALUES
(318,'EID-318:MID-288','ASI-14785','( EID-318:MID-288 ) PF1 Each numero with relative account wins more than limit','( EID-318:MID-288 ) PF1 各期期號關聯用戶中獎超過限制','1','ub8-pf1','1.0','0 0/1 * * * ?','WITH LIST AS (
select tempt2.*, info.QQNO, info.EMAIL, info.CARD_NAME,bank.BANKCARDNO from (
select tempt.NUMERO, tempt.SORTID, tempt.REMARK, LIST2.ACCOUNTS, NVL(SUM(LIST2.TOTAL_WINPRICE),0) WIN from (
select * from (
SELECT NUMERO, SORTID, S.REMARK, NVL(SUM(TOTAL_WINPRICE),0) WIN FROM LOTT_NEW_A3D1.LOTT_FC3D_ORDER_MAIN test
join (select * from LOTT_NEW_A3D1.LOTT_GROUP_SERIES where GROUP_TYPE=1) S on test.SORTID=S.GROUP_VALUE
WHERE INTO_TIME > SYSDATE -9/24/60
AND REMARK IN (''福彩3D'',''体彩P3/P5'')
GROUP BY NUMERO, SORTID, S.REMARK
order by NUMERO )
where WIN > 300000
UNION
select * from (
SELECT NUMERO, SORTID, S.REMARK, NVL(SUM(TOTAL_WINPRICE),0) WIN FROM LOTT_NEW_A3D1.LOTT_FC3D_ORDER_MAIN test
join (select * from LOTT_NEW_A3D1.LOTT_GROUP_SERIES where GROUP_TYPE=1) S on test.SORTID=S.GROUP_VALUE
WHERE INTO_TIME > SYSDATE -9/24/60
AND REMARK NOT IN (''福彩3D'',''体彩P3/P5'')
GROUP BY NUMERO, SORTID, S.REMARK
order by NUMERO )
where WIN > 500000 ) tempt, LOTT_NEW_A3D1.LOTT_FC3D_ORDER_MAIN LIST2
where tempt.NUMERO=LIST2.NUMERO
and tempt.SORTID=LIST2.SORTID
and TOTAL_WINPRICE > 0
group by tempt.NUMERO, tempt.SORTID, tempt.REMARK, LIST2.ACCOUNTS) tempt2
left join LOTT_NEW_A3D1.LOTT_VW_MEMBER_INFO info on tempt2.ACCOUNTS=info.ACCOUNTS
left join LOTT_NEW_A3D1.LOTT_VW_MEMBER_BANK bank on tempt2.ACCOUNTS=bank.ACCOUNTS
),
QQ as (
select * from (
SELECT QQNO, LISTAGG(ACCOUNTS, '','') WITHIN GROUP (ORDER BY ACCOUNTS) QQLIST FROM LOTT_NEW_A3D1.LOTT_VW_MEMBER_INFO
where QQNO is not null
GROUP BY QQNO)
where (LENGTH(QQLIST)-LENGTH(REPLACE(QQLIST,'','',''''))) > 0),
MAIL as (
select * from (
SELECT EMAIL, LISTAGG(ACCOUNTS, '','') WITHIN GROUP (ORDER BY ACCOUNTS) MAILLIST FROM LOTT_NEW_A3D1.LOTT_VW_MEMBER_INFO
where EMAIL is not null
GROUP BY EMAIL)
where (LENGTH(MAILLIST)-LENGTH(REPLACE(MAILLIST,'','',''''))) > 0),
CNAME as (
select * from (
SELECT CARD_NAME, LISTAGG(ACCOUNTS, '','') WITHIN GROUP (ORDER BY ACCOUNTS) NAMELIST FROM LOTT_NEW_A3D1.LOTT_VW_MEMBER_INFO
where CARD_NAME is not null
GROUP BY CARD_NAME)
where (LENGTH(NAMELIST)-LENGTH(REPLACE(NAMELIST,'','',''''))) > 0),
BCARD as (
select * from (
SELECT t.BANKCARDNO, LISTAGG(t.ACCOUNTS, '','') WITHIN GROUP (ORDER BY t.ACCOUNTS) CARDLIST FROM
(select distinct s.ACCOUNTS,s.BANKCARDNO from LOTT_NEW_A3D1.LOTT_VW_MEMBER_BANK s) t
where t.BANKCARDNO is not null
GROUP BY t.BANKCARDNO)
where (LENGTH(CARDLIST)-LENGTH(REPLACE(CARDLIST,'','',''''))) > 0)

select LIST.NUMERO, LIST.REMARK, LIST.ACCOUNTS, LIST.WIN, QQLIST, MAILLIST, NAMELIST, LISTAGG(CARDLIST, '','') WITHIN GROUP (ORDER BY CARDLIST) BANKCARDLIST from LIST
left join QQ on LIST.QQNO=QQ.QQNO
left join MAIL on LIST.EMAIL=MAIL.EMAIL
left join CNAME on LIST.CARD_NAME=CNAME.CARD_NAME
left join BCARD on LIST.BANKCARDNO=BCARD.BANKCARDNO
group by LIST.NUMERO, LIST.REMARK, LIST.ACCOUNTS, LIST.WIN, QQLIST, MAILLIST, NAMELIST

order by LIST.NUMERO, LIST.REMARK, WIN desc','dau-wa@my-cpg.com;','jeffrey@my-cpg.com;mario.m@my-cpg.com;penny.w@my-cpg.com;jarry.z@my-cpg.com;tweety.h@my-cpg.com;darren.t@my-cpg.com;yiyi.l@my-cpg.com;beck.k@my-cpg.com;','','( EID-318:MID-288 ) ASI-14785_PF1關聯用戶中獎超過限制','Please see attached file of ( EID-318:MID-288 ) ASI-14785_PF1關聯用戶中獎超過限制

Thank you.','raphael','2019-09-24 14:51:54','raphael','2020-10-06 12:29:17','DAU',null);
INSERT INTO MONI_EXPORT (ID,asid,TICKET_NUMBER,EN_NAME,CH_NAME,STATUS,JDBC,PLATFORM,CRON_EXPRESSION,SCRIPT,MAIL_TO,MAIL_CC,MAIL_BCC,MAIL_SUBJECT,MAIL_CONTENT,CREATE_BY,CREATE_TIME,UPDATE_BY,UPDATE_TIME,REQUESTER,LAST_EXPORT) VALUES
(323,'EID-323:MID-291','ASI-15105','( EID-323:MID-291 ) PF1 ASI-15105 Super-jackpot Winner','( EID-323:MID-291 ) PF1 ASI-15105 中超级大奖名單','1','ub8-pf1-sec','1.0','* * * * * ?','select aa.ACCOUNTS 会员账号,bb.REALNAME 会员昵称,aa.AMOUNTS 中奖金额,aa.TRANS_TIME 中奖时间
from lott_new_a3d1.LOTT_JACKPOT_RECORD aa
left join lott_new_a3d1.LOTT_VW_MEMBER_INFO bb on aa.ACCOUNTS = bb.ACCOUNTS
where aa.TRANS_TYPE = ''02''
and aa.jackpot = ''super-jackpot''
and aa.trans_time > sysdate -2/24
order by aa.TRANS_TIME desc','UBG/OD/OP1@my-cpg.com;srvduty@my-cpg.com;lance.s@my-cpg.com','jarry.z@my-cpg.com','','( EID-323:MID-291 ) PF1 ASI-15105 中超级大奖名單','Please see attached file of ( EID-323:MID-291 ) PF1 ASI-15105 中超级大奖名單

Thank you.
','lance','2019-10-25 18:09:33','denice.d','2021-07-10 23:14:02','OP',null);
INSERT INTO MONI_EXPORT (ID,asid,TICKET_NUMBER,EN_NAME,CH_NAME,STATUS,JDBC,PLATFORM,CRON_EXPRESSION,SCRIPT,MAIL_TO,MAIL_CC,MAIL_BCC,MAIL_SUBJECT,MAIL_CONTENT,CREATE_BY,CREATE_TIME,UPDATE_BY,UPDATE_TIME,REQUESTER,LAST_EXPORT) VALUES
(324,'EID-324:MID-292','ASI-15105','( EID-324:MID-292 ) PF2 ASI-15105 Super-jackpot Winner','( EID-324:MID-292 ) PF2 ASI-15105 中超级大奖名單','1','ub8-pf5-ods','5.0','* * * * * ?','select cc.CUSTOMER_NAME 会员账号, bb.NICKNAME 会员昵称, aa.AMT 中奖金额, aa.AMT_TIME 中奖时间,
(CASE aa.BILL_TYPE
    WHEN 2043 THEN ''彩票''
    WHEN 2071 THEN ''老虎機''
END)類型
from ODS.ODS_ACCOUNT_BILL aa
left join core.US_CUSTOMER_PROFILE_VW bb on aa.CUSTOMER_ID = bb.CUSTOMER_ID
left join core.US_CUSTOMER_VW cc on aa.CUSTOMER_ID = cc.CUSTOMER_ID
where aa.BILL_TYPE = ''2043'' and aa.CREATE_TIME > sysdate -2/24
OR aa.BILL_TYPE = ''2071'' and AMT > 10000  and aa.CREATE_TIME > sysdate -2/24','UBG/OD/OP1@my-cpg.com;srvduty@my-cpg.com','jarry.z@my-cpg.com','','( EID-324:MID-292 ) PF2 ASI-15105 中超级大奖名單','Please see attached file of ( EID-324:MID-292 ) PF2 ASI-15105 中超级大奖名單
Thank you.
','lance','2019-10-25 18:46:49','denice.d','2021-07-10 23:14:37','OP',null);
INSERT INTO MONI_EXPORT (ID,asid,TICKET_NUMBER,EN_NAME,CH_NAME,STATUS,JDBC,PLATFORM,CRON_EXPRESSION,SCRIPT,MAIL_TO,MAIL_CC,MAIL_BCC,MAIL_SUBJECT,MAIL_CONTENT,CREATE_BY,CREATE_TIME,UPDATE_BY,UPDATE_TIME,REQUESTER,LAST_EXPORT) VALUES
(325,'EID-325:MID-153','ASI-15214','( EID-325:MID-153 ) PF1 ASI-15214 Platform Loss Data(WA Tools)','( EID-325:MID-153 ) PF1 ASI-15214 平台亏损(WA Tools)','1','ub8-pf1-sec','1.0','* * * * * ?','select GAME_CODE 游戏彩种,
ACCOUNTS 中奖帐号,
ORDERNO 中奖订单号,
NUMERO 中奖期号,
SUM_BET_ACTUAL 投注金额,
SUM_WIN_ACTUAL 中奖总额,
SUM_WIN_ACTUAL-SUM_BET_ACTUAL  平台损失,
EXPECTED_TIME 表定开奖时间,
INTO_TIME 实际开奖时间,
BET_TIME 投注时间,
WIN_NUMBER 开奖号码
from LOTT_NEW_A3D1.RPT_R_ALERT_ORDER
WHERE INTO_TIME > sysdate -1/24
and ALERT_TYPE = ''GAME''
order by into_time desc','4ffc1532.my-cpg.com@apac.teams.ms','lance.s@my-cpg.com','','( EID-325:MID-153 ) PF1 ASI-15214 平台亏损(WA Tools)','Please see attached file of ( EID-325:MID-153 ) PF1 ASI-15214 平台亏损(WA Tools) Thank you.
','lance','2019-11-25 14:11:41','kimberlyclaire','2019-12-05 14:41:33','DAU',null);
INSERT INTO MONI_EXPORT (ID,asid,TICKET_NUMBER,EN_NAME,CH_NAME,STATUS,JDBC,PLATFORM,CRON_EXPRESSION,SCRIPT,MAIL_TO,MAIL_CC,MAIL_BCC,MAIL_SUBJECT,MAIL_CONTENT,CREATE_BY,CREATE_TIME,UPDATE_BY,UPDATE_TIME,REQUESTER,LAST_EXPORT) VALUES
(326,'EID-326:MID-307','ASI-15214','( EID-326:MID-307 ) PF1 ASI-15214 Lottery Loss Data(RC Tools)','( EID-326:MID-307 ) PF1 ASI-15214 彩种大额亏损(RC Tools)','1','ub8-pf1-sec','1.0','* * * * * ?','with aa as
(select trunc(max(BIZ_TIME)) time, game_code game, sum(sum_bet_actual-SUM_WIN_ACTUAL-SUM_RET_AGENT-SUM_RET_BET) profit from LOTT_NEW_A3D1.RPT_R_GAME_STATISTIC
where trunc(BIZ_TIME) = trunc(sysdate)
group by game_code), bb as (
select trunc(BIZ_TIME) time, sum(sum_bet_actual-SUM_WIN_ACTUAL-SUM_RET_BET-SUM_RET_AGENT) platProfit from LOTT_NEW_A3D1.RPT_R_GAME_STATISTIC
where trunc(BIZ_TIME) = trunc(sysdate)
group by trunc(BIZ_TIME))
select aa.game 彩种, aa.profit 彩种当日盈亏, bb.platProfit 当日平台盈亏 from aa left join bb on aa.time = bb.time
where aa.profit < -200000
order by aa.profit asc','4ffc1532.my-cpg.com@apac.teams.ms','','','( EID-326:MID-307 ) PF1 ASI-15214 彩种大额亏损(WA Tools)','Please see attached file of( EID-326:MID-307 ) PF1 ASI-15214 彩种大额亏损(WA Tools)

Thank you.','lance','2019-11-25 14:46:25','lance','2020-06-22 10:20:15','DAU',null);
INSERT INTO MONI_EXPORT (ID,asid,TICKET_NUMBER,EN_NAME,CH_NAME,STATUS,JDBC,PLATFORM,CRON_EXPRESSION,SCRIPT,MAIL_TO,MAIL_CC,MAIL_BCC,MAIL_SUBJECT,MAIL_CONTENT,CREATE_BY,CREATE_TIME,UPDATE_BY,UPDATE_TIME,REQUESTER,LAST_EXPORT) VALUES
(327,'EID-327:MID-210','ASI-15214','( EID-327:MID-210 ) PF1 ASI-15214 Customer Loss Data(RC Tools)','( EID-327:MID-210 ) PF1 ASI-15214 用户亏损数据(RC Tools)','1','ub8-pf1-sec','1.0','* * * * * ?','select * from (with aa as
(select BIZ_TIME time, accounts , sum(SUM_WIN_ACTUAL-sum_bet_actual) profit, sum(sum_bet_actual-SUM_WIN_ACTUAL-SUM_RET_AGENT-SUM_RET_BET) platformloss from LOTT_NEW_A3D1.RPT_R_CUSTOMER_STATISTIC
where BIZ_TIME > sysdate -1/24
group by accounts, biz_time)
select aa.accounts 帐号, sum(aa.profit) 用户一小時盈亏 from aa
group by aa.accounts having sum(aa.profit) > ''150000''
order by sum(aa.profit) desc)','4ffc1532.my-cpg.com@apac.teams.ms','','','( EID-327:MID-210 ) PF1 ASI-15214 用户亏损数据(RC Tools)','Please see attached file of ( EID-327:MID-210 ) PF1 ASI-15214 用户亏损数据(RC Tools)
Thank you.','lance','2019-11-25 15:03:26','lance','2020-06-22 10:21:19','DAU',null);
INSERT INTO MONI_EXPORT (ID,asid,TICKET_NUMBER,EN_NAME,CH_NAME,STATUS,JDBC,PLATFORM,CRON_EXPRESSION,SCRIPT,MAIL_TO,MAIL_CC,MAIL_BCC,MAIL_SUBJECT,MAIL_CONTENT,CREATE_BY,CREATE_TIME,UPDATE_BY,UPDATE_TIME,REQUESTER,LAST_EXPORT) VALUES
(328,'EID-328:MID-228','ASI-15214','( EID-328:MID-228 ) PF1 ASI-15214 Order Data Fetch(RC Tools)','( EID-328:MID-228 ) PF1 ASI-15214 订单告警(RC Tools)','1','ub8-pf1-sec','1.0','* * * * * ?','select orderno 订单号码,
accounts 投注帐号,
sum_bet_actual 投注金额,
sum_win_actual 中奖金额,
round(sum_win_actual/sum_bet_actual) 返奖率,
sum_bet_actual-sum_win_actual- sum_ret_bet- sum_ret_agent 平台损失,
bet_time 投注时间,
EXPECTED_TIME 表定开奖时间,
into_time 实际开奖时间,
numero 期号,
win_number 开奖号码
from LOTT_NEW_A3D1.RPT_R_ALERT_ORDER
where into_time > sysdate -1/24
and ALERT_TYPE = ''ORDER''
and ((sum_bet_actual <= 100 and sum_win_actual >= 5000 and round(sum_win_actual/sum_bet_actual) >= 100)
or (sum_bet_actual > 100 and sum_win_actual >= 5000 and round(sum_win_actual/sum_bet_actual) >= 40)
or (sum_win_actual >= 20000))
order by into_time desc','4ffc1532.my-cpg.com@apac.teams.ms','','','( EID-328:MID-228 ) PF1 ASI-15214 订单告警(RC Tools)','Please see attached file of ( EID-328:MID-228 ) PF1 ASI-15214 订单告警(RC Tools) Thank you.','lance','2019-11-25 15:20:46','lance','2020-06-22 10:20:47','DAU',null);
INSERT INTO MONI_EXPORT (ID,asid,TICKET_NUMBER,EN_NAME,CH_NAME,STATUS,JDBC,PLATFORM,CRON_EXPRESSION,SCRIPT,MAIL_TO,MAIL_CC,MAIL_BCC,MAIL_SUBJECT,MAIL_CONTENT,CREATE_BY,CREATE_TIME,UPDATE_BY,UPDATE_TIME,REQUESTER,LAST_EXPORT) VALUES
(329,'EID-329:MID-233','ASI-15214','( EID-329:MID-233 ) PF1 ASI-15214 Loss Play ID Data fetch(RC Tools)','( EID-329:MID-233 ) PF1 ASI-15214 玩法亏损告警(RC Tools)','1','ub8-pf1-sec','1.0','* * * * * ?','select CREATE_TIME 时间,
game_code 彩种,
play_name 玩法组,
play_group_name 玩法,
sum_bet_actual 投注额,
sum_win_actual 中奖额,
sum_ret_bet 投注返点,
sum_ret_agent 代理返点,
sum_bet_actual-sum_win_actual-sum_ret_bet-sum_ret_agent 当天利润,
round((sum_bet_actual-sum_win_actual-sum_ret_bet-sum_ret_agent )/sum_bet_actual*100) 利润率
from LOTT_NEW_A3D1.RPT_R_ALERT_PLAY
where CREATE_TIME > sysdate -1/24
and sum_win_actual > 200000
order by 利润率 asc','4ffc1532.my-cpg.com@apac.teams.ms','','','( EID-329:MID-233 ) PF1 ASI-15214 玩法亏损告警(RC Tools)','Please see attached file of ( EID-329:MID-233 ) PF1 ASI-15214 玩法亏损告警(RC Tools)
Thank you.','lance','2019-11-25 15:44:42','lance','2020-06-22 10:19:45','DAU',null);
INSERT INTO MONI_EXPORT (ID,asid,TICKET_NUMBER,EN_NAME,CH_NAME,STATUS,JDBC,PLATFORM,CRON_EXPRESSION,SCRIPT,MAIL_TO,MAIL_CC,MAIL_BCC,MAIL_SUBJECT,MAIL_CONTENT,CREATE_BY,CREATE_TIME,UPDATE_BY,UPDATE_TIME,REQUESTER,LAST_EXPORT) VALUES
(331,'EID-331:MID-300','ASI-15283 ','( EID-331:MID-300 ) PF1 ASI-15283 Too many deposit request','( EID-331:MID-300 ) PF1 ASI-15283 频繁申请充值监控报警','1','ub8-pf1-sec','1.0','2 0/59 * * * ?','select REC.ACCOUNTS 用戶, count(1) 嘗試充值次數, UUID from lott_new_a3d1.LOTT_VW_CHARFE_REC REC
left join (
select A.ACCOUNTS, A.LOGIN_TIME, UUID from lott_new_a3d1.ACCOUNTS_LOGIN_LOGS A
inner join (
select ACCOUNTS ,MAX(LOGIN_TIME) as time from lott_new_a3d1.ACCOUNTS_LOGIN_LOGS
group by ACCOUNTS ) B
on A.ACCOUNTS = B.ACCOUNTS and A.LOGIN_TIME = B.time
) logs on REC.ACCOUNTS = logs.ACCOUNTS
where CHARFETIME > sysdate -1/24
and ARRIVAL_AMOUNT is null
and state != 0
group by REC.accounts, bank_id, UUID
having count(1) > 10','3d95b875.my-cpg.com@apac.teams.ms','','','( EID-331:MID-300 ) PF1 ASI-15283 频繁申请充值监控报警','Please see attached file of ( EID-331:MID-300 ) PF1 ASI-15283 频繁申请充值监控报警

Thank you.','kevin','2019-11-27 18:00:21','raphael','2020-11-25 10:26:14','DAU',null);
INSERT INTO MONI_EXPORT (ID,asid,TICKET_NUMBER,EN_NAME,CH_NAME,STATUS,JDBC,PLATFORM,CRON_EXPRESSION,SCRIPT,MAIL_TO,MAIL_CC,MAIL_BCC,MAIL_SUBJECT,MAIL_CONTENT,CREATE_BY,CREATE_TIME,UPDATE_BY,UPDATE_TIME,REQUESTER,LAST_EXPORT) VALUES
(332,'EID-332:MID-301','ASI-15283','( EID-332:MID-301 ) PF2 ASI-15283 Apply Deposit but not arrival','( EID-332:MID-301 ) PF2 ASI-15283 频繁申请充值监控报警','1','ub8-pf5-core-sec','5.0','3 0/59 * * * ?','SELECT
    a.*,
    b.last_login_time,
    c.uuid,
    c.login_time
FROM
    (
        SELECT
            customer_id,
            customer_name,
            bank_id,
            COUNT(1) cnt
        FROM
            core.bps_deposit_record_vw rec
        WHERE
            request_time > SYSDATE - 5 / 24
            AND arrival_time IS NULL
        GROUP BY
            customer_id,
            customer_name,
            bank_id
        HAVING
            COUNT(1) > 10
    ) a
    INNER JOIN core.us_customer_profile_vw b ON a.customer_id = b.customer_id
    LEFT JOIN (
        SELECT
            customer_id,
            customer_name,
            login_time,
            uuid
        FROM
            core.us_customer_login_log
    ) c ON c.login_time >= b.last_login_time
           AND b.customer_id = c.customer_id','3d95b875.my-cpg.com@apac.teams.ms','','','( EID-332:MID-301 ) PF2 ASI-15283 频繁申请充值监控报警','Please see attached file of ( EID-332:MID-301 ) PF2 ASI-15283 频繁申请充值监控报警

Thank you.','kevin','2019-11-27 18:02:46','raphael','2020-12-01 15:17:53','DAU',null);
INSERT INTO MONI_EXPORT (ID,asid,TICKET_NUMBER,EN_NAME,CH_NAME,STATUS,JDBC,PLATFORM,CRON_EXPRESSION,SCRIPT,MAIL_TO,MAIL_CC,MAIL_BCC,MAIL_SUBJECT,MAIL_CONTENT,CREATE_BY,CREATE_TIME,UPDATE_BY,UPDATE_TIME,REQUESTER,LAST_EXPORT) VALUES
(333,'EID-333:MID-302','ASI-15214','( EID-333:MID-302 ) PF2 Loss Customer Data for WA tools ','( EID-333:MID-302 )  PF2  審單工具平台玩家虧損資料讀取','1','ub8-pf5-core-sec','5.0','0 59 * * * ?','with aa as
 (select CREATE_TIME time, CUSTOMER_NAME , sum(SUM_WIN_AMOUNT-SUM_BET_AMOUNT) profit, sum(SUM_BET_AMOUNT-SUM_WIN_AMOUNT-SUM_REBATE) platformloss
from core.RALERT_CUSTOMER_LIST
where CREATE_TIME > sysdate -1/24
group by CUSTOMER_NAME , CREATE_TIME)
select CUSTOMER_NAME 帐号, sum(aa.profit) 用户一小時盈亏 from aa
group by CUSTOMER_NAME
having sum(aa.profit) > ''150000''','4ffc1532.my-cpg.com@apac.teams.ms','','','( EID-333:MID-302 )  PF2  審單工具平台玩家虧損資料讀取','Please see attached file of ( EID-333:MID-302 )  PF2  審單工具平台玩家虧損資料讀取

Thank you.','camelle.d','2019-12-14 18:54:30','camelle.d','2019-12-14 19:05:26','DAU',null);
INSERT INTO MONI_EXPORT (ID,asid,TICKET_NUMBER,EN_NAME,CH_NAME,STATUS,JDBC,PLATFORM,CRON_EXPRESSION,SCRIPT,MAIL_TO,MAIL_CC,MAIL_BCC,MAIL_SUBJECT,MAIL_CONTENT,CREATE_BY,CREATE_TIME,UPDATE_BY,UPDATE_TIME,REQUESTER,LAST_EXPORT) VALUES
(334,'EID-334:MID-303','','( EID-334:MID-303 ) PF2 pfLoss for RC tools','( EID-334:MID-303 ) PF2 審單工具平台虧損資料讀取','1','ub8-pf5-core-sec','5.0','0 03 20 * * ?','with aa as
(select trunc(max(BIZ_DATE)) time, game_code game, sum(SUM_BET_ACTUAL-SUM_WIN_ACTUAL-SUM_RET_AGENT-SUM_RET_BET) profit from core.RPT6_TEAM_LOTT_GAME_BT_TODAY
where trunc(BIZ_DATE) = trunc(sysdate)
group by game_code), bb as (
select trunc(BIZ_DATE) time, sum(SUM_BET_ACTUAL-SUM_WIN_ACTUAL-SUM_RET_BET-SUM_RET_AGENT) platProfit from core.RPT6_TEAM_LOTT_GAME_BT_TODAY
where trunc(BIZ_DATE) = trunc(sysdate)
group by trunc(BIZ_DATE))
select aa.game 彩种, aa.profit 彩种当日盈亏, bb.platProfit 当日平台盈亏 from aa left join bb on aa.time = bb.time
where aa.profit < -50000','4ffc1532.my-cpg.com@apac.teams.ms','','','( EID-334:MID-303 ) PF2 審單工具平台虧損資料讀取','Please see attached file of ( EID-334:MID-303 ) PF2 審單工具平台虧損資料讀取

Thank you.','camelle.d','2019-12-14 19:07:02','denice.d','2021-02-05 22:32:01','DAU',null);
INSERT INTO MONI_EXPORT (ID,asid,TICKET_NUMBER,EN_NAME,CH_NAME,STATUS,JDBC,PLATFORM,CRON_EXPRESSION,SCRIPT,MAIL_TO,MAIL_CC,MAIL_BCC,MAIL_SUBJECT,MAIL_CONTENT,CREATE_BY,CREATE_TIME,UPDATE_BY,UPDATE_TIME,REQUESTER,LAST_EXPORT) VALUES
(335,'EID-335:MID-304','','( EID-335:MID-304 ) PF2 gameLoss for RC tools','( EID-335:MID-304 )  PF2 審單工具遊戲虧損資料讀取','1','ub8-pf5-core-sec','5.0','0 * */1 * * ?','select GAME_CODE 游戏彩种,
CUSTOMER_NAME 中奖帐号,
ORDER_NUM 中奖订单号,
NUMERO 中奖期号,
TOTAL_ACTUAL_BET_AMOUNT 投注金额,
WIN_AMOUNT 中奖总额,
PLATFORM_LOSS  平台损失,
WINNING_TIME 表定开奖时间,
DRAW_TIME 实际开奖时间,
BETTING_TIME 投注时间,
WINNING_NUMBER 开奖号码
from core.RALERT_ORDER_LIST
WHERE DRAW_TIME > sysdate -1/24
order by DRAW_TIME desc','4ffc1532.my-cpg.com@apac.teams.ms','','','( EID-335:MID-304 )  PF2 審單工具遊戲虧損資料讀取','Please see attached file of ( EID-335:MID-304 )  PF2 審單工具遊戲虧損資料讀取

Thank you.','camelle.d','2019-12-14 19:09:38','camelle.d','2020-03-06 19:04:39','DAU',null);
INSERT INTO MONI_EXPORT (ID,asid,TICKET_NUMBER,EN_NAME,CH_NAME,STATUS,JDBC,PLATFORM,CRON_EXPRESSION,SCRIPT,MAIL_TO,MAIL_CC,MAIL_BCC,MAIL_SUBJECT,MAIL_CONTENT,CREATE_BY,CREATE_TIME,UPDATE_BY,UPDATE_TIME,REQUESTER,LAST_EXPORT) VALUES
(336,'EID-336:MID-305','','( EID-336:MID-305 ) PF2 Order Data Fetch for RC tools','( EID-336:MID-305 ) PF2 審單工具訂單告警','1','ub8-pf5-core-sec','5.0','0 59 */1 * * ?','select ORDER_NUM 订单号码,
CUSTOMER_NAME 投注帐号,
TOTAL_ACTUAL_BET_AMOUNT 投注金额,
WIN_AMOUNT 中奖金额,
round(WIN_AMOUNT/TOTAL_ACTUAL_BET_AMOUNT) 返奖率,
TOTAL_ACTUAL_BET_AMOUNT-WIN_AMOUNT 平台损失,
BETTING_TIME 投注时间,
WINNING_TIME 表定开奖时间,
DRAW_TIME 实际开奖时间,
numero 期号,
WINNING_NUMBER 开奖号码
from core.RALERT_ORDER_LIST
where DRAW_TIME > sysdate -1/24
and ((TOTAL_ACTUAL_BET_AMOUNT <= 100 and WIN_AMOUNT >= 5000 and round(WIN_AMOUNT/TOTAL_ACTUAL_BET_AMOUNT) >= 100)
or (TOTAL_ACTUAL_BET_AMOUNT > 100 and WIN_AMOUNT >= 5000 and round(WIN_AMOUNT/TOTAL_ACTUAL_BET_AMOUNT) >= 40)
or (WIN_AMOUNT >= 20000))
order by DRAW_TIME desc','4ffc1532.my-cpg.com@apac.teams.ms','','','( EID-336:MID-305 ) PF2 審單工具訂單告警','Please see attached file of ( EID-336:MID-305 ) PF2 審單工具訂單告警

Thank you.','camelle.d','2019-12-14 19:12:39','camelle.d','2020-03-06 19:04:58','DAU',null);
INSERT INTO MONI_EXPORT (ID,asid,TICKET_NUMBER,EN_NAME,CH_NAME,STATUS,JDBC,PLATFORM,CRON_EXPRESSION,SCRIPT,MAIL_TO,MAIL_CC,MAIL_BCC,MAIL_SUBJECT,MAIL_CONTENT,CREATE_BY,CREATE_TIME,UPDATE_BY,UPDATE_TIME,REQUESTER,LAST_EXPORT) VALUES
(337,'EID-337:MID-309','ASI-15214','( EID-337:MID-309 ) PF2 Play Warning Data fetch for RC tools','( EID-337:MID-309 ) PF2 審單工具玩法虧損資料讀取','1','ub8-pf5-core-sec','5.0','0 58 * * * ?','SELECT sysdate 时间, a.game_code 彩种, c.play_name 玩法组,
 sum(a.ACTUAL_BET_AMOUNT) 投注额,sum(a.WIN_AMOUNT) 中奖额, sum(a.ACTUAL_BET_AMOUNT)*0.0495 投注返点, sum(a.ACTUAL_BET_AMOUNT)*0.0109 代理返点,
 sum(a.ACTUAL_BET_AMOUNT)-sum(a.WIN_AMOUNT) 当天利润,
 ROUND(((sum(a.ACTUAL_BET_AMOUNT)-sum(a.WIN_AMOUNT*1.0604))/sum(a.ACTUAL_BET_AMOUNT))*100,2)||''%'' 利潤率
FROM core.LGS_ORDER_DETAIL a join (select ORDER_MASTER_ID, PLAY_ID from core.LGS_ORDER_INFO where END_WINNING_TIME> sysdate -1/24 group by ORDER_MASTER_ID, play_id) b on a.ORDER_MASTER_ID = b.ORDER_MASTER_ID join core.LGS_PLAY_MENU c on b.play_id = c.play_id join core.lgs_order_master d on a.ORDER_MASTER_ID = d.ORDER_MASTER_ID
where a.DRAW_TIME > sysdate -1/24
and a.win_amount > 185000
group by a.game_code, c.play_name','4ffc1532.my-cpg.com@apac.teams.ms','','','( EID-337:MID-309 ) PF2 審單工具玩法虧損資料讀取','Please see attached file of ( EID-337:MID-309 ) PF2 審單工具玩法虧損資料讀取

Thank you.','camelle.d','2019-12-14 19:15:25','riel_john','2020-12-15 17:24:28','DAU',null);
INSERT INTO MONI_EXPORT (ID,asid,TICKET_NUMBER,EN_NAME,CH_NAME,STATUS,JDBC,PLATFORM,CRON_EXPRESSION,SCRIPT,MAIL_TO,MAIL_CC,MAIL_BCC,MAIL_SUBJECT,MAIL_CONTENT,CREATE_BY,CREATE_TIME,UPDATE_BY,UPDATE_TIME,REQUESTER,LAST_EXPORT) VALUES
(340,'EID-340:MID-311','ASI-15214','( EID-340:MID-311) PF1 ASI-15214 Loss numero data fetch(RC Tools)','( EID-340:MID-311 ) PF1 ASI-15214 期亏损告警(RC Tools)','1','ub8-pf1-sec','1.0','* * * * * ?','with WW  as
(select  CARRY_NUMERO 期號, SORTID 彩種, sum(BILL_AMOUNT) 中獎額
from lott_new_a3d1.LOTT_ACCOUNTS_BILL
where BILLTYPE = ''2005''
and BILL_TIME > sysdate -1/24
group by SORTID,CARRY_NUMERO),

RR as
(select NUMERO 期號, sortid 彩種, sum(TOTAL_AMOUNT) 投注額
from lott_new_a3d1.LOTT_FC3D_ORDER_MAIN
where NUMERO in (select WW.期號 from WW)
and STATUS in (020, 004, 005, 011, 009)
group by NUMERO,sortid)

select WW.期號 , RR.投注額, WW.中獎額,
(case WW.彩種
	WHEN ''20005'' THEN ''优游快三''
	WHEN ''331'' THEN ''天津時時彩''
	WHEN ''443'' THEN ''上海時時樂''
	WHEN ''20000'' THEN ''北京快樂8''
	WHEN ''20004'' THEN ''优游快乐彩''
	WHEN ''3'' THEN ''福彩3D''
	WHEN ''5000'' THEN ''优游30秒彩''
	WHEN ''71'' THEN ''山東11X5''
	WHEN ''182'' THEN ''體彩P3P5''
	WHEN ''108'' THEN ''廣東11X5''
	WHEN ''811'' THEN ''优游时时彩''
	WHEN ''20007'' THEN ''优游骰宝''
	WHEN ''219'' THEN ''新疆時時彩''
	WHEN ''475'' THEN ''重慶時時彩''
	WHEN ''10000'' THEN ''淘宝两分彩''
	WHEN ''20006'' THEN ''江蘇快三''
	WHEN ''923'' THEN ''优游11选5''
	WHEN ''1242'' THEN ''优游分分彩''
	WHEN ''34'' THEN ''江西11X5''
	WHEN ''699'' THEN ''黑龍江時時彩''
END)彩種
from WW Right join RR on WW.期號 = RR.期號
where (中獎額 > 100000 and 中獎額/投注額 > 20) or 中獎額-投注額 > 200000
order by 期號,彩種','4ffc1532.my-cpg.com@apac.teams.ms','','','( EID-340:MID-311 ) PF1 ASI-15214 期号亏损告警(RC Tools)','Please see attached file of ( EID-340:MID-311 ) PF1 ASI-15214 期号亏损告警(RC Tools)
Thank you.','lance','2019-12-23 15:57:12','camelle.d','2020-03-06 19:07:44','DAU',null);
INSERT INTO MONI_EXPORT (ID,asid,TICKET_NUMBER,EN_NAME,CH_NAME,STATUS,JDBC,PLATFORM,CRON_EXPRESSION,SCRIPT,MAIL_TO,MAIL_CC,MAIL_BCC,MAIL_SUBJECT,MAIL_CONTENT,CREATE_BY,CREATE_TIME,UPDATE_BY,UPDATE_TIME,REQUESTER,LAST_EXPORT) VALUES
(341,'EID-341:MID-316','ASI-15554','( EID-341:MID-316 ) PF2 BE ASI-15554 [DIRECT_CUSTOMER mgmt] bulk export monitor','( EID-341:MID-316 ) PF2後台[直客用戶管理]大量導出告警','1','ub8-pf5-core-sec','5.0','0 0 12 ? * * *','select * from CORE.OP_DIRECT_CUSTOMER_LOG where OPERATION_TYPE =''export'' and RESULT_COUNT >50 and OPERATION_TIME > sysdate -15/24/60','jason.liang@yxunistar.com;penny.w@my-cpg.com','','','( EID-341:MID-316 ) PF2後台[直客用戶管理]大量導出告警','Please see attached file of ( EID-340:MID-316 ) PF2後台[直客用戶管理]大量導出告警 export monitor

Thank you.','denice.d','2020-01-20 18:28:47','jason','2020-09-21 17:25:06','AS',null);
INSERT INTO MONI_EXPORT (ID,asid,TICKET_NUMBER,EN_NAME,CH_NAME,STATUS,JDBC,PLATFORM,CRON_EXPRESSION,SCRIPT,MAIL_TO,MAIL_CC,MAIL_BCC,MAIL_SUBJECT,MAIL_CONTENT,CREATE_BY,CREATE_TIME,UPDATE_BY,UPDATE_TIME,REQUESTER,LAST_EXPORT) VALUES
(342,'EID-342:MID-317','ASI-15553','( EID-342:MID-317 ) PF2 BE [DIRECT_CUSTOMER mgmt] operation monitoring during non-working hours','( EID-342:MID-317 ) PF2後台[直客用戶管理]在非工作時間有操作行為','1','ub8-pf5-core-sec','5.0','0 10 * ? * * *','select * from CORE.OP_DIRECT_CUSTOMER_LOG where TO_CHAR(OPERATION_TIME,''HH24'') not between 8 and 20 and OPERATION_TIME > sysdate -15/24/60','jason.liang@yxunistar.com','','','( EID-342:MID-317 ) PF2後台[直客用戶管理]在非工作時間有操作行為','Please see attached file of ( EID-342:MID-317 ) PF2後台[直客用戶管理]在非工作時間有操作行為
Thank you.','Denmark','2020-01-20 18:33:19','Denmark','2020-01-20 18:54:28','AS',null);
INSERT INTO MONI_EXPORT (ID,asid,TICKET_NUMBER,EN_NAME,CH_NAME,STATUS,JDBC,PLATFORM,CRON_EXPRESSION,SCRIPT,MAIL_TO,MAIL_CC,MAIL_BCC,MAIL_SUBJECT,MAIL_CONTENT,CREATE_BY,CREATE_TIME,UPDATE_BY,UPDATE_TIME,REQUESTER,LAST_EXPORT) VALUES
(343,'EID-343:MID-318','ASI-15682','( EID-343:MID-318 ) PF2 Third Party Game Loss','( EID-343:MID-318 ) PF2 審單工具"第三方遊戲平台"虧損資料讀取','1','ub8-pf5-core-sec','5.0','* * * * * ?','with aa as(
select sum(amount) 總中獎,TGI_ID  from core.LOTT_3RD_ACCOUNTS_BILL_DATA
where bill_type = ''2005''
and bill_time > trunc(sysdate)
group by TGI_ID),
bb as (
select sum(amount) 總投注,TGI_ID  from core.LOTT_3RD_ACCOUNTS_BILL_DATA
where bill_type = ''2007''
and bill_time > trunc(sysdate)
group by TGI_ID),
cc as (
select (aa.總中獎 - bb.總投注) 平台虧損, aa.TGI_ID
from aa left join bb on aa.TGI_ID = bb.TGI_ID
where (aa.TGI_ID=9 AND (aa.總中獎 - bb.總投注) >= 80000)
or (aa.TGI_ID!=9 AND (aa.總中獎 - bb.總投注) >= 50000)
),
dd as (
select TGI_ID, ACCOUNTS, SUM(CASE WHEN BILL_TYPE=2005 THEN AMOUNT WHEN BILL_TYPE=2007 THEN -AMOUNT ELSE 0 END) 平台虧損 from core.LOTT_3RD_ACCOUNTS_BILL_DATA
where bill_time > trunc(sysdate)
group by TGI_ID, ACCOUNTS
)

select
(case TGI_ID
        WHEN 1 THEN ''MGS''
        WHEN 2 THEN ''LX''
        WHEN 3 THEN ''連環奪寶''
        WHEN 4 THEN ''PT''
        WHEN 6 THEN ''TTG''
        WHEN 7 THEN ''KY''
        WHEN 8 THEN ''FMC''
        WHEN 9 THEN ''AG''
END)供應商, ACCOUNTS ,平台虧損 from (
select TGI_ID,ACCOUNTS,平台虧損 from (
select * from (
select ROW_NUMBER() OVER(PARTITION BY TGI_ID ORDER BY 平台虧損 desc) rn, dd.* from dd
where 平台虧損 > 0
and TGI_ID in (select TGI_ID from cc))
where rn <= 10
)
UNION ALL
select cc.TGI_ID,null, cc.平台虧損 from cc
)
order by TGI_ID,平台虧損 desc','4ffc1532.my-cpg.com@apac.teams.ms','','','(EID-343:MID-318) PF2 審單工具','Please see attached file of (EID-343:MID-318) PF2 審單工具"第三方遊戲平台"虧損資料讀取 Thank you.
','lance','2020-02-05 16:57:47','raphael','2020-03-04 11:16:43','DAU',null);
INSERT INTO MONI_EXPORT (ID,asid,TICKET_NUMBER,EN_NAME,CH_NAME,STATUS,JDBC,PLATFORM,CRON_EXPRESSION,SCRIPT,MAIL_TO,MAIL_CC,MAIL_BCC,MAIL_SUBJECT,MAIL_CONTENT,CREATE_BY,CREATE_TIME,UPDATE_BY,UPDATE_TIME,REQUESTER,LAST_EXPORT) VALUES
(344,'EID-344:MID-319','ASI-15682','( EID-344:MID-319 ) PF1 Third Party Game Loss','( EID-344:MID-319 ) PF1 審單工具"第三方遊戲平台"虧損資料讀取','1','ub8-pf1-sec','1.0','* * * * * ?','with aa as(
select sum(amount) 中獎, TGI_ID  from LOTT_new_A3D1.LOTT_3RD_ACCOUNTS_BILL_DATA
where bill_type = ''2005''
and bill_time > trunc(sysdate) and bill_time < trunc(sysdate + 1)
group by TGI_ID
UNION ALL
select sum(tx_amount) 中獎, decode(MERCHANT_NAME,''KAIYUAN'',7, ''FMC'', 8, 0) TGI_ID  from LOTT_NEW_A3D1.LOTT_EXT_GAME_TX
where tx_type = ''2005''
and tx_time > trunc(sysdate) and tx_time < trunc(sysdate + 1)
group by MERCHANT_NAME
),
bb as (
select sum(amount) 投注,TGI_ID  from LOTT_new_A3D1.LOTT_3RD_ACCOUNTS_BILL_DATA
where bill_type = ''2007''
and bill_time > trunc(sysdate)and bill_time < trunc(sysdate + 1)
group by TGI_ID
UNION ALL
select sum(-tx_amount) 投注, decode(MERCHANT_NAME,''KAIYUAN'',7, ''FMC'', 8, 0) TGI_ID from LOTT_NEW_A3D1.LOTT_EXT_GAME_TX
where tx_type = ''2007''
and tx_time > trunc(sysdate) and tx_time < trunc(sysdate + 1)
group by MERCHANT_NAME
),
cc as (
select (aa.中獎 - bb.投注) 平台虧損, aa.TGI_ID
from aa left join bb on aa.TGI_ID = bb.TGI_ID
where (aa.TGI_ID=9 AND (aa.中獎 - bb.投注) >= 80000)
or (aa.TGI_ID!=9 AND (aa.中獎 - bb.投注) >= 50000)
),
dd as (
select TGI_ID, ACCOUNTS, SUM(CASE WHEN BILL_TYPE=2005 THEN AMOUNT WHEN BILL_TYPE=2007 THEN -AMOUNT ELSE 0 END) 平台虧損 from LOTT_new_A3D1.LOTT_3RD_ACCOUNTS_BILL_DATA
where bill_time > trunc(sysdate) and bill_time < trunc(sysdate + 1)
group by TGI_ID, ACCOUNTS
UNION ALL
select decode(MERCHANT_NAME,''KAIYUAN'',7, ''FMC'', 8, 0) TGI_ID, ACCOUNT_NAME as ACCOUNTS, SUM(CASE WHEN TX_TYPE=2005 THEN TX_AMOUNT WHEN TX_TYPE=2007 THEN TX_AMOUNT ELSE 0 END) 平台虧損 from LOTT_NEW_A3D1.LOTT_EXT_GAME_TX
where tx_time > trunc(sysdate) and tx_time < trunc(sysdate + 1)
group by MERCHANT_NAME, ACCOUNT_NAME
)

select
(case TGI_ID
        WHEN 1 THEN ''MGS''
        WHEN 2 THEN ''LX''
        WHEN 3 THEN ''連環奪寶''
        WHEN 4 THEN ''PT''
        WHEN 6 THEN ''TTG''
        WHEN 7 THEN ''KY''
        WHEN 8 THEN ''FMC''
        WHEN 9 THEN ''AG''
END)供應商, ACCOUNTS ,平台虧損 from (
select TGI_ID,ACCOUNTS,平台虧損 from (
select * from (
select ROW_NUMBER() OVER(PARTITION BY TGI_ID ORDER BY 平台虧損 desc) rn, dd.* from dd
where 平台虧損 > 0
and TGI_ID in (select TGI_ID from cc))
where rn <= 10
)
UNION ALL
select cc.TGI_ID,null, cc.平台虧損 from cc)
order by TGI_ID, 平台虧損 desc','4ffc1532.my-cpg.com@apac.teams.ms','','','( EID-344:MID-319 ) PF1 審單工具','Please see attached file of ( EID-344:MID-319 ) PF1 審單工具"第三方遊戲平台"虧損資料讀取 Thank you.','riel_john','2020-02-05 19:24:32','raphael','2020-03-04 11:16:59','DAU',null);
INSERT INTO MONI_EXPORT (ID,asid,TICKET_NUMBER,EN_NAME,CH_NAME,STATUS,JDBC,PLATFORM,CRON_EXPRESSION,SCRIPT,MAIL_TO,MAIL_CC,MAIL_BCC,MAIL_SUBJECT,MAIL_CONTENT,CREATE_BY,CREATE_TIME,UPDATE_BY,UPDATE_TIME,REQUESTER,LAST_EXPORT) VALUES
(347,'EID-347:MID337',' ASI-16221','(EID-347:MID337) PF1 ASI-16221 Withdrawal Frequency Monitoring','(EID-347:MID337) PF1 ASI-16221 提现次数监控','1','ub8-pf1-sec','1.0','* * * * * ?','with aa as (select a.ACCOUNTS, a.AMOUNT, a.REQ_TIME, a.STATE, case when b.VIP_GID is null then ''NO'' else ''YES'' end as VIP from LOTT_NEW_A3D1.LOTT_ATM_REQ a inner join LOTT_NEW_A3D1.LOTT_VW_MEMBER_INFO b on a.accounts=b.accounts)
select * from (select accounts,vip, sum(amount) as total_amount, count(*) as number_of_withdrawal from aa where REQ_TIME >= trunc(sysdate) and STATE=2 group by accounts, vip) a where NUMBER_OF_WITHDRAWAL>5','dau-wa@my-cpg.com','4ffc1532.my-cpg.com@apac.teams.ms','','(EID-347:MID337) PF1 ASI-16221 提现次数监控','Please see attached file of PF1 ASI-16221 提现次数监控

Thank you.','riel_john','2020-05-19 18:15:48','lance','2021-03-31 11:19:52','DAU',null);
INSERT INTO MONI_EXPORT (ID,asid,TICKET_NUMBER,EN_NAME,CH_NAME,STATUS,JDBC,PLATFORM,CRON_EXPRESSION,SCRIPT,MAIL_TO,MAIL_CC,MAIL_BCC,MAIL_SUBJECT,MAIL_CONTENT,CREATE_BY,CREATE_TIME,UPDATE_BY,UPDATE_TIME,REQUESTER,LAST_EXPORT) VALUES
(348,'EID-348:MID338',' ASI-16221','(EID-348:MID338) PF2 ASI-16221 Withdrawal Frequency Monitoring','(EID-348:MID338) PF2 ASI-16221 提现次数监控','1','ub8-pf5-core','5.0','* * * * * ?','with list as (select customer_name, customer_id , count(*) times from core.BPS_WITHDRAW_RECORD_VW
where REQUEST_TIME >= trunc(sysdate)
and STATUS = 4
group by customer_name, customer_id
having count(*)>5)
select list.customer_name, list.times,decode(mapper.customer_id, null, ''REGULAR'', ''VIP'') as VIP from list left join core.US_CUSTOMER_GROUP_MAPPER mapper on list.customer_id = mapper.customer_id and mapper.GROUP_ID=45','dau-wa@my-cpg.com','4ffc1532.my-cpg.com@apac.teams.ms','','(EID-348:MID338) PF2 ASI-16221 提现次数监控','Please see attached file of PF2 ASI-16221 提现次数监控

Thank you.','riel_john','2020-05-20 19:15:20','lance','2021-03-31 11:33:22','DAU',null);
INSERT INTO MONI_EXPORT (ID,asid,TICKET_NUMBER,EN_NAME,CH_NAME,STATUS,JDBC,PLATFORM,CRON_EXPRESSION,SCRIPT,MAIL_TO,MAIL_CC,MAIL_BCC,MAIL_SUBJECT,MAIL_CONTENT,CREATE_BY,CREATE_TIME,UPDATE_BY,UPDATE_TIME,REQUESTER,LAST_EXPORT) VALUES
(350,'EID-350:MID-326','ASI-16468','(EID-350:MID-326) PF2.0 Monitor ThirdParty:AG TYPE:2100','(EID-350:MID-326) 第三方:AG 資料類型:2100(對賭)數據','1','ub8-pf5-core-sec','5.0','* * * * * ?','select *
from core.lott_3rd_accounts_bill_data
where TGI_ID = 9
and bill_type = 2100
and bill_time > sysdate -1','lance.s@my-cpg.com','','','第三方:AG 資料類型:2100(對賭)數據','Please see attached file of ( EID-350:MID-326 ) PF2 AG遊戲廳對賭輸分數據 Thank you.','lance','2020-07-07 11:55:04','',null,'OP',null);
INSERT INTO MONI_EXPORT (ID,asid,TICKET_NUMBER,EN_NAME,CH_NAME,STATUS,JDBC,PLATFORM,CRON_EXPRESSION,SCRIPT,MAIL_TO,MAIL_CC,MAIL_BCC,MAIL_SUBJECT,MAIL_CONTENT,CREATE_BY,CREATE_TIME,UPDATE_BY,UPDATE_TIME,REQUESTER,LAST_EXPORT) VALUES
(352,'EID-352:MID-331','ASI-16987','PF1 MGS2 ''REFUND'' type data','PF1 MGS2 ''退款'' 數據','1','ub8-pf1-sec','1.0','* * * * * ?','select ACCOUNT_NAME 帳號,MERCHANT_NAME 供應商,TX_AMOUNT 退款額度,TX_TIME 時間
from lott_new_a3d1.LOTT_EXT_GAME_TX
where MERCHANT_NAME =  ''MGS2''
and TX_GAME_INFO like ''%REFUND%''
and TX_TIME > trunc(sysdate -1) and TX_TIME  < trunc(sysdate)','lance.s@my-cpg.com','','','( EID-352:MID-331 ) PF1 退款數據','Please see attached file of ( EID-352:MID-331 ) PF1 退款數據如附件，Thank you.','lance','2020-11-25 14:12:53','lance','2021-01-18 22:32:17','OP',null);
INSERT INTO MONI_EXPORT (ID,asid,TICKET_NUMBER,EN_NAME,CH_NAME,STATUS,JDBC,PLATFORM,CRON_EXPRESSION,SCRIPT,MAIL_TO,MAIL_CC,MAIL_BCC,MAIL_SUBJECT,MAIL_CONTENT,CREATE_BY,CREATE_TIME,UPDATE_BY,UPDATE_TIME,REQUESTER,LAST_EXPORT) VALUES
(357,'EID-357:MID-335','ASI-16896','Withdraw status is audit passed  but PED didn''t callback more than 7 days','PF2提現卡在審核通過超過七天','1','ub8-pf5-core-sec','5.0','* * * * * ?','select UB_ORDER_ID 流水號,CUSTOMER_NAME 客戶名,CREATE_TIME 創建時間,UPDATE_TIME 更新時間
from core.BPS_WITHDRAW_RECORD_VW where STATUS = 1
and REQUEST_TIME < sysdate -7 and REQUEST_TIME	> sysdate -180','c476abfd.my-cpg.com@apac.teams.ms','','','(EID-357:MID-335) PF2提現卡在審核通過超過七天','[OD ACTION]
請OD與PED確認卡在審核通過的提現申請是否出款，確認情況後再開單給AS L1協助Patch','lance','2021-03-31 11:01:55','lance','2021-03-31 11:10:35','OP',null);
INSERT INTO MONI_EXPORT (ID,asid,TICKET_NUMBER,EN_NAME,CH_NAME,STATUS,JDBC,PLATFORM,CRON_EXPRESSION,SCRIPT,MAIL_TO,MAIL_CC,MAIL_BCC,MAIL_SUBJECT,MAIL_CONTENT,CREATE_BY,CREATE_TIME,UPDATE_BY,UPDATE_TIME,REQUESTER,LAST_EXPORT) VALUES
(358,'EID-358:MID340','ASI-17793','(EID-358:MID340 ) PF2 ASI-16574  Monitor transfer to SASB','( EID-358:MID340 ) PF2 ASI-17793 体育钱包转账监控 ','1','ub8-pf5-core-sec','5.0','* * * * * ?','select CUSTOMER_NAME,AMOUNT,TX_TIME,GAME_CODE
from CORE.ACS_TRANSACTION
where TX_TYPE_ID=2008
and ACCOUNT_TYPE_ID =2
and GAME_CODE=''SABA''
and AMOUNT>50000
and TX_TIME BETWEEN (sysdate-6/24/60) AND ((sysdate-1/24/60))','dau-wa@my-cpg.com.my;beck.k@my-cpg.com','','','( EID-351:MID340 )PF2 ASI-17793 体育钱包转账监控 ','Please see attached file for ( EID-355 ) PF2 ASI-17793 体育钱包转账监控

exceed 50000 amount for transfer to SASB

Thank you.','mickey','2021-04-19 12:33:33','mickey','2021-04-22 15:10:57','DAU',null);
